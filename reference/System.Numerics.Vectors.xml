<?xml version="1.0" encoding="utf-8"?>
<assemblies>
  <assembly name="System.Numerics.Vectors" version="2.0.5.0">
    <attributes>
      <attribute name="System.Runtime.CompilerServices.TypeForwardedToAttribute">
        <properties>
          <property name="Destination" value="System.Numerics.Matrix3x2" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.TypeForwardedToAttribute">
        <properties>
          <property name="Destination" value="System.Numerics.Matrix4x4" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.TypeForwardedToAttribute">
        <properties>
          <property name="Destination" value="System.Numerics.Plane" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.TypeForwardedToAttribute">
        <properties>
          <property name="Destination" value="System.Numerics.Quaternion" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.TypeForwardedToAttribute">
        <properties>
          <property name="Destination" value="System.Numerics.Vector2" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.TypeForwardedToAttribute">
        <properties>
          <property name="Destination" value="System.Numerics.Vector3" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.TypeForwardedToAttribute">
        <properties>
          <property name="Destination" value="System.Numerics.Vector4" />
        </properties>
      </attribute>
      <attribute name="System.CLSCompliantAttribute">
        <properties>
          <property name="IsCompliant" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Diagnostics.DebuggableAttribute">
        <properties>
          <property name="IsJITTrackingEnabled" value="IgnoreSymbolStoreSequencePoints" />
          <property name="IsJITOptimizerDisabled" value="IgnoreSymbolStoreSequencePoints" />
          <property name="DebuggingFlags" value="IgnoreSymbolStoreSequencePoints" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyCompanyAttribute">
        <properties>
          <property name="Company" value="Mono development team" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyCopyrightAttribute">
        <properties>
          <property name="Copyright" value="(c) Various Mono authors" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDefaultAliasAttribute">
        <properties>
          <property name="DefaultAlias" value="System.Numerics.Vectors.dll" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDelaySignAttribute">
        <properties>
          <property name="DelaySign" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDescriptionAttribute">
        <properties>
          <property name="Description" value="System.Numerics.Vectors.dll" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyFileVersionAttribute">
        <properties>
          <property name="Version" value="4.0.50524.0" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyInformationalVersionAttribute">
        <properties>
          <property name="InformationalVersion" value="4.0.50524.0" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyProductAttribute">
        <properties>
          <property name="Product" value="Mono Common Language Infrastructure" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyTitleAttribute">
        <properties>
          <property name="Title" value="System.Numerics.Vectors.dll" />
        </properties>
      </attribute>
      <attribute name="System.Resources.NeutralResourcesLanguageAttribute">
        <properties>
          <property name="CultureName" value="en-US" />
        </properties>
      </attribute>
      <attribute name="System.Resources.SatelliteContractVersionAttribute">
        <properties>
          <property name="Version" value="2.0.5.0" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.CompilationRelaxationsAttribute">
        <properties>
          <property name="CompilationRelaxations" value="8" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
        <properties>
          <property name="WrapNonExceptionThrows" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.InteropServices.ComVisibleAttribute">
        <properties>
          <property name="Value" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Security.SecurityCriticalAttribute" />
    </attributes>
    <namespaces>
      <namespace name="System.Numerics">
        <classes>
          <class name="Vector" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="IsHardwareAccelerated" attrib="0" ptype="System.Boolean">
                <attributes />
                <methods>
                  <method name="get_IsHardwareAccelerated()" attrib="2198" static="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Abs(System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="Add(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="AndNot(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="AsVectorByte(System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Byte]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="AsVectorDouble(System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Double]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="AsVectorInt16(System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int16]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="AsVectorInt32(System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int32]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="AsVectorInt64(System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int64]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="AsVectorSByte(System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.SByte]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="AsVectorSingle(System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Single]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="AsVectorUInt16(System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.UInt16]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="AsVectorUInt32(System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.UInt32]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="AsVectorUInt64(System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.UInt64]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="BitwiseAnd(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="BitwiseOr(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="ConditionalSelect(System.Numerics.Vector`1[System.Int32], System.Numerics.Vector`1[System.Single], System.Numerics.Vector`1[System.Single])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Single]">
                <parameters>
                  <parameter name="condition" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int32]" />
                  <parameter name="left" position="1" attrib="0" type="System.Numerics.Vector`1[System.Single]" />
                  <parameter name="right" position="2" attrib="0" type="System.Numerics.Vector`1[System.Single]" />
                </parameters>
              </method>
              <method name="ConditionalSelect(System.Numerics.Vector`1[System.Int64], System.Numerics.Vector`1[System.Double], System.Numerics.Vector`1[System.Double])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Double]">
                <parameters>
                  <parameter name="condition" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int64]" />
                  <parameter name="left" position="1" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                  <parameter name="right" position="2" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                </parameters>
              </method>
              <method name="ConditionalSelect(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="condition" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="left" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="2" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="ConvertToDouble(System.Numerics.Vector`1[System.Int64])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Double]">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int64]" />
                </parameters>
              </method>
              <method name="ConvertToDouble(System.Numerics.Vector`1[System.UInt64])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Double]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[System.UInt64]" />
                </parameters>
              </method>
              <method name="ConvertToInt32(System.Numerics.Vector`1[System.Single])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int32]">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[System.Single]" />
                </parameters>
              </method>
              <method name="ConvertToInt64(System.Numerics.Vector`1[System.Double])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int64]">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                </parameters>
              </method>
              <method name="ConvertToSingle(System.Numerics.Vector`1[System.Int32])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Single]">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int32]" />
                </parameters>
              </method>
              <method name="ConvertToSingle(System.Numerics.Vector`1[System.UInt32])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Single]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[System.UInt32]" />
                </parameters>
              </method>
              <method name="ConvertToUInt32(System.Numerics.Vector`1[System.Single])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.UInt32]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[System.Single]" />
                </parameters>
              </method>
              <method name="ConvertToUInt64(System.Numerics.Vector`1[System.Double])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.UInt64]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                </parameters>
              </method>
              <method name="Divide(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="Dot(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="T">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="Equals(System.Numerics.Vector`1[System.Double], System.Numerics.Vector`1[System.Double])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int64]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                </parameters>
              </method>
              <method name="Equals(System.Numerics.Vector`1[System.Int32], System.Numerics.Vector`1[System.Int32])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int32]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int32]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Int32]" />
                </parameters>
              </method>
              <method name="Equals(System.Numerics.Vector`1[System.Int64], System.Numerics.Vector`1[System.Int64])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int64]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int64]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Int64]" />
                </parameters>
              </method>
              <method name="Equals(System.Numerics.Vector`1[System.Single], System.Numerics.Vector`1[System.Single])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int32]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Single]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Single]" />
                </parameters>
              </method>
              <method name="Equals(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="EqualsAll(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="EqualsAny(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="GreaterThan(System.Numerics.Vector`1[System.Double], System.Numerics.Vector`1[System.Double])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int64]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                </parameters>
              </method>
              <method name="GreaterThan(System.Numerics.Vector`1[System.Int32], System.Numerics.Vector`1[System.Int32])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int32]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int32]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Int32]" />
                </parameters>
              </method>
              <method name="GreaterThan(System.Numerics.Vector`1[System.Int64], System.Numerics.Vector`1[System.Int64])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int64]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int64]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Int64]" />
                </parameters>
              </method>
              <method name="GreaterThan(System.Numerics.Vector`1[System.Single], System.Numerics.Vector`1[System.Single])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int32]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Single]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Single]" />
                </parameters>
              </method>
              <method name="GreaterThan(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="GreaterThanAll(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="GreaterThanAny(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="GreaterThanOrEqual(System.Numerics.Vector`1[System.Double], System.Numerics.Vector`1[System.Double])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int64]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                </parameters>
              </method>
              <method name="GreaterThanOrEqual(System.Numerics.Vector`1[System.Int32], System.Numerics.Vector`1[System.Int32])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int32]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int32]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Int32]" />
                </parameters>
              </method>
              <method name="GreaterThanOrEqual(System.Numerics.Vector`1[System.Int64], System.Numerics.Vector`1[System.Int64])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int64]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int64]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Int64]" />
                </parameters>
              </method>
              <method name="GreaterThanOrEqual(System.Numerics.Vector`1[System.Single], System.Numerics.Vector`1[System.Single])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int32]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Single]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Single]" />
                </parameters>
              </method>
              <method name="GreaterThanOrEqual(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="GreaterThanOrEqualAll(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="GreaterThanOrEqualAny(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="LessThan(System.Numerics.Vector`1[System.Double], System.Numerics.Vector`1[System.Double])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int64]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                </parameters>
              </method>
              <method name="LessThan(System.Numerics.Vector`1[System.Int32], System.Numerics.Vector`1[System.Int32])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int32]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int32]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Int32]" />
                </parameters>
              </method>
              <method name="LessThan(System.Numerics.Vector`1[System.Int64], System.Numerics.Vector`1[System.Int64])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int64]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int64]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Int64]" />
                </parameters>
              </method>
              <method name="LessThan(System.Numerics.Vector`1[System.Single], System.Numerics.Vector`1[System.Single])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int32]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Single]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Single]" />
                </parameters>
              </method>
              <method name="LessThan(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="LessThanAll(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="LessThanAny(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="LessThanOrEqual(System.Numerics.Vector`1[System.Double], System.Numerics.Vector`1[System.Double])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int64]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                </parameters>
              </method>
              <method name="LessThanOrEqual(System.Numerics.Vector`1[System.Int32], System.Numerics.Vector`1[System.Int32])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int32]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int32]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Int32]" />
                </parameters>
              </method>
              <method name="LessThanOrEqual(System.Numerics.Vector`1[System.Int64], System.Numerics.Vector`1[System.Int64])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int64]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int64]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Int64]" />
                </parameters>
              </method>
              <method name="LessThanOrEqual(System.Numerics.Vector`1[System.Single], System.Numerics.Vector`1[System.Single])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int32]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[System.Single]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[System.Single]" />
                </parameters>
              </method>
              <method name="LessThanOrEqual(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="LessThanOrEqualAll(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="LessThanOrEqualAny(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="Max(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="Min(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="Multiply(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="Multiply(System.Numerics.Vector`1[T], T)" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="T" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="Multiply(T, System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="T" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="Narrow(System.Numerics.Vector`1[System.Double], System.Numerics.Vector`1[System.Double])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Single]">
                <attributes />
                <parameters>
                  <parameter name="low" position="0" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                  <parameter name="high" position="1" attrib="0" type="System.Numerics.Vector`1[System.Double]" />
                </parameters>
              </method>
              <method name="Narrow(System.Numerics.Vector`1[System.Int16], System.Numerics.Vector`1[System.Int16])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.SByte]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="low" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int16]" />
                  <parameter name="high" position="1" attrib="0" type="System.Numerics.Vector`1[System.Int16]" />
                </parameters>
              </method>
              <method name="Narrow(System.Numerics.Vector`1[System.Int32], System.Numerics.Vector`1[System.Int32])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int16]">
                <attributes />
                <parameters>
                  <parameter name="low" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int32]" />
                  <parameter name="high" position="1" attrib="0" type="System.Numerics.Vector`1[System.Int32]" />
                </parameters>
              </method>
              <method name="Narrow(System.Numerics.Vector`1[System.Int64], System.Numerics.Vector`1[System.Int64])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Int32]">
                <attributes />
                <parameters>
                  <parameter name="low" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int64]" />
                  <parameter name="high" position="1" attrib="0" type="System.Numerics.Vector`1[System.Int64]" />
                </parameters>
              </method>
              <method name="Narrow(System.Numerics.Vector`1[System.UInt16], System.Numerics.Vector`1[System.UInt16])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.Byte]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="low" position="0" attrib="0" type="System.Numerics.Vector`1[System.UInt16]" />
                  <parameter name="high" position="1" attrib="0" type="System.Numerics.Vector`1[System.UInt16]" />
                </parameters>
              </method>
              <method name="Narrow(System.Numerics.Vector`1[System.UInt32], System.Numerics.Vector`1[System.UInt32])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.UInt16]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="low" position="0" attrib="0" type="System.Numerics.Vector`1[System.UInt32]" />
                  <parameter name="high" position="1" attrib="0" type="System.Numerics.Vector`1[System.UInt32]" />
                </parameters>
              </method>
              <method name="Narrow(System.Numerics.Vector`1[System.UInt64], System.Numerics.Vector`1[System.UInt64])" attrib="150" static="true" returntype="System.Numerics.Vector`1[System.UInt32]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="low" position="0" attrib="0" type="System.Numerics.Vector`1[System.UInt64]" />
                  <parameter name="high" position="1" attrib="0" type="System.Numerics.Vector`1[System.UInt64]" />
                </parameters>
              </method>
              <method name="Negate(System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="OnesComplement(System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="SquareRoot(System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="Subtract(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
              <method name="Widen(System.Numerics.Vector`1[System.Byte], out System.Numerics.Vector`1[System.UInt16]&amp;, out System.Numerics.Vector`1[System.UInt16]&amp;)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Numerics.Vector`1[System.Byte]" />
                  <parameter name="low" position="1" attrib="2" type="System.Numerics.Vector`1[System.UInt16]" direction="out" />
                  <parameter name="high" position="2" attrib="2" type="System.Numerics.Vector`1[System.UInt16]" direction="out" />
                </parameters>
              </method>
              <method name="Widen(System.Numerics.Vector`1[System.Int16], out System.Numerics.Vector`1[System.Int32]&amp;, out System.Numerics.Vector`1[System.Int32]&amp;)" attrib="150" static="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int16]" />
                  <parameter name="low" position="1" attrib="2" type="System.Numerics.Vector`1[System.Int32]" direction="out" />
                  <parameter name="high" position="2" attrib="2" type="System.Numerics.Vector`1[System.Int32]" direction="out" />
                </parameters>
              </method>
              <method name="Widen(System.Numerics.Vector`1[System.Int32], out System.Numerics.Vector`1[System.Int64]&amp;, out System.Numerics.Vector`1[System.Int64]&amp;)" attrib="150" static="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Numerics.Vector`1[System.Int32]" />
                  <parameter name="low" position="1" attrib="2" type="System.Numerics.Vector`1[System.Int64]" direction="out" />
                  <parameter name="high" position="2" attrib="2" type="System.Numerics.Vector`1[System.Int64]" direction="out" />
                </parameters>
              </method>
              <method name="Widen(System.Numerics.Vector`1[System.SByte], out System.Numerics.Vector`1[System.Int16]&amp;, out System.Numerics.Vector`1[System.Int16]&amp;)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Numerics.Vector`1[System.SByte]" />
                  <parameter name="low" position="1" attrib="2" type="System.Numerics.Vector`1[System.Int16]" direction="out" />
                  <parameter name="high" position="2" attrib="2" type="System.Numerics.Vector`1[System.Int16]" direction="out" />
                </parameters>
              </method>
              <method name="Widen(System.Numerics.Vector`1[System.Single], out System.Numerics.Vector`1[System.Double]&amp;, out System.Numerics.Vector`1[System.Double]&amp;)" attrib="150" static="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Numerics.Vector`1[System.Single]" />
                  <parameter name="low" position="1" attrib="2" type="System.Numerics.Vector`1[System.Double]" direction="out" />
                  <parameter name="high" position="2" attrib="2" type="System.Numerics.Vector`1[System.Double]" direction="out" />
                </parameters>
              </method>
              <method name="Widen(System.Numerics.Vector`1[System.UInt16], out System.Numerics.Vector`1[System.UInt32]&amp;, out System.Numerics.Vector`1[System.UInt32]&amp;)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Numerics.Vector`1[System.UInt16]" />
                  <parameter name="low" position="1" attrib="2" type="System.Numerics.Vector`1[System.UInt32]" direction="out" />
                  <parameter name="high" position="2" attrib="2" type="System.Numerics.Vector`1[System.UInt32]" direction="out" />
                </parameters>
              </method>
              <method name="Widen(System.Numerics.Vector`1[System.UInt32], out System.Numerics.Vector`1[System.UInt64]&amp;, out System.Numerics.Vector`1[System.UInt64]&amp;)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Numerics.Vector`1[System.UInt32]" />
                  <parameter name="low" position="1" attrib="2" type="System.Numerics.Vector`1[System.UInt64]" direction="out" />
                  <parameter name="high" position="2" attrib="2" type="System.Numerics.Vector`1[System.UInt64]" direction="out" />
                </parameters>
              </method>
              <method name="Xor(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="150" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
                <generic-parameters>
                  <generic-parameter name="T" attributes="24">
                    <generic-parameter-constraints>
                      <generic-parameter-constraint name="System.ValueType" />
                    </generic-parameter-constraints>
                  </generic-parameter>
                </generic-parameters>
              </method>
            </methods>
          </class>
          <class name="Vector`1" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IEquatable`1[System.Numerics.Vector`1[T]]" />
              <interface name="System.IFormattable" />
            </interfaces>
            <generic-parameters>
              <generic-parameter name="T" attributes="24">
                <generic-parameter-constraints>
                  <generic-parameter-constraint name="System.ValueType" />
                </generic-parameter-constraints>
              </generic-parameter>
            </generic-parameters>
            <constructors>
              <constructor name=".ctor(T)" attrib="6278">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="T" />
                </parameters>
              </constructor>
              <constructor name=".ctor(T[])" attrib="6278">
                <attributes />
                <parameters>
                  <parameter name="values" position="0" attrib="0" type="T[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(T[], System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="values" position="0" attrib="0" type="T[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32">
                <attributes />
                <methods>
                  <method name="get_Count()" attrib="2198" static="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="T" params="System.Int32">
                <attributes />
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="T">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="One" attrib="0" ptype="System.Numerics.Vector`1[T]">
                <attributes />
                <methods>
                  <method name="get_One()" attrib="2198" static="true" returntype="System.Numerics.Vector`1[T]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Zero" attrib="0" ptype="System.Numerics.Vector`1[T]">
                <attributes />
                <methods>
                  <method name="get_Zero()" attrib="2198" static="true" returntype="System.Numerics.Vector`1[T]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CopyTo(T[])" attrib="134" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="destination" position="0" attrib="0" type="T[]" />
                </parameters>
              </method>
              <method name="CopyTo(T[], System.Int32)" attrib="134" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="destination" position="0" attrib="0" type="T[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Equals(System.Numerics.Vector`1[T])" attrib="486" virtual="true" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="formatProvider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="op_Addition(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_BitwiseAnd(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[T]">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_BitwiseOr(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[T]">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Division(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Equality(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_ExclusiveOr(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[T]">
                <attributes />
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[System.Byte]">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[System.Double]">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[System.Int16]">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[System.Int32]">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[System.Int64]">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[System.SByte]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[System.Single]">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[System.UInt16]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[System.UInt32]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[System.UInt64]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Numerics.Vector`1[T], T)" attrib="2198" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="factor" position="1" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="op_Multiply(T, System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="factor" position="0" attrib="0" type="T" />
                  <parameter name="value" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_OnesComplement(System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_Subtraction(System.Numerics.Vector`1[T], System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                  <parameter name="right" position="1" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
              <method name="op_UnaryNegation(System.Numerics.Vector`1[T])" attrib="2198" static="true" returntype="System.Numerics.Vector`1[T]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Numerics.Vector`1[T]" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
    </namespaces>
  </assembly>
</assemblies>