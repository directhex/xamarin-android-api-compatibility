<?xml version="1.0" encoding="utf-8"?>
<assemblies>
  <assembly name="Mono.Posix" version="4.0.0.0">
    <attributes>
      <attribute name="System.CLSCompliantAttribute">
        <properties>
          <property name="IsCompliant" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Diagnostics.DebuggableAttribute">
        <properties>
          <property name="IsJITTrackingEnabled" value="EnableEditAndContinue, IgnoreSymbolStoreSequencePoints, DisableOptimizations, Default" />
          <property name="IsJITOptimizerDisabled" value="EnableEditAndContinue, IgnoreSymbolStoreSequencePoints, DisableOptimizations, Default" />
          <property name="DebuggingFlags" value="EnableEditAndContinue, IgnoreSymbolStoreSequencePoints, DisableOptimizations, Default" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDelaySignAttribute">
        <properties>
          <property name="DelaySign" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDescriptionAttribute">
        <properties>
          <property name="Description" value="Unix Integration Classes" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyTitleAttribute">
        <properties>
          <property name="Title" value="Mono.Posix.dll" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.CompilationRelaxationsAttribute">
        <properties>
          <property name="CompilationRelaxations" value="8" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
        <properties>
          <property name="WrapNonExceptionThrows" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.InteropServices.ComVisibleAttribute">
        <properties>
          <property name="Value" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.Versioning.TargetFrameworkAttribute">
        <properties>
          <property name="FrameworkDisplayName" value="" />
          <property name="FrameworkName" value="MonoAndroid,Version=v8.0" />
        </properties>
      </attribute>
    </attributes>
    <namespaces>
      <namespace name="Mono.Remoting.Channels.Unix">
        <classes>
          <class name="UnixChannel" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Remoting.Channels.IChannel" />
              <interface name="System.Runtime.Remoting.Channels.IChannelReceiver" />
              <interface name="System.Runtime.Remoting.Channels.IChannelSender" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Collections.IDictionary, System.Runtime.Remoting.Channels.IClientChannelSinkProvider, System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" attrib="6278">
                <parameters>
                  <parameter name="properties" position="0" attrib="0" type="System.Collections.IDictionary" />
                  <parameter name="clientSinkProvider" position="1" attrib="0" type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
                  <parameter name="serverSinkProvider" position="2" attrib="0" type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ChannelData" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_ChannelData()" attrib="2534" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ChannelName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_ChannelName()" attrib="2534" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ChannelPriority" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_ChannelPriority()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateMessageSink(System.String, System.Object, out System.String&amp;)" attrib="486" virtual="true" returntype="System.Runtime.Remoting.Messaging.IMessageSink">
                <parameters>
                  <parameter name="url" position="0" attrib="0" type="System.String" />
                  <parameter name="remoteChannelData" position="1" attrib="0" type="System.Object" />
                  <parameter name="objectURI" position="2" attrib="2" type="System.String" direction="out" />
                </parameters>
              </method>
              <method name="GetUrlsForUri(System.String)" attrib="486" virtual="true" returntype="System.String[]">
                <parameters>
                  <parameter name="uri" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, out System.String&amp;)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="url" position="0" attrib="0" type="System.String" />
                  <parameter name="objectURI" position="1" attrib="2" type="System.String" direction="out" />
                </parameters>
              </method>
              <method name="StartListening(System.Object)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="StopListening(System.Object)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UnixClientChannel" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Remoting.Channels.IChannel" />
              <interface name="System.Runtime.Remoting.Channels.IChannelSender" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Collections.IDictionary, System.Runtime.Remoting.Channels.IClientChannelSinkProvider)" attrib="6278">
                <parameters>
                  <parameter name="properties" position="0" attrib="0" type="System.Collections.IDictionary" />
                  <parameter name="sinkProvider" position="1" attrib="0" type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Runtime.Remoting.Channels.IClientChannelSinkProvider)" attrib="6278">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="sinkProvider" position="1" attrib="0" type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ChannelName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_ChannelName()" attrib="2534" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ChannelPriority" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_ChannelPriority()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateMessageSink(System.String, System.Object, out System.String&amp;)" attrib="486" virtual="true" returntype="System.Runtime.Remoting.Messaging.IMessageSink">
                <parameters>
                  <parameter name="url" position="0" attrib="0" type="System.String" />
                  <parameter name="remoteChannelData" position="1" attrib="0" type="System.Object" />
                  <parameter name="objectURI" position="2" attrib="2" type="System.String" direction="out" />
                </parameters>
              </method>
              <method name="Parse(System.String, out System.String&amp;)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="url" position="0" attrib="0" type="System.String" />
                  <parameter name="objectURI" position="1" attrib="2" type="System.String" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UnixServerChannel" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Remoting.Channels.IChannel" />
              <interface name="System.Runtime.Remoting.Channels.IChannelReceiver" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Collections.IDictionary, System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" attrib="6278">
                <parameters>
                  <parameter name="properties" position="0" attrib="0" type="System.Collections.IDictionary" />
                  <parameter name="serverSinkProvider" position="1" attrib="0" type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.String)" attrib="6278">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="path" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.String, System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" attrib="6278">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="path" position="1" attrib="0" type="System.String" />
                  <parameter name="serverSinkProvider" position="2" attrib="0" type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ChannelData" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_ChannelData()" attrib="2534" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ChannelName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_ChannelName()" attrib="2534" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ChannelPriority" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_ChannelPriority()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetChannelUri()" attrib="134" returntype="System.String">
                <parameters />
              </method>
              <method name="GetUrlsForUri(System.String)" attrib="486" virtual="true" returntype="System.String[]">
                <parameters>
                  <parameter name="uri" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, out System.String&amp;)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="url" position="0" attrib="0" type="System.String" />
                  <parameter name="objectURI" position="1" attrib="2" type="System.String" direction="out" />
                </parameters>
              </method>
              <method name="StartListening(System.Object)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="StopListening(System.Object)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Unix">
        <classes>
          <class name="AbstractUnixEndPoint" type="class" base="System.Net.EndPoint" serializable="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AddressFamily" attrib="0" ptype="System.Net.Sockets.AddressFamily">
                <methods>
                  <method name="get_AddressFamily()" attrib="2246" virtual="true" is-override="true" returntype="System.Net.Sockets.AddressFamily">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Path" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Path()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Path(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Create(System.Net.SocketAddress)" attrib="198" virtual="true" is-override="true" returntype="System.Net.EndPoint">
                <parameters>
                  <parameter name="socketAddress" position="0" attrib="0" type="System.Net.SocketAddress" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Serialize()" attrib="198" virtual="true" is-override="true" returntype="System.Net.SocketAddress">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Catalog" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <methods>
              <method name="GetPluralString(System.String, System.String, System.Int32)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="p" position="1" attrib="0" type="System.String" />
                  <parameter name="n" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetString(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Init(System.String, System.String)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="package" position="0" attrib="0" type="System.String" />
                  <parameter name="localedir" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="FileAccessPattern" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="FlushCache" attrib="32854" fieldtype="Mono.Unix.FileAccessPattern" value="4" />
              <field name="NoReuse" attrib="32854" fieldtype="Mono.Unix.FileAccessPattern" value="5" />
              <field name="Normal" attrib="32854" fieldtype="Mono.Unix.FileAccessPattern" value="0" />
              <field name="PreLoad" attrib="32854" fieldtype="Mono.Unix.FileAccessPattern" value="3" />
              <field name="Random" attrib="32854" fieldtype="Mono.Unix.FileAccessPattern" value="1" />
              <field name="Sequential" attrib="32854" fieldtype="Mono.Unix.FileAccessPattern" value="2" />
            </fields>
          </class>
          <class name="FileAccessPermissions" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="AllPermissions" attrib="32854" fieldtype="Mono.Unix.FileAccessPermissions" value="511" />
              <field name="DefaultPermissions" attrib="32854" fieldtype="Mono.Unix.FileAccessPermissions" value="438" />
              <field name="GroupExecute" attrib="32854" fieldtype="Mono.Unix.FileAccessPermissions" value="8" />
              <field name="GroupRead" attrib="32854" fieldtype="Mono.Unix.FileAccessPermissions" value="32" />
              <field name="GroupReadWriteExecute" attrib="32854" fieldtype="Mono.Unix.FileAccessPermissions" value="56" />
              <field name="GroupWrite" attrib="32854" fieldtype="Mono.Unix.FileAccessPermissions" value="16" />
              <field name="OtherExecute" attrib="32854" fieldtype="Mono.Unix.FileAccessPermissions" value="1" />
              <field name="OtherRead" attrib="32854" fieldtype="Mono.Unix.FileAccessPermissions" value="4" />
              <field name="OtherReadWriteExecute" attrib="32854" fieldtype="Mono.Unix.FileAccessPermissions" value="7" />
              <field name="OtherWrite" attrib="32854" fieldtype="Mono.Unix.FileAccessPermissions" value="2" />
              <field name="UserExecute" attrib="32854" fieldtype="Mono.Unix.FileAccessPermissions" value="64" />
              <field name="UserRead" attrib="32854" fieldtype="Mono.Unix.FileAccessPermissions" value="256" />
              <field name="UserReadWriteExecute" attrib="32854" fieldtype="Mono.Unix.FileAccessPermissions" value="448" />
              <field name="UserWrite" attrib="32854" fieldtype="Mono.Unix.FileAccessPermissions" value="128" />
            </fields>
          </class>
          <class name="FileHandleOperations" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="AdviseFileAccessPattern(Mono.Unix.UnixStream, Mono.Unix.FileAccessPattern)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="Mono.Unix.UnixStream" />
                  <parameter name="pattern" position="1" attrib="0" type="Mono.Unix.FileAccessPattern" />
                </parameters>
              </method>
              <method name="AdviseFileAccessPattern(System.IO.FileStream, Mono.Unix.FileAccessPattern)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="file" position="0" attrib="0" type="System.IO.FileStream" />
                  <parameter name="pattern" position="1" attrib="0" type="Mono.Unix.FileAccessPattern" />
                </parameters>
              </method>
              <method name="AdviseFileAccessPattern(System.Int32, Mono.Unix.FileAccessPattern)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pattern" position="1" attrib="0" type="Mono.Unix.FileAccessPattern" />
                </parameters>
              </method>
              <method name="AdviseFileAccessPattern(Mono.Unix.UnixStream, Mono.Unix.FileAccessPattern, System.Int64, System.Int64)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="Mono.Unix.UnixStream" />
                  <parameter name="pattern" position="1" attrib="0" type="Mono.Unix.FileAccessPattern" />
                  <parameter name="offset" position="2" attrib="0" type="System.Int64" />
                  <parameter name="len" position="3" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="AdviseFileAccessPattern(System.IO.FileStream, Mono.Unix.FileAccessPattern, System.Int64, System.Int64)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="file" position="0" attrib="0" type="System.IO.FileStream" />
                  <parameter name="pattern" position="1" attrib="0" type="Mono.Unix.FileAccessPattern" />
                  <parameter name="offset" position="2" attrib="0" type="System.Int64" />
                  <parameter name="len" position="3" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="AdviseFileAccessPattern(System.Int32, Mono.Unix.FileAccessPattern, System.Int64, System.Int64)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pattern" position="1" attrib="0" type="Mono.Unix.FileAccessPattern" />
                  <parameter name="offset" position="2" attrib="0" type="System.Int64" />
                  <parameter name="len" position="3" attrib="0" type="System.Int64" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="FileSpecialAttributes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="SetGroupId" attrib="32854" fieldtype="Mono.Unix.FileSpecialAttributes" value="1024" />
              <field name="SetUserId" attrib="32854" fieldtype="Mono.Unix.FileSpecialAttributes" value="2048" />
              <field name="Sticky" attrib="32854" fieldtype="Mono.Unix.FileSpecialAttributes" value="512" />
            </fields>
          </class>
          <class name="FileTypes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="BlockDevice" attrib="32854" fieldtype="Mono.Unix.FileTypes" value="24576" />
              <field name="CharacterDevice" attrib="32854" fieldtype="Mono.Unix.FileTypes" value="8192" />
              <field name="Directory" attrib="32854" fieldtype="Mono.Unix.FileTypes" value="16384" />
              <field name="Fifo" attrib="32854" fieldtype="Mono.Unix.FileTypes" value="4096" />
              <field name="RegularFile" attrib="32854" fieldtype="Mono.Unix.FileTypes" value="32768" />
              <field name="Socket" attrib="32854" fieldtype="Mono.Unix.FileTypes" value="49152" />
              <field name="SymbolicLink" attrib="32854" fieldtype="Mono.Unix.FileTypes" value="40960" />
            </fields>
          </class>
          <class name="PeerCred" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Net.Sockets.Socket)" attrib="6278">
                <parameters>
                  <parameter name="sock" position="0" attrib="0" type="System.Net.Sockets.Socket" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="GroupID" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_GroupID()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ProcessID" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_ProcessID()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UserID" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_UserID()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="StdioFileStream" type="class" base="System.IO.Stream" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <fields>
              <field name="InvalidFileStream" attrib="54" fieldtype="System.IntPtr" />
              <field name="StandardError" attrib="54" fieldtype="System.IntPtr" />
              <field name="StandardInput" attrib="54" fieldtype="System.IntPtr" />
              <field name="StandardOutput" attrib="54" fieldtype="System.IntPtr" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="fileStream" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IntPtr, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="fileStream" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="ownsHandle" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IntPtr, System.IO.FileAccess)" attrib="6278">
                <parameters>
                  <parameter name="fileStream" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="access" position="1" attrib="0" type="System.IO.FileAccess" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.IO.FileAccess)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="access" position="1" attrib="0" type="System.IO.FileAccess" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.IO.FileMode)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.IO.FileMode" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.String)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IntPtr, System.IO.FileAccess, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="fileStream" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="access" position="1" attrib="0" type="System.IO.FileAccess" />
                  <parameter name="ownsHandle" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.IO.FileMode, System.IO.FileAccess)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="2" attrib="0" type="System.IO.FileAccess" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CanRead" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanRead()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanSeek" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanSeek()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanWrite" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanWrite()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Handle" attrib="0" ptype="System.IntPtr">
                <methods>
                  <method name="get_Handle()" attrib="2182" returntype="System.IntPtr">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_Length()" attrib="2246" virtual="true" is-override="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Position" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_Position()" attrib="2246" virtual="true" is-override="true" returntype="System.Int64">
                    <parameters />
                  </method>
                  <method name="set_Position(System.Int64)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Flush()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Read(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="3" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="RestoreFilePosition(Mono.Unix.Native.FilePosition)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="pos" position="0" attrib="0" type="Mono.Unix.Native.FilePosition" />
                </parameters>
              </method>
              <method name="Rewind()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="SaveFilePosition(Mono.Unix.Native.FilePosition)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="pos" position="0" attrib="0" type="Mono.Unix.Native.FilePosition" />
                </parameters>
              </method>
              <method name="Seek(System.Int64, System.IO.SeekOrigin)" attrib="198" virtual="true" is-override="true" returntype="System.Int64">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int64" />
                  <parameter name="origin" position="1" attrib="0" type="System.IO.SeekOrigin" />
                </parameters>
              </method>
              <method name="SetLength(System.Int64)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Write(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="~StdioFileStream()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="UnixClient" type="class" base="System.MarshalByRefObject" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Unix.UnixEndPoint)" attrib="6278">
                <parameters>
                  <parameter name="ep" position="0" attrib="0" type="Mono.Unix.UnixEndPoint" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Client" attrib="0" ptype="System.Net.Sockets.Socket">
                <methods>
                  <method name="get_Client()" attrib="2182" returntype="System.Net.Sockets.Socket">
                    <parameters />
                  </method>
                  <method name="set_Client(System.Net.Sockets.Socket)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Net.Sockets.Socket" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LingerState" attrib="0" ptype="System.Net.Sockets.LingerOption">
                <methods>
                  <method name="get_LingerState()" attrib="2182" returntype="System.Net.Sockets.LingerOption">
                    <parameters />
                  </method>
                  <method name="set_LingerState(System.Net.Sockets.LingerOption)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Net.Sockets.LingerOption" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PeerCredential" attrib="0" ptype="Mono.Unix.PeerCred">
                <methods>
                  <method name="get_PeerCredential()" attrib="2182" returntype="Mono.Unix.PeerCred">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReceiveBufferSize" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_ReceiveBufferSize()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_ReceiveBufferSize(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ReceiveTimeout" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_ReceiveTimeout()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_ReceiveTimeout(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SendBufferSize" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_SendBufferSize()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_SendBufferSize(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SendTimeout" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_SendTimeout()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_SendTimeout(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Connect(Mono.Unix.UnixEndPoint)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="remoteEndPoint" position="0" attrib="0" type="Mono.Unix.UnixEndPoint" />
                </parameters>
              </method>
              <method name="Connect(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetStream()" attrib="134" returntype="System.Net.Sockets.NetworkStream">
                <parameters />
              </method>
              <method name="~UnixClient()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="UnixDirectoryInfo" type="class" base="Mono.Unix.UnixFileSystemInfo" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Parent" attrib="0" ptype="Mono.Unix.UnixDirectoryInfo">
                <methods>
                  <method name="get_Parent()" attrib="2182" returntype="Mono.Unix.UnixDirectoryInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Root" attrib="0" ptype="Mono.Unix.UnixDirectoryInfo">
                <methods>
                  <method name="get_Root()" attrib="2182" returntype="Mono.Unix.UnixDirectoryInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Create()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Create(Mono.Unix.FileAccessPermissions)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="mode" position="0" attrib="0" type="Mono.Unix.FileAccessPermissions" />
                </parameters>
              </method>
              <method name="Create(Mono.Unix.Native.FilePermissions)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="mode" position="0" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="Delete()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Delete(System.Boolean)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="recursive" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCurrentDirectory()" attrib="150" static="true" returntype="System.String">
                <parameters />
              </method>
              <method name="GetEntries()" attrib="134" returntype="Mono.Unix.Native.Dirent[]">
                <parameters />
              </method>
              <method name="GetEntries(System.String)" attrib="134" returntype="Mono.Unix.Native.Dirent[]">
                <parameters>
                  <parameter name="regex" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetEntries(System.Text.RegularExpressions.Regex)" attrib="134" returntype="Mono.Unix.Native.Dirent[]">
                <parameters>
                  <parameter name="regex" position="0" attrib="0" type="System.Text.RegularExpressions.Regex" />
                </parameters>
              </method>
              <method name="GetFileSystemEntries()" attrib="134" returntype="Mono.Unix.UnixFileSystemInfo[]">
                <parameters />
              </method>
              <method name="GetFileSystemEntries(System.String)" attrib="134" returntype="Mono.Unix.UnixFileSystemInfo[]">
                <parameters>
                  <parameter name="regex" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFileSystemEntries(System.Text.RegularExpressions.Regex)" attrib="134" returntype="Mono.Unix.UnixFileSystemInfo[]">
                <parameters>
                  <parameter name="regex" position="0" attrib="0" type="System.Text.RegularExpressions.Regex" />
                </parameters>
              </method>
              <method name="SetCurrentDirectory(System.String)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UnixDriveInfo" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="mountPoint" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AvailableFreeSpace" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_AvailableFreeSpace()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DriveFormat" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_DriveFormat()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DriveType" attrib="0" ptype="Mono.Unix.UnixDriveType">
                <methods>
                  <method name="get_DriveType()" attrib="2182" returntype="Mono.Unix.UnixDriveType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsReady" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsReady()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MaximumFilenameLength" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_MaximumFilenameLength()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RootDirectory" attrib="0" ptype="Mono.Unix.UnixDirectoryInfo">
                <methods>
                  <method name="get_RootDirectory()" attrib="2182" returntype="Mono.Unix.UnixDirectoryInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TotalFreeSpace" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_TotalFreeSpace()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TotalSize" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_TotalSize()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="VolumeLabel" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_VolumeLabel()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetDrives()" attrib="150" static="true" returntype="Mono.Unix.UnixDriveInfo[]">
                <parameters />
              </method>
              <method name="GetForSpecialFile(System.String)" attrib="150" static="true" returntype="Mono.Unix.UnixDriveInfo">
                <parameters>
                  <parameter name="specialFile" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="UnixDriveType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="CDRom" attrib="32854" fieldtype="Mono.Unix.UnixDriveType" value="5" />
              <field name="Fixed" attrib="32854" fieldtype="Mono.Unix.UnixDriveType" value="3" />
              <field name="Network" attrib="32854" fieldtype="Mono.Unix.UnixDriveType" value="4" />
              <field name="NoRootDirectory" attrib="32854" fieldtype="Mono.Unix.UnixDriveType" value="1" />
              <field name="Ram" attrib="32854" fieldtype="Mono.Unix.UnixDriveType" value="6" />
              <field name="Removable" attrib="32854" fieldtype="Mono.Unix.UnixDriveType" value="2" />
              <field name="Unknown" attrib="32854" fieldtype="Mono.Unix.UnixDriveType" value="0" />
            </fields>
          </class>
          <class name="UnixEncoding" type="class" base="System.Text.Encoding" serializable="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
            </interfaces>
            <fields>
              <field name="EscapeByte" attrib="54" fieldtype="System.Char" />
              <field name="Instance" attrib="54" fieldtype="System.Text.Encoding" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetByteCount(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetByteCount(System.Char[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetBytes(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetBytes(System.Char*, System.Int32, System.Byte*, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char*" />
                  <parameter name="charCount" position="1" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="2" attrib="0" type="System.Byte*" />
                  <parameter name="byteCount" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetBytes(System.Char[], System.Int32, System.Int32, System.Byte[], System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="charIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="charCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetBytes(System.String, System.Int32, System.Int32, System.Byte[], System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="charIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="charCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetCharCount(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetChars(System.Byte[], System.Int32, System.Int32, System.Char[], System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="byteCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="chars" position="3" attrib="0" type="System.Char[]" />
                  <parameter name="charIndex" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDecoder()" attrib="198" virtual="true" is-override="true" returntype="System.Text.Decoder">
                <parameters />
              </method>
              <method name="GetEncoder()" attrib="198" virtual="true" is-override="true" returntype="System.Text.Encoder">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetMaxByteCount(System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="charCount" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetMaxCharCount(System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="byteCount" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetPreamble()" attrib="198" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="UnixEndPoint" type="class" base="System.Net.EndPoint" serializable="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AddressFamily" attrib="0" ptype="System.Net.Sockets.AddressFamily">
                <methods>
                  <method name="get_AddressFamily()" attrib="2246" virtual="true" is-override="true" returntype="System.Net.Sockets.AddressFamily">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Filename" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Filename()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Filename(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Create(System.Net.SocketAddress)" attrib="198" virtual="true" is-override="true" returntype="System.Net.EndPoint">
                <parameters>
                  <parameter name="socketAddress" position="0" attrib="0" type="System.Net.SocketAddress" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Serialize()" attrib="198" virtual="true" is-override="true" returntype="System.Net.SocketAddress">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="UnixEnvironment" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="CurrentDirectory" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_CurrentDirectory()" attrib="2198" static="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_CurrentDirectory(System.String)" attrib="2198" static="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="EffectiveGroup" attrib="0" ptype="Mono.Unix.UnixGroupInfo">
                <methods>
                  <method name="get_EffectiveGroup()" attrib="2198" static="true" returntype="Mono.Unix.UnixGroupInfo">
                    <parameters />
                  </method>
                  <method name="set_EffectiveGroup(Mono.Unix.UnixGroupInfo)" attrib="2198" static="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Unix.UnixGroupInfo" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="EffectiveGroupId" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_EffectiveGroupId()" attrib="2198" static="true" returntype="System.Int64">
                    <parameters />
                  </method>
                  <method name="set_EffectiveGroupId(System.Int64)" attrib="2198" static="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="EffectiveUser" attrib="0" ptype="Mono.Unix.UnixUserInfo">
                <methods>
                  <method name="get_EffectiveUser()" attrib="2198" static="true" returntype="Mono.Unix.UnixUserInfo">
                    <parameters />
                  </method>
                  <method name="set_EffectiveUser(Mono.Unix.UnixUserInfo)" attrib="2198" static="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Unix.UnixUserInfo" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="EffectiveUserId" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_EffectiveUserId()" attrib="2198" static="true" returntype="System.Int64">
                    <parameters />
                  </method>
                  <method name="set_EffectiveUserId(System.Int64)" attrib="2198" static="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Login" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Login()" attrib="2198" static="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MachineName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_MachineName()" attrib="2198" static="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_MachineName(System.String)" attrib="2198" static="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="RealGroup" attrib="0" ptype="Mono.Unix.UnixGroupInfo">
                <methods>
                  <method name="get_RealGroup()" attrib="2198" static="true" returntype="Mono.Unix.UnixGroupInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RealGroupId" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_RealGroupId()" attrib="2198" static="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RealUser" attrib="0" ptype="Mono.Unix.UnixUserInfo">
                <methods>
                  <method name="get_RealUser()" attrib="2198" static="true" returntype="Mono.Unix.UnixUserInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RealUserId" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_RealUserId()" attrib="2198" static="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UserName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_UserName()" attrib="2198" static="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateSession()" attrib="150" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetConfigurationString(Mono.Unix.Native.ConfstrName)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="Mono.Unix.Native.ConfstrName" />
                </parameters>
              </method>
              <method name="GetConfigurationValue(Mono.Unix.Native.SysconfName)" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="Mono.Unix.Native.SysconfName" />
                </parameters>
              </method>
              <method name="GetParentProcess()" attrib="150" static="true" returntype="Mono.Unix.UnixProcess">
                <parameters />
              </method>
              <method name="GetParentProcessId()" attrib="150" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetProcessGroup()" attrib="150" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetSupplementaryGroupIds()" attrib="150" static="true" returntype="System.Int64[]">
                <parameters />
              </method>
              <method name="GetSupplementaryGroups()" attrib="150" static="true" returntype="Mono.Unix.UnixGroupInfo[]">
                <parameters />
              </method>
              <method name="GetUserShells()" attrib="150" static="true" returntype="System.String[]">
                <parameters />
              </method>
              <method name="SetNiceValue(System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="inc" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="SetProcessGroup()" attrib="150" static="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="SetSupplementaryGroupIds(System.Int64[])" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="list" position="0" attrib="0" type="System.Int64[]" />
                </parameters>
              </method>
              <method name="SetSupplementaryGroups(Mono.Unix.UnixGroupInfo[])" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="groups" position="0" attrib="0" type="Mono.Unix.UnixGroupInfo[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UnixFileInfo" type="class" base="Mono.Unix.UnixFileSystemInfo" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Directory" attrib="0" ptype="Mono.Unix.UnixDirectoryInfo">
                <methods>
                  <method name="get_Directory()" attrib="2182" returntype="Mono.Unix.UnixDirectoryInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DirectoryName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_DirectoryName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Create()" attrib="134" returntype="Mono.Unix.UnixStream">
                <parameters />
              </method>
              <method name="Create(Mono.Unix.FileAccessPermissions)" attrib="134" returntype="Mono.Unix.UnixStream">
                <parameters>
                  <parameter name="mode" position="0" attrib="0" type="Mono.Unix.FileAccessPermissions" />
                </parameters>
              </method>
              <method name="Create(Mono.Unix.Native.FilePermissions)" attrib="134" returntype="Mono.Unix.UnixStream">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="mode" position="0" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="Delete()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Open(Mono.Unix.Native.OpenFlags)" attrib="134" returntype="Mono.Unix.UnixStream">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="flags" position="0" attrib="0" type="Mono.Unix.Native.OpenFlags" />
                </parameters>
              </method>
              <method name="Open(System.IO.FileMode)" attrib="134" returntype="Mono.Unix.UnixStream">
                <parameters>
                  <parameter name="mode" position="0" attrib="0" type="System.IO.FileMode" />
                </parameters>
              </method>
              <method name="Open(Mono.Unix.Native.OpenFlags, Mono.Unix.Native.FilePermissions)" attrib="134" returntype="Mono.Unix.UnixStream">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="flags" position="0" attrib="0" type="Mono.Unix.Native.OpenFlags" />
                  <parameter name="mode" position="1" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="Open(System.IO.FileMode, System.IO.FileAccess)" attrib="134" returntype="Mono.Unix.UnixStream">
                <parameters>
                  <parameter name="mode" position="0" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="1" attrib="0" type="System.IO.FileAccess" />
                </parameters>
              </method>
              <method name="Open(System.IO.FileMode, System.IO.FileAccess, Mono.Unix.Native.FilePermissions)" attrib="134" returntype="Mono.Unix.UnixStream">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="mode" position="0" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="1" attrib="0" type="System.IO.FileAccess" />
                  <parameter name="perms" position="2" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="OpenRead()" attrib="134" returntype="Mono.Unix.UnixStream">
                <parameters />
              </method>
              <method name="OpenWrite()" attrib="134" returntype="Mono.Unix.UnixStream">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="UnixFileSystemInfo" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6276">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="BlockSize" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_BlockSize()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BlocksAllocated" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_BlocksAllocated()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Device" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_Device()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DeviceType" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_DeviceType()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Exists" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Exists()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FileAccessPermissions" attrib="0" ptype="Mono.Unix.FileAccessPermissions">
                <methods>
                  <method name="get_FileAccessPermissions()" attrib="2182" returntype="Mono.Unix.FileAccessPermissions">
                    <parameters />
                  </method>
                  <method name="set_FileAccessPermissions(Mono.Unix.FileAccessPermissions)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Unix.FileAccessPermissions" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="FileSpecialAttributes" attrib="0" ptype="Mono.Unix.FileSpecialAttributes">
                <methods>
                  <method name="get_FileSpecialAttributes()" attrib="2182" returntype="Mono.Unix.FileSpecialAttributes">
                    <parameters />
                  </method>
                  <method name="set_FileSpecialAttributes(Mono.Unix.FileSpecialAttributes)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Unix.FileSpecialAttributes" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="FileType" attrib="0" ptype="Mono.Unix.FileTypes">
                <methods>
                  <method name="get_FileType()" attrib="2182" returntype="Mono.Unix.FileTypes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FullName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_FullName()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FullPath" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_FullPath()" attrib="2180" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_FullPath(System.String)" attrib="2180" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Inode" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_Inode()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsBlockDevice" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsBlockDevice()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsCharacterDevice" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsCharacterDevice()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsDirectory" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsDirectory()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsFifo" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsFifo()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsRegularFile" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsRegularFile()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSetGroup" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsSetGroup()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSetUser" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsSetUser()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSocket" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsSocket()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSticky" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsSticky()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSymbolicLink" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsSymbolicLink()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LastAccessTime" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_LastAccessTime()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LastAccessTimeUtc" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_LastAccessTimeUtc()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LastStatusChangeTime" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_LastStatusChangeTime()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LastStatusChangeTimeUtc" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_LastStatusChangeTimeUtc()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LastWriteTime" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_LastWriteTime()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LastWriteTimeUtc" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_LastWriteTimeUtc()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_Length()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LinkCount" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_LinkCount()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OriginalPath" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_OriginalPath()" attrib="2180" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_OriginalPath(System.String)" attrib="2180" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="OwnerGroup" attrib="0" ptype="Mono.Unix.UnixGroupInfo">
                <methods>
                  <method name="get_OwnerGroup()" attrib="2182" returntype="Mono.Unix.UnixGroupInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OwnerGroupId" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_OwnerGroupId()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OwnerUser" attrib="0" ptype="Mono.Unix.UnixUserInfo">
                <methods>
                  <method name="get_OwnerUser()" attrib="2182" returntype="Mono.Unix.UnixUserInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OwnerUserId" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_OwnerUserId()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Protection" attrib="0" ptype="Mono.Unix.Native.FilePermissions">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Protection()" attrib="2182" returntype="Mono.Unix.Native.FilePermissions">
                    <parameters />
                  </method>
                  <method name="set_Protection(Mono.Unix.Native.FilePermissions)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CanAccess(Mono.Unix.Native.AccessModes)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="mode" position="0" attrib="0" type="Mono.Unix.Native.AccessModes" />
                </parameters>
              </method>
              <method name="CreateLink(System.String)" attrib="134" returntype="Mono.Unix.UnixFileSystemInfo">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateSymbolicLink(System.String)" attrib="134" returntype="Mono.Unix.UnixSymbolicLinkInfo">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Delete()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="GetConfigurationValue(Mono.Unix.Native.PathconfName)" attrib="134" returntype="System.Int64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="Mono.Unix.Native.PathconfName" />
                </parameters>
              </method>
              <method name="GetFileStatus(System.String, out Mono.Unix.Native.Stat&amp;)" attrib="452" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="stat" position="1" attrib="2" type="Mono.Unix.Native.Stat" direction="out" />
                </parameters>
              </method>
              <method name="GetFileSystemEntry(System.String)" attrib="150" static="true" returntype="Mono.Unix.UnixFileSystemInfo">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Refresh()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="SetLength(System.Int64)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="length" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="SetOwner(Mono.Unix.UnixUserInfo)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="owner" position="0" attrib="0" type="Mono.Unix.UnixUserInfo" />
                </parameters>
              </method>
              <method name="SetOwner(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="owner" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="SetOwner(Mono.Unix.UnixUserInfo, Mono.Unix.UnixGroupInfo)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="owner" position="0" attrib="0" type="Mono.Unix.UnixUserInfo" />
                  <parameter name="group" position="1" attrib="0" type="Mono.Unix.UnixGroupInfo" />
                </parameters>
              </method>
              <method name="SetOwner(System.Int64, System.Int64)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="owner" position="0" attrib="0" type="System.Int64" />
                  <parameter name="group" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="SetOwner(System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="owner" position="0" attrib="0" type="System.String" />
                  <parameter name="group" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToStat()" attrib="134" returntype="Mono.Unix.Native.Stat">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="TryGetFileSystemEntry(System.String, out Mono.Unix.UnixFileSystemInfo&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="entry" position="1" attrib="2" type="Mono.Unix.UnixFileSystemInfo" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UnixGroupInfo" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(Mono.Unix.Native.Group)" attrib="6278">
                <parameters>
                  <parameter name="group" position="0" attrib="0" type="Mono.Unix.Native.Group" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int64)" attrib="6278">
                <parameters>
                  <parameter name="group" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="group" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="GroupId" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_GroupId()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GroupName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_GroupName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Password" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Password()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetLocalGroups()" attrib="150" static="true" returntype="Mono.Unix.UnixGroupInfo[]">
                <parameters />
              </method>
              <method name="GetMemberNames()" attrib="134" returntype="System.String[]">
                <parameters />
              </method>
              <method name="GetMembers()" attrib="134" returntype="Mono.Unix.UnixUserInfo[]">
                <parameters />
              </method>
              <method name="ToGroup()" attrib="134" returntype="Mono.Unix.Native.Group">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="UnixIOException" type="class" base="System.IO.IOException" serializable="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Unix.Native.Errno)" attrib="6278">
                <parameters>
                  <parameter name="errno" position="0" attrib="0" type="Mono.Unix.Native.Errno" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="errno" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Unix.Native.Errno, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="errno" position="0" attrib="0" type="Mono.Unix.Native.Errno" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="errno" position="0" attrib="0" type="System.Int32" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="6276">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ErrorCode" attrib="0" ptype="Mono.Unix.Native.Errno">
                <methods>
                  <method name="get_ErrorCode()" attrib="2182" returntype="Mono.Unix.Native.Errno">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NativeErrorCode" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_NativeErrorCode()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="UnixListener" type="class" base="System.MarshalByRefObject" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(Mono.Unix.UnixEndPoint)" attrib="6278">
                <parameters>
                  <parameter name="localEndPoint" position="0" attrib="0" type="Mono.Unix.UnixEndPoint" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="LocalEndpoint" attrib="0" ptype="System.Net.EndPoint">
                <methods>
                  <method name="get_LocalEndpoint()" attrib="2182" returntype="System.Net.EndPoint">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Server" attrib="0" ptype="System.Net.Sockets.Socket">
                <methods>
                  <method name="get_Server()" attrib="2180" returntype="System.Net.Sockets.Socket">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AcceptSocket()" attrib="134" returntype="System.Net.Sockets.Socket">
                <parameters />
              </method>
              <method name="AcceptUnixClient()" attrib="134" returntype="Mono.Unix.UnixClient">
                <parameters />
              </method>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Pending()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="Start()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Start(System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="backlog" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Stop()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="~UnixListener()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="UnixMarshal" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="AllocHeap(System.Int64)" attrib="150" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="FreeHeap(System.IntPtr)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="GetErrorDescription(Mono.Unix.Native.Errno)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="errno" position="0" attrib="0" type="Mono.Unix.Native.Errno" />
                </parameters>
              </method>
              <method name="PtrToString(System.IntPtr)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="p" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="PtrToString(System.IntPtr, System.Text.Encoding)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="p" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                </parameters>
              </method>
              <method name="PtrToStringArray(System.IntPtr)" attrib="150" static="true" returntype="System.String[]">
                <parameters>
                  <parameter name="stringArray" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="PtrToStringArray(System.Int32, System.IntPtr)" attrib="150" static="true" returntype="System.String[]">
                <parameters>
                  <parameter name="count" position="0" attrib="0" type="System.Int32" />
                  <parameter name="stringArray" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="PtrToStringArray(System.IntPtr, System.Text.Encoding)" attrib="150" static="true" returntype="System.String[]">
                <parameters>
                  <parameter name="stringArray" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                </parameters>
              </method>
              <method name="PtrToStringArray(System.Int32, System.IntPtr, System.Text.Encoding)" attrib="150" static="true" returntype="System.String[]">
                <parameters>
                  <parameter name="count" position="0" attrib="0" type="System.Int32" />
                  <parameter name="stringArray" position="1" attrib="0" type="System.IntPtr" />
                  <parameter name="encoding" position="2" attrib="0" type="System.Text.Encoding" />
                </parameters>
              </method>
              <method name="PtrToStringUnix(System.IntPtr)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="p" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="ReAllocHeap(System.IntPtr, System.Int64)" attrib="150" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="size" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ShouldRetrySyscall(System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="r" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ShouldRetrySyscall(System.Int32, out Mono.Unix.Native.Errno&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="r" position="0" attrib="0" type="System.Int32" />
                  <parameter name="errno" position="1" attrib="2" type="Mono.Unix.Native.Errno" direction="out" />
                </parameters>
              </method>
              <method name="StringToHeap(System.String)" attrib="150" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="StringToHeap(System.String, System.Text.Encoding)" attrib="150" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                </parameters>
              </method>
              <method name="StringToHeap(System.String, System.Int32, System.Int32)" attrib="150" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="StringToHeap(System.String, System.Int32, System.Int32, System.Text.Encoding)" attrib="150" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                  <parameter name="encoding" position="3" attrib="0" type="System.Text.Encoding" />
                </parameters>
              </method>
              <method name="ThrowExceptionForError(Mono.Unix.Native.Errno)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="errno" position="0" attrib="0" type="Mono.Unix.Native.Errno" />
                </parameters>
              </method>
              <method name="ThrowExceptionForErrorIf(System.Int32, Mono.Unix.Native.Errno)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="retval" position="0" attrib="0" type="System.Int32" />
                  <parameter name="errno" position="1" attrib="0" type="Mono.Unix.Native.Errno" />
                </parameters>
              </method>
              <method name="ThrowExceptionForLastError()" attrib="150" static="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ThrowExceptionForLastErrorIf(System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="retval" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UnixPath" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="AltDirectorySeparatorChar" attrib="54" fieldtype="System.Char" />
              <field name="DirectorySeparatorChar" attrib="54" fieldtype="System.Char" />
              <field name="PathSeparator" attrib="54" fieldtype="System.Char" />
              <field name="VolumeSeparatorChar" attrib="54" fieldtype="System.Char" />
            </fields>
            <methods>
              <method name="Combine(System.String, System.String[])" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="path1" position="0" attrib="0" type="System.String" />
                  <parameter name="paths" position="1" attrib="0" type="System.String[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="GetCanonicalPath(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetCompleteRealPath(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetDirectoryName(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFileName(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFullPath(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetInvalidPathChars()" attrib="150" static="true" returntype="System.Char[]">
                <parameters />
              </method>
              <method name="GetPathRoot(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetRealPath(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IsPathRooted(System.String)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadLink(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReadLinkAt(System.Int32, System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="path" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="TryReadLink(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="TryReadLinkAt(System.Int32, System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="path" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UnixPipes" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.UnixPipes]" />
            </interfaces>
            <fields>
              <field name="Reading" attrib="6" fieldtype="Mono.Unix.UnixStream" />
              <field name="Writing" attrib="6" fieldtype="Mono.Unix.UnixStream" />
            </fields>
            <constructors>
              <constructor name=".ctor(Mono.Unix.UnixStream, Mono.Unix.UnixStream)" attrib="6278">
                <parameters>
                  <parameter name="reading" position="0" attrib="0" type="Mono.Unix.UnixStream" />
                  <parameter name="writing" position="1" attrib="0" type="Mono.Unix.UnixStream" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="CreatePipes()" attrib="150" static="true" returntype="Mono.Unix.UnixPipes">
                <parameters />
              </method>
              <method name="Equals(Mono.Unix.UnixPipes)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.UnixPipes" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.UnixPipes, Mono.Unix.UnixPipes)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.UnixPipes" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.UnixPipes" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.UnixPipes, Mono.Unix.UnixPipes)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.UnixPipes" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.UnixPipes" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UnixProcess" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="ExitCode" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_ExitCode()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HasExited" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_HasExited()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HasSignaled" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_HasSignaled()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HasStopped" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_HasStopped()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Id" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Id()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ProcessGroupId" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_ProcessGroupId()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_ProcessGroupId(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SessionId" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_SessionId()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="StopSignal" attrib="0" ptype="Mono.Unix.Native.Signum">
                <methods>
                  <method name="get_StopSignal()" attrib="2182" returntype="Mono.Unix.Native.Signum">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TerminationSignal" attrib="0" ptype="Mono.Unix.Native.Signum">
                <methods>
                  <method name="get_TerminationSignal()" attrib="2182" returntype="Mono.Unix.Native.Signum">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetCurrentProcess()" attrib="150" static="true" returntype="Mono.Unix.UnixProcess">
                <parameters />
              </method>
              <method name="GetCurrentProcessId()" attrib="150" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Kill()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Signal(Mono.Unix.Native.Signum)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="signal" position="0" attrib="0" type="Mono.Unix.Native.Signum" />
                </parameters>
              </method>
              <method name="WaitForExit()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="UnixSignal" type="class" base="System.Threading.WaitHandle" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(Mono.Unix.Native.RealTimeSignum)" attrib="6278">
                <parameters>
                  <parameter name="rtsig" position="0" attrib="0" type="Mono.Unix.Native.RealTimeSignum" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Unix.Native.Signum)" attrib="6278">
                <parameters>
                  <parameter name="signum" position="0" attrib="0" type="Mono.Unix.Native.Signum" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Count()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_Count(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsRealTimeSignal" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsRealTimeSignal()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSet" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsSet()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RealTimeSignum" attrib="0" ptype="Mono.Unix.Native.RealTimeSignum">
                <methods>
                  <method name="get_RealTimeSignum()" attrib="2182" returntype="Mono.Unix.Native.RealTimeSignum">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Signum" attrib="0" ptype="Mono.Unix.Native.Signum">
                <methods>
                  <method name="get_Signum()" attrib="2182" returntype="Mono.Unix.Native.Signum">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Reset()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="WaitAny(Mono.Unix.UnixSignal[])" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="signals" position="0" attrib="0" type="Mono.Unix.UnixSignal[]" />
                </parameters>
              </method>
              <method name="WaitAny(Mono.Unix.UnixSignal[], System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="signals" position="0" attrib="0" type="Mono.Unix.UnixSignal[]" />
                  <parameter name="millisecondsTimeout" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WaitAny(Mono.Unix.UnixSignal[], System.TimeSpan)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="signals" position="0" attrib="0" type="Mono.Unix.UnixSignal[]" />
                  <parameter name="timeout" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="WaitOne()" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="WaitOne(System.Int32, System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="millisecondsTimeout" position="0" attrib="0" type="System.Int32" />
                  <parameter name="exitContext" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WaitOne(System.TimeSpan, System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="timeout" position="0" attrib="0" type="System.TimeSpan" />
                  <parameter name="exitContext" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UnixStream" type="class" base="System.IO.Stream" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <fields>
              <field name="InvalidFileDescriptor" attrib="32854" fieldtype="System.Int32" value="-1" />
              <field name="StandardErrorFileDescriptor" attrib="32854" fieldtype="System.Int32" value="2" />
              <field name="StandardInputFileDescriptor" attrib="32854" fieldtype="System.Int32" value="0" />
              <field name="StandardOutputFileDescriptor" attrib="32854" fieldtype="System.Int32" value="1" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="fileDescriptor" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="fileDescriptor" position="0" attrib="0" type="System.Int32" />
                  <parameter name="ownsHandle" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CanRead" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanRead()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanSeek" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanSeek()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanWrite" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanWrite()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FileAccessPermissions" attrib="0" ptype="Mono.Unix.FileAccessPermissions">
                <methods>
                  <method name="get_FileAccessPermissions()" attrib="2182" returntype="Mono.Unix.FileAccessPermissions">
                    <parameters />
                  </method>
                  <method name="set_FileAccessPermissions(Mono.Unix.FileAccessPermissions)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Unix.FileAccessPermissions" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="FileSpecialAttributes" attrib="0" ptype="Mono.Unix.FileSpecialAttributes">
                <methods>
                  <method name="get_FileSpecialAttributes()" attrib="2182" returntype="Mono.Unix.FileSpecialAttributes">
                    <parameters />
                  </method>
                  <method name="set_FileSpecialAttributes(Mono.Unix.FileSpecialAttributes)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Unix.FileSpecialAttributes" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="FileType" attrib="0" ptype="Mono.Unix.FileTypes">
                <methods>
                  <method name="get_FileType()" attrib="2182" returntype="Mono.Unix.FileTypes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Handle" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Handle()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_Length()" attrib="2246" virtual="true" is-override="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OwnerGroup" attrib="0" ptype="Mono.Unix.UnixGroupInfo">
                <methods>
                  <method name="get_OwnerGroup()" attrib="2182" returntype="Mono.Unix.UnixGroupInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OwnerGroupId" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_OwnerGroupId()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OwnerUser" attrib="0" ptype="Mono.Unix.UnixUserInfo">
                <methods>
                  <method name="get_OwnerUser()" attrib="2182" returntype="Mono.Unix.UnixUserInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OwnerUserId" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_OwnerUserId()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Position" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_Position()" attrib="2246" virtual="true" is-override="true" returntype="System.Int64">
                    <parameters />
                  </method>
                  <method name="set_Position(System.Int64)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Protection" attrib="0" ptype="Mono.Unix.Native.FilePermissions">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Protection()" attrib="2182" returntype="Mono.Unix.Native.FilePermissions">
                    <parameters />
                  </method>
                  <method name="set_Protection(Mono.Unix.Native.FilePermissions)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AdviseFileAccessPattern(Mono.Unix.FileAccessPattern)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="pattern" position="0" attrib="0" type="Mono.Unix.FileAccessPattern" />
                </parameters>
              </method>
              <method name="AdviseFileAccessPattern(Mono.Unix.FileAccessPattern, System.Int64, System.Int64)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="pattern" position="0" attrib="0" type="Mono.Unix.FileAccessPattern" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int64" />
                  <parameter name="len" position="2" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Close()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Flush()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="GetConfigurationValue(Mono.Unix.Native.PathconfName)" attrib="134" returntype="System.Int64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="Mono.Unix.Native.PathconfName" />
                </parameters>
              </method>
              <method name="Read(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="3" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadAtOffset(System.Byte[], System.Int32, System.Int32, System.Int64)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="3" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                  <parameter name="fileOffset" position="3" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Seek(System.Int64, System.IO.SeekOrigin)" attrib="198" virtual="true" is-override="true" returntype="System.Int64">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int64" />
                  <parameter name="origin" position="1" attrib="0" type="System.IO.SeekOrigin" />
                </parameters>
              </method>
              <method name="SendTo(Mono.Unix.UnixStream)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="output" position="0" attrib="0" type="Mono.Unix.UnixStream" />
                </parameters>
              </method>
              <method name="SendTo(Mono.Unix.UnixStream, System.UInt64)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="output" position="0" attrib="0" type="Mono.Unix.UnixStream" />
                  <parameter name="count" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="SendTo(System.Int32, System.UInt64)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="out_fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="count" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="SetLength(System.Int64)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="SetOwner(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="user" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="SetOwner(System.Int64, System.Int64)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="user" position="0" attrib="0" type="System.Int64" />
                  <parameter name="group" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="SetOwner(System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="user" position="0" attrib="0" type="System.String" />
                  <parameter name="group" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Write(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteAtOffset(System.Byte[], System.Int32, System.Int32, System.Int64)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                  <parameter name="fileOffset" position="3" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="~UnixStream()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="UnixSymbolicLinkInfo" type="class" base="Mono.Unix.UnixFileSystemInfo" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Contents" attrib="0" ptype="Mono.Unix.UnixFileSystemInfo">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Use GetContents()" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Contents()" attrib="2182" returntype="Mono.Unix.UnixFileSystemInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ContentsPath" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_ContentsPath()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HasContents" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_HasContents()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateSymbolicLinkTo(Mono.Unix.UnixFileSystemInfo)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="Mono.Unix.UnixFileSystemInfo" />
                </parameters>
              </method>
              <method name="CreateSymbolicLinkTo(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Delete()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="GetContents()" attrib="134" returntype="Mono.Unix.UnixFileSystemInfo">
                <parameters />
              </method>
              <method name="GetFileStatus(System.String, out Mono.Unix.Native.Stat&amp;)" attrib="196" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="stat" position="1" attrib="2" type="Mono.Unix.Native.Stat" direction="out" />
                </parameters>
              </method>
              <method name="SetOwner(System.Int64, System.Int64)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="owner" position="0" attrib="0" type="System.Int64" />
                  <parameter name="group" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UnixUserInfo" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(Mono.Unix.Native.Passwd)" attrib="6278">
                <parameters>
                  <parameter name="passwd" position="0" attrib="0" type="Mono.Unix.Native.Passwd" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int64)" attrib="6278">
                <parameters>
                  <parameter name="user" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="user" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt32)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="user" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Group" attrib="0" ptype="Mono.Unix.UnixGroupInfo">
                <methods>
                  <method name="get_Group()" attrib="2182" returntype="Mono.Unix.UnixGroupInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GroupId" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_GroupId()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GroupName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_GroupName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HomeDirectory" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_HomeDirectory()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Password" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Password()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RealName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_RealName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ShellProgram" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_ShellProgram()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UserId" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_UserId()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UserName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_UserName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetLocalUsers()" attrib="150" static="true" returntype="Mono.Unix.UnixUserInfo[]">
                <parameters />
              </method>
              <method name="GetLoginName()" attrib="150" static="true" returntype="System.String">
                <parameters />
              </method>
              <method name="GetRealUser()" attrib="150" static="true" returntype="Mono.Unix.UnixUserInfo">
                <parameters />
              </method>
              <method name="GetRealUserId()" attrib="150" static="true" returntype="System.Int64">
                <parameters />
              </method>
              <method name="ToPasswd()" attrib="134" returntype="Mono.Unix.Native.Passwd">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Unix.Native">
        <classes>
          <class name="AccessModes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="F_OK" attrib="32854" fieldtype="Mono.Unix.Native.AccessModes" value="8" />
              <field name="R_OK" attrib="32854" fieldtype="Mono.Unix.Native.AccessModes" value="1" />
              <field name="W_OK" attrib="32854" fieldtype="Mono.Unix.Native.AccessModes" value="2" />
              <field name="X_OK" attrib="32854" fieldtype="Mono.Unix.Native.AccessModes" value="4" />
            </fields>
          </class>
          <class name="AtFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="AT_EMPTY_PATH" attrib="32854" fieldtype="Mono.Unix.Native.AtFlags" value="4096" />
              <field name="AT_NO_AUTOMOUNT" attrib="32854" fieldtype="Mono.Unix.Native.AtFlags" value="2048" />
              <field name="AT_REMOVEDIR" attrib="32854" fieldtype="Mono.Unix.Native.AtFlags" value="512" />
              <field name="AT_SYMLINK_FOLLOW" attrib="32854" fieldtype="Mono.Unix.Native.AtFlags" value="1024" />
              <field name="AT_SYMLINK_NOFOLLOW" attrib="32854" fieldtype="Mono.Unix.Native.AtFlags" value="256" />
            </fields>
          </class>
          <class name="CdeclFunction" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.String, System.String)" attrib="6278">
                <parameters>
                  <parameter name="library" position="0" attrib="0" type="System.String" />
                  <parameter name="method" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.String, System.Type)" attrib="6278">
                <parameters>
                  <parameter name="library" position="0" attrib="0" type="System.String" />
                  <parameter name="method" position="1" attrib="0" type="System.String" />
                  <parameter name="returnType" position="2" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="Invoke(System.Object[])" attrib="134" returntype="System.Object">
                <parameters>
                  <parameter name="parameters" position="0" attrib="0" type="System.Object[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Cmsghdr" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <fields>
              <field name="cmsg_len" attrib="6" fieldtype="System.Int64" />
              <field name="cmsg_level" attrib="6" fieldtype="Mono.Unix.Native.UnixSocketProtocol" />
              <field name="cmsg_type" attrib="6" fieldtype="Mono.Unix.Native.UnixSocketControlMessage" />
            </fields>
            <properties>
              <property name="Size" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Size()" attrib="2198" static="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ReadFromBuffer(Mono.Unix.Native.Msghdr, System.Int64)" attrib="150" static="true" returntype="Mono.Unix.Native.Cmsghdr">
                <parameters>
                  <parameter name="msgh" position="0" attrib="0" type="Mono.Unix.Native.Msghdr" />
                  <parameter name="cmsg" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="WriteToBuffer(Mono.Unix.Native.Msghdr, System.Int64)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="msgh" position="0" attrib="0" type="Mono.Unix.Native.Msghdr" />
                  <parameter name="cmsg" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ConfstrName" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="_CS_GNU_LIBC_VERSION" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="2" />
              <field name="_CS_GNU_LIBPTHREAD_VERSION" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="3" />
              <field name="_CS_LFS64_CFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1004" />
              <field name="_CS_LFS64_LDFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1005" />
              <field name="_CS_LFS64_LIBS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1006" />
              <field name="_CS_LFS64_LINTFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1007" />
              <field name="_CS_LFS_CFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1000" />
              <field name="_CS_LFS_LDFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1001" />
              <field name="_CS_LFS_LIBS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1002" />
              <field name="_CS_LFS_LINTFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1003" />
              <field name="_CS_PATH" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="0" />
              <field name="_CS_POSIX_V6_ILP32_OFF32_CFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1116" />
              <field name="_CS_POSIX_V6_ILP32_OFF32_LDFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1117" />
              <field name="_CS_POSIX_V6_ILP32_OFF32_LIBS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1118" />
              <field name="_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1119" />
              <field name="_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1120" />
              <field name="_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1121" />
              <field name="_CS_POSIX_V6_ILP32_OFFBIG_LIBS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1122" />
              <field name="_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1123" />
              <field name="_CS_POSIX_V6_LP64_OFF64_CFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1124" />
              <field name="_CS_POSIX_V6_LP64_OFF64_LDFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1125" />
              <field name="_CS_POSIX_V6_LP64_OFF64_LIBS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1126" />
              <field name="_CS_POSIX_V6_LP64_OFF64_LINTFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1127" />
              <field name="_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1128" />
              <field name="_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1129" />
              <field name="_CS_POSIX_V6_LPBIG_OFFBIG_LIBS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1130" />
              <field name="_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1131" />
              <field name="_CS_V6_WIDTH_RESTRICTED_ENVS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1" />
              <field name="_CS_XBS5_ILP32_OFF32_CFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1100" />
              <field name="_CS_XBS5_ILP32_OFF32_LDFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1101" />
              <field name="_CS_XBS5_ILP32_OFF32_LIBS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1102" />
              <field name="_CS_XBS5_ILP32_OFF32_LINTFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1103" />
              <field name="_CS_XBS5_ILP32_OFFBIG_CFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1104" />
              <field name="_CS_XBS5_ILP32_OFFBIG_LDFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1105" />
              <field name="_CS_XBS5_ILP32_OFFBIG_LIBS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1106" />
              <field name="_CS_XBS5_ILP32_OFFBIG_LINTFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1107" />
              <field name="_CS_XBS5_LP64_OFF64_CFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1108" />
              <field name="_CS_XBS5_LP64_OFF64_LDFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1109" />
              <field name="_CS_XBS5_LP64_OFF64_LIBS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1110" />
              <field name="_CS_XBS5_LP64_OFF64_LINTFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1111" />
              <field name="_CS_XBS5_LPBIG_OFFBIG_CFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1112" />
              <field name="_CS_XBS5_LPBIG_OFFBIG_LDFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1113" />
              <field name="_CS_XBS5_LPBIG_OFFBIG_LIBS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1114" />
              <field name="_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS" attrib="32854" fieldtype="Mono.Unix.Native.ConfstrName" value="1115" />
            </fields>
          </class>
          <class name="DirectoryNotifyFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="DN_ACCESS" attrib="32854" fieldtype="Mono.Unix.Native.DirectoryNotifyFlags" value="1" />
              <field name="DN_ATTRIB" attrib="32854" fieldtype="Mono.Unix.Native.DirectoryNotifyFlags" value="32" />
              <field name="DN_CREATE" attrib="32854" fieldtype="Mono.Unix.Native.DirectoryNotifyFlags" value="4" />
              <field name="DN_DELETE" attrib="32854" fieldtype="Mono.Unix.Native.DirectoryNotifyFlags" value="8" />
              <field name="DN_MODIFY" attrib="32854" fieldtype="Mono.Unix.Native.DirectoryNotifyFlags" value="2" />
              <field name="DN_MULTISHOT" attrib="32854" fieldtype="Mono.Unix.Native.DirectoryNotifyFlags" value="-2147483648" />
              <field name="DN_RENAME" attrib="32854" fieldtype="Mono.Unix.Native.DirectoryNotifyFlags" value="16" />
            </fields>
          </class>
          <class name="Dirent" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.Dirent]" />
            </interfaces>
            <fields>
              <field name="d_ino" attrib="6" fieldtype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="d_name" attrib="6" fieldtype="System.String" />
              <field name="d_off" attrib="6" fieldtype="System.Int64" />
              <field name="d_reclen" attrib="6" fieldtype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="d_type" attrib="6" fieldtype="System.Byte" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Equals(Mono.Unix.Native.Dirent)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Dirent" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.Native.Dirent, Mono.Unix.Native.Dirent)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Dirent" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Dirent" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.Native.Dirent, Mono.Unix.Native.Dirent)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Dirent" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Dirent" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="EpollEvent" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Explicit" pack="1" size="12">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <fields>
              <field name="events" attrib="6" fieldtype="Mono.Unix.Native.EpollEvents" />
              <field name="fd" attrib="6" fieldtype="System.Int32" />
              <field name="ptr" attrib="6" fieldtype="System.IntPtr" />
              <field name="u32" attrib="6" fieldtype="System.UInt32" />
              <field name="u64" attrib="6" fieldtype="System.UInt64" />
            </fields>
          </class>
          <class name="EpollEvents" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.UInt32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="EPOLLERR" attrib="32854" fieldtype="Mono.Unix.Native.EpollEvents" value="8" />
              <field name="EPOLLET" attrib="32854" fieldtype="Mono.Unix.Native.EpollEvents" value="2147483648" />
              <field name="EPOLLHUP" attrib="32854" fieldtype="Mono.Unix.Native.EpollEvents" value="16" />
              <field name="EPOLLIN" attrib="32854" fieldtype="Mono.Unix.Native.EpollEvents" value="1" />
              <field name="EPOLLMSG" attrib="32854" fieldtype="Mono.Unix.Native.EpollEvents" value="1024" />
              <field name="EPOLLONESHOT" attrib="32854" fieldtype="Mono.Unix.Native.EpollEvents" value="1073741824" />
              <field name="EPOLLOUT" attrib="32854" fieldtype="Mono.Unix.Native.EpollEvents" value="4" />
              <field name="EPOLLPRI" attrib="32854" fieldtype="Mono.Unix.Native.EpollEvents" value="2" />
              <field name="EPOLLRDBAND" attrib="32854" fieldtype="Mono.Unix.Native.EpollEvents" value="128" />
              <field name="EPOLLRDHUP" attrib="32854" fieldtype="Mono.Unix.Native.EpollEvents" value="8192" />
              <field name="EPOLLRDNORM" attrib="32854" fieldtype="Mono.Unix.Native.EpollEvents" value="64" />
              <field name="EPOLLWRBAND" attrib="32854" fieldtype="Mono.Unix.Native.EpollEvents" value="512" />
              <field name="EPOLLWRNORM" attrib="32854" fieldtype="Mono.Unix.Native.EpollEvents" value="256" />
            </fields>
          </class>
          <class name="EpollFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="EPOLL_CLOEXEC" attrib="32854" fieldtype="Mono.Unix.Native.EpollFlags" value="2000000" />
              <field name="EPOLL_NONBLOCK" attrib="32854" fieldtype="Mono.Unix.Native.EpollFlags" value="4000" />
            </fields>
          </class>
          <class name="EpollOp" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="EPOLL_CTL_ADD" attrib="32854" fieldtype="Mono.Unix.Native.EpollOp" value="1" />
              <field name="EPOLL_CTL_DEL" attrib="32854" fieldtype="Mono.Unix.Native.EpollOp" value="2" />
              <field name="EPOLL_CTL_MOD" attrib="32854" fieldtype="Mono.Unix.Native.EpollOp" value="3" />
            </fields>
          </class>
          <class name="Errno" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes />
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="E2BIG" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="7" />
              <field name="EACCES" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="13" />
              <field name="EADDRINUSE" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="98" />
              <field name="EADDRNOTAVAIL" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="99" />
              <field name="EADV" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="68" />
              <field name="EAFNOSUPPORT" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="97" />
              <field name="EAGAIN" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="11" />
              <field name="EALREADY" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="114" />
              <field name="EAUTH" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1080" />
              <field name="EBADARCH" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1086" />
              <field name="EBADE" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="52" />
              <field name="EBADEXEC" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1085" />
              <field name="EBADF" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="9" />
              <field name="EBADFD" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="77" />
              <field name="EBADMACHO" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1088" />
              <field name="EBADMSG" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="74" />
              <field name="EBADR" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="53" />
              <field name="EBADRPC" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1072" />
              <field name="EBADRQC" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="56" />
              <field name="EBADSLT" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="57" />
              <field name="EBFONT" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="59" />
              <field name="EBUSY" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="16" />
              <field name="ECANCELED" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="125" />
              <field name="ECHILD" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="10" />
              <field name="ECHRNG" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="44" />
              <field name="ECOMM" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="70" />
              <field name="ECONNABORTED" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="103" />
              <field name="ECONNREFUSED" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="111" />
              <field name="ECONNRESET" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="104" />
              <field name="EDEADLK" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="35" />
              <field name="EDEADLOCK" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="35" />
              <field name="EDESTADDRREQ" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="89" />
              <field name="EDEVERR" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1083" />
              <field name="EDOM" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="33" />
              <field name="EDOTDOT" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="73" />
              <field name="EDQUOT" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="122" />
              <field name="EEXIST" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="17" />
              <field name="EFAULT" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="14" />
              <field name="EFBIG" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="27" />
              <field name="EFTYPE" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1079" />
              <field name="EHOSTDOWN" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="112" />
              <field name="EHOSTUNREACH" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="113" />
              <field name="EIDRM" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="43" />
              <field name="EILSEQ" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="84" />
              <field name="EINPROGRESS" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="115" />
              <field name="EINTR" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="4" />
              <field name="EINVAL" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="22" />
              <field name="EIO" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="5" />
              <field name="EISCONN" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="106" />
              <field name="EISDIR" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="21" />
              <field name="EISNAM" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="120" />
              <field name="EKEYEXPIRED" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="127" />
              <field name="EKEYREJECTED" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="129" />
              <field name="EKEYREVOKED" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="128" />
              <field name="EL2HLT" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="51" />
              <field name="EL2NSYNC" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="45" />
              <field name="EL3HLT" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="46" />
              <field name="EL3RST" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="47" />
              <field name="ELIBACC" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="79" />
              <field name="ELIBBAD" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="80" />
              <field name="ELIBEXEC" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="83" />
              <field name="ELIBMAX" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="82" />
              <field name="ELIBSCN" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="81" />
              <field name="ELNRNG" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="48" />
              <field name="ELOOP" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="40" />
              <field name="EMEDIUMTYPE" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="124" />
              <field name="EMFILE" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="24" />
              <field name="EMLINK" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="31" />
              <field name="EMSGSIZE" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="90" />
              <field name="EMULTIHOP" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="72" />
              <field name="ENAMETOOLONG" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="36" />
              <field name="ENAVAIL" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="119" />
              <field name="ENEEDAUTH" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1081" />
              <field name="ENETDOWN" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="100" />
              <field name="ENETRESET" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="102" />
              <field name="ENETUNREACH" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="101" />
              <field name="ENFILE" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="23" />
              <field name="ENOANO" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="55" />
              <field name="ENOATTR" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1093" />
              <field name="ENOBUFS" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="105" />
              <field name="ENOCSI" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="50" />
              <field name="ENODATA" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="61" />
              <field name="ENODEV" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="19" />
              <field name="ENOENT" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="2" />
              <field name="ENOEXEC" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="8" />
              <field name="ENOKEY" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="126" />
              <field name="ENOLCK" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="37" />
              <field name="ENOLINK" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="67" />
              <field name="ENOMEDIUM" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="123" />
              <field name="ENOMEM" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="12" />
              <field name="ENOMSG" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="42" />
              <field name="ENONET" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="64" />
              <field name="ENOPKG" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="65" />
              <field name="ENOPOLICY" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1103" />
              <field name="ENOPROTOOPT" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="92" />
              <field name="ENOSPC" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="28" />
              <field name="ENOSR" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="63" />
              <field name="ENOSTR" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="60" />
              <field name="ENOSYS" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="38" />
              <field name="ENOTBLK" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="15" />
              <field name="ENOTCONN" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="107" />
              <field name="ENOTDIR" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="20" />
              <field name="ENOTEMPTY" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="39" />
              <field name="ENOTNAM" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="118" />
              <field name="ENOTRECOVERABLE" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="131" />
              <field name="ENOTSOCK" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="88" />
              <field name="ENOTTY" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="25" />
              <field name="ENOTUNIQ" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="76" />
              <field name="ENXIO" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="6" />
              <field name="EOPNOTSUPP" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="95" />
              <field name="EOVERFLOW" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="75" />
              <field name="EOWNERDEAD" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="130" />
              <field name="EPERM" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1" />
              <field name="EPFNOSUPPORT" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="96" />
              <field name="EPIPE" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="32" />
              <field name="EPROCLIM" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1067" />
              <field name="EPROCUNAVAIL" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1076" />
              <field name="EPROGMISMATCH" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1075" />
              <field name="EPROGUNAVAIL" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1074" />
              <field name="EPROTO" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="71" />
              <field name="EPROTONOSUPPORT" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="93" />
              <field name="EPROTOTYPE" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="91" />
              <field name="EPWROFF" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1082" />
              <field name="ERANGE" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="34" />
              <field name="EREMCHG" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="78" />
              <field name="EREMOTE" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="66" />
              <field name="EREMOTEIO" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="121" />
              <field name="ERESTART" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="85" />
              <field name="EROFS" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="30" />
              <field name="ERPCMISMATCH" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1073" />
              <field name="ESHLIBVERS" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="1087" />
              <field name="ESHUTDOWN" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="108" />
              <field name="ESOCKTNOSUPPORT" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="94" />
              <field name="ESPIPE" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="29" />
              <field name="ESRCH" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="3" />
              <field name="ESRMNT" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="69" />
              <field name="ESTALE" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="116" />
              <field name="ESTRPIPE" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="86" />
              <field name="ETIME" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="62" />
              <field name="ETIMEDOUT" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="110" />
              <field name="ETOOMANYREFS" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="109" />
              <field name="ETXTBSY" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="26" />
              <field name="EUCLEAN" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="117" />
              <field name="EUNATCH" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="49" />
              <field name="EUSERS" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="87" />
              <field name="EWOULDBLOCK" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="11" />
              <field name="EXDEV" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="18" />
              <field name="EXFULL" attrib="32854" fieldtype="Mono.Unix.Native.Errno" value="54" />
            </fields>
          </class>
          <class name="FcntlCommand" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="F_DUPFD" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="0" />
              <field name="F_GETFD" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="1" />
              <field name="F_GETFL" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="3" />
              <field name="F_GETLEASE" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="1025" />
              <field name="F_GETLK" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="12" />
              <field name="F_GETOWN" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="9" />
              <field name="F_GETSIG" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="11" />
              <field name="F_NOCACHE" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="48" />
              <field name="F_NOTIFY" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="1026" />
              <field name="F_SETFD" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="2" />
              <field name="F_SETFL" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="4" />
              <field name="F_SETLEASE" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="1024" />
              <field name="F_SETLK" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="13" />
              <field name="F_SETLKW" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="14" />
              <field name="F_SETOWN" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="8" />
              <field name="F_SETSIG" attrib="32854" fieldtype="Mono.Unix.Native.FcntlCommand" value="10" />
            </fields>
          </class>
          <class name="FilePermissions" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.UInt32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="ACCESSPERMS" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="511" />
              <field name="ALLPERMS" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="4095" />
              <field name="DEFFILEMODE" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="438" />
              <field name="S_IFBLK" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="24576">
                <attributes />
              </field>
              <field name="S_IFCHR" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="8192">
                <attributes />
              </field>
              <field name="S_IFDIR" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="16384">
                <attributes />
              </field>
              <field name="S_IFIFO" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="4096">
                <attributes />
              </field>
              <field name="S_IFLNK" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="40960">
                <attributes />
              </field>
              <field name="S_IFMT" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="61440" />
              <field name="S_IFREG" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="32768">
                <attributes />
              </field>
              <field name="S_IFSOCK" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="49152">
                <attributes />
              </field>
              <field name="S_IRGRP" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="32" />
              <field name="S_IROTH" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="4" />
              <field name="S_IRUSR" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="256" />
              <field name="S_IRWXG" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="56" />
              <field name="S_IRWXO" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="7" />
              <field name="S_IRWXU" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="448" />
              <field name="S_ISGID" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="1024" />
              <field name="S_ISUID" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="2048" />
              <field name="S_ISVTX" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="512" />
              <field name="S_IWGRP" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="16" />
              <field name="S_IWOTH" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="2" />
              <field name="S_IWUSR" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="128" />
              <field name="S_IXGRP" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="8" />
              <field name="S_IXOTH" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="1" />
              <field name="S_IXUSR" attrib="32854" fieldtype="Mono.Unix.Native.FilePermissions" value="64" />
            </fields>
          </class>
          <class name="FilePosition" type="class" base="System.MarshalByRefObject" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.IEquatable`1[Mono.Unix.Native.FilePosition]" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Equals(Mono.Unix.Native.FilePosition)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.FilePosition" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.Native.FilePosition, Mono.Unix.Native.FilePosition)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.FilePosition" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.FilePosition" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.Native.FilePosition, Mono.Unix.Native.FilePosition)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.FilePosition" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.FilePosition" />
                </parameters>
              </method>
              <method name="~FilePosition()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Flock" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes />
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.Flock]" />
            </interfaces>
            <fields>
              <field name="l_len" attrib="6" fieldtype="System.Int64">
                <attributes />
              </field>
              <field name="l_pid" attrib="6" fieldtype="System.Int32">
                <attributes />
              </field>
              <field name="l_start" attrib="6" fieldtype="System.Int64">
                <attributes />
              </field>
              <field name="l_type" attrib="6" fieldtype="Mono.Unix.Native.LockType">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="l_whence" attrib="6" fieldtype="Mono.Unix.Native.SeekFlags">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
            </fields>
            <methods>
              <method name="Equals(Mono.Unix.Native.Flock)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Flock" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.Native.Flock, Mono.Unix.Native.Flock)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Flock" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Flock" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.Native.Flock, Mono.Unix.Native.Flock)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Flock" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Flock" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Fstab" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.Fstab]" />
            </interfaces>
            <fields>
              <field name="fs_file" attrib="6" fieldtype="System.String" />
              <field name="fs_freq" attrib="6" fieldtype="System.Int32" />
              <field name="fs_mntops" attrib="6" fieldtype="System.String" />
              <field name="fs_passno" attrib="6" fieldtype="System.Int32" />
              <field name="fs_spec" attrib="6" fieldtype="System.String" />
              <field name="fs_type" attrib="6" fieldtype="System.String" />
              <field name="fs_vfstype" attrib="6" fieldtype="System.String" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Equals(Mono.Unix.Native.Fstab)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Fstab" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.Native.Fstab, Mono.Unix.Native.Fstab)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Fstab" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Fstab" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.Native.Fstab, Mono.Unix.Native.Fstab)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Fstab" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Fstab" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Group" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.Group]" />
            </interfaces>
            <fields>
              <field name="gr_gid" attrib="6" fieldtype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="gr_mem" attrib="6" fieldtype="System.String[]" />
              <field name="gr_name" attrib="6" fieldtype="System.String" />
              <field name="gr_passwd" attrib="6" fieldtype="System.String" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Equals(Mono.Unix.Native.Group)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Group" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.Native.Group, Mono.Unix.Native.Group)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Group" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Group" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.Native.Group, Mono.Unix.Native.Group)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Group" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Group" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="In6Addr" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.In6Addr]" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Item" attrib="0" ptype="System.Byte" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="System.Byte">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, System.Byte)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="System.Byte" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CopyFrom(System.Byte[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="CopyTo(System.Byte[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="destination" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Equals(Mono.Unix.Native.In6Addr)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.In6Addr" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="InAddr" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.InAddr]" />
            </interfaces>
            <fields>
              <field name="s_addr" attrib="6" fieldtype="System.UInt32" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte, System.Byte, System.Byte, System.Byte)" attrib="6278">
                <parameters>
                  <parameter name="b0" position="0" attrib="0" type="System.Byte" />
                  <parameter name="b1" position="1" attrib="0" type="System.Byte" />
                  <parameter name="b2" position="2" attrib="0" type="System.Byte" />
                  <parameter name="b3" position="3" attrib="0" type="System.Byte" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Item" attrib="0" ptype="System.Byte" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="System.Byte">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, System.Byte)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="System.Byte" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CopyFrom(System.Byte[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="CopyTo(System.Byte[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="destination" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Equals(Mono.Unix.Native.InAddr)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.InAddr" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Iovec" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes />
            <fields>
              <field name="iov_base" attrib="6" fieldtype="System.IntPtr" />
              <field name="iov_len" attrib="6" fieldtype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
            </fields>
          </class>
          <class name="Linger" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <fields>
              <field name="l_linger" attrib="6" fieldtype="System.Int32" />
              <field name="l_onoff" attrib="6" fieldtype="System.Int32" />
            </fields>
            <methods>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="LockType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int16">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="F_RDLCK" attrib="32854" fieldtype="Mono.Unix.Native.LockType" value="0" />
              <field name="F_UNLCK" attrib="32854" fieldtype="Mono.Unix.Native.LockType" value="2" />
              <field name="F_WRLCK" attrib="32854" fieldtype="Mono.Unix.Native.LockType" value="1" />
            </fields>
          </class>
          <class name="LockfCommand" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="F_LOCK" attrib="32854" fieldtype="Mono.Unix.Native.LockfCommand" value="1" />
              <field name="F_TEST" attrib="32854" fieldtype="Mono.Unix.Native.LockfCommand" value="3" />
              <field name="F_TLOCK" attrib="32854" fieldtype="Mono.Unix.Native.LockfCommand" value="2" />
              <field name="F_ULOCK" attrib="32854" fieldtype="Mono.Unix.Native.LockfCommand" value="0" />
            </fields>
          </class>
          <class name="MessageFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="MSG_CMSG_CLOEXEC" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="1073741824" />
              <field name="MSG_CONFIRM" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="2048" />
              <field name="MSG_CTRUNC" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="8" />
              <field name="MSG_DONTROUTE" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="4" />
              <field name="MSG_DONTWAIT" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="64" />
              <field name="MSG_EOR" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="128" />
              <field name="MSG_ERRQUEUE" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="8192" />
              <field name="MSG_FASTOPEN" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="536870912" />
              <field name="MSG_FIN" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="512" />
              <field name="MSG_MORE" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="32768" />
              <field name="MSG_NOSIGNAL" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="16384" />
              <field name="MSG_OOB" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="1" />
              <field name="MSG_PEEK" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="2" />
              <field name="MSG_PROXY" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="16" />
              <field name="MSG_RST" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="4096" />
              <field name="MSG_SYN" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="1024" />
              <field name="MSG_TRUNC" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="32" />
              <field name="MSG_WAITALL" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="256" />
              <field name="MSG_WAITFORONE" attrib="32854" fieldtype="Mono.Unix.Native.MessageFlags" value="65536" />
            </fields>
          </class>
          <class name="MlockallFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="MCL_CURRENT" attrib="32854" fieldtype="Mono.Unix.Native.MlockallFlags" value="1" />
              <field name="MCL_FUTURE" attrib="32854" fieldtype="Mono.Unix.Native.MlockallFlags" value="2" />
            </fields>
          </class>
          <class name="MmapFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="MAP_ANON" attrib="32854" fieldtype="Mono.Unix.Native.MmapFlags" value="32" />
              <field name="MAP_ANONYMOUS" attrib="32854" fieldtype="Mono.Unix.Native.MmapFlags" value="32" />
              <field name="MAP_DENYWRITE" attrib="32854" fieldtype="Mono.Unix.Native.MmapFlags" value="2048" />
              <field name="MAP_EXECUTABLE" attrib="32854" fieldtype="Mono.Unix.Native.MmapFlags" value="4096" />
              <field name="MAP_FILE" attrib="32854" fieldtype="Mono.Unix.Native.MmapFlags" value="0" />
              <field name="MAP_FIXED" attrib="32854" fieldtype="Mono.Unix.Native.MmapFlags" value="16" />
              <field name="MAP_GROWSDOWN" attrib="32854" fieldtype="Mono.Unix.Native.MmapFlags" value="256" />
              <field name="MAP_LOCKED" attrib="32854" fieldtype="Mono.Unix.Native.MmapFlags" value="8192" />
              <field name="MAP_NONBLOCK" attrib="32854" fieldtype="Mono.Unix.Native.MmapFlags" value="65536" />
              <field name="MAP_NORESERVE" attrib="32854" fieldtype="Mono.Unix.Native.MmapFlags" value="16384" />
              <field name="MAP_POPULATE" attrib="32854" fieldtype="Mono.Unix.Native.MmapFlags" value="32768" />
              <field name="MAP_PRIVATE" attrib="32854" fieldtype="Mono.Unix.Native.MmapFlags" value="2" />
              <field name="MAP_SHARED" attrib="32854" fieldtype="Mono.Unix.Native.MmapFlags" value="1" />
              <field name="MAP_TYPE" attrib="32854" fieldtype="Mono.Unix.Native.MmapFlags" value="15" />
            </fields>
          </class>
          <class name="MmapProts" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="PROT_EXEC" attrib="32854" fieldtype="Mono.Unix.Native.MmapProts" value="4" />
              <field name="PROT_GROWSDOWN" attrib="32854" fieldtype="Mono.Unix.Native.MmapProts" value="16777216" />
              <field name="PROT_GROWSUP" attrib="32854" fieldtype="Mono.Unix.Native.MmapProts" value="33554432" />
              <field name="PROT_NONE" attrib="32854" fieldtype="Mono.Unix.Native.MmapProts" value="0" />
              <field name="PROT_READ" attrib="32854" fieldtype="Mono.Unix.Native.MmapProts" value="1" />
              <field name="PROT_WRITE" attrib="32854" fieldtype="Mono.Unix.Native.MmapProts" value="2" />
            </fields>
          </class>
          <class name="MountFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.UInt64">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="ST_APPEND" attrib="32854" fieldtype="Mono.Unix.Native.MountFlags" value="256" />
              <field name="ST_BIND" attrib="32854" fieldtype="Mono.Unix.Native.MountFlags" value="4096" />
              <field name="ST_IMMUTABLE" attrib="32854" fieldtype="Mono.Unix.Native.MountFlags" value="512" />
              <field name="ST_MANDLOCK" attrib="32854" fieldtype="Mono.Unix.Native.MountFlags" value="64" />
              <field name="ST_NOATIME" attrib="32854" fieldtype="Mono.Unix.Native.MountFlags" value="1024" />
              <field name="ST_NODEV" attrib="32854" fieldtype="Mono.Unix.Native.MountFlags" value="4" />
              <field name="ST_NODIRATIME" attrib="32854" fieldtype="Mono.Unix.Native.MountFlags" value="2048" />
              <field name="ST_NOEXEC" attrib="32854" fieldtype="Mono.Unix.Native.MountFlags" value="8" />
              <field name="ST_NOSUID" attrib="32854" fieldtype="Mono.Unix.Native.MountFlags" value="2" />
              <field name="ST_RDONLY" attrib="32854" fieldtype="Mono.Unix.Native.MountFlags" value="1" />
              <field name="ST_REMOUNT" attrib="32854" fieldtype="Mono.Unix.Native.MountFlags" value="32" />
              <field name="ST_SYNCHRONOUS" attrib="32854" fieldtype="Mono.Unix.Native.MountFlags" value="16" />
              <field name="ST_WRITE" attrib="32854" fieldtype="Mono.Unix.Native.MountFlags" value="128" />
            </fields>
          </class>
          <class name="MremapFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.UInt64">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="MREMAP_MAYMOVE" attrib="32854" fieldtype="Mono.Unix.Native.MremapFlags" value="1" />
            </fields>
          </class>
          <class name="Msghdr" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <fields>
              <field name="msg_control" attrib="6" fieldtype="System.Byte[]" />
              <field name="msg_controllen" attrib="6" fieldtype="System.Int64" />
              <field name="msg_flags" attrib="6" fieldtype="Mono.Unix.Native.MessageFlags" />
              <field name="msg_iov" attrib="6" fieldtype="Mono.Unix.Native.Iovec[]" />
              <field name="msg_iovlen" attrib="6" fieldtype="System.Int32" />
              <field name="msg_name" attrib="6" fieldtype="Mono.Unix.Native.Sockaddr" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="MsyncFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="MS_ASYNC" attrib="32854" fieldtype="Mono.Unix.Native.MsyncFlags" value="1" />
              <field name="MS_INVALIDATE" attrib="32854" fieldtype="Mono.Unix.Native.MsyncFlags" value="2" />
              <field name="MS_SYNC" attrib="32854" fieldtype="Mono.Unix.Native.MsyncFlags" value="4" />
            </fields>
          </class>
          <class name="NativeConvert" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <fields>
              <field name="LocalUnixEpoch" attrib="54" fieldtype="System.DateTime" />
              <field name="LocalUtcOffset" attrib="54" fieldtype="System.TimeSpan" />
              <field name="UnixEpoch" attrib="54" fieldtype="System.DateTime" />
            </fields>
            <methods>
              <method name="FromAccessModes(Mono.Unix.Native.AccessModes)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.AccessModes" />
                </parameters>
              </method>
              <method name="FromAtFlags(Mono.Unix.Native.AtFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.AtFlags" />
                </parameters>
              </method>
              <method name="FromConfstrName(Mono.Unix.Native.ConfstrName)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.ConfstrName" />
                </parameters>
              </method>
              <method name="FromDateTime(System.DateTime)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="FromDirectoryNotifyFlags(Mono.Unix.Native.DirectoryNotifyFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.DirectoryNotifyFlags" />
                </parameters>
              </method>
              <method name="FromEpollEvents(Mono.Unix.Native.EpollEvents)" attrib="150" static="true" returntype="System.UInt32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.EpollEvents" />
                </parameters>
              </method>
              <method name="FromEpollFlags(Mono.Unix.Native.EpollFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.EpollFlags" />
                </parameters>
              </method>
              <method name="FromErrno(Mono.Unix.Native.Errno)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Errno" />
                </parameters>
              </method>
              <method name="FromFcntlCommand(Mono.Unix.Native.FcntlCommand)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.FcntlCommand" />
                </parameters>
              </method>
              <method name="FromFilePermissions(Mono.Unix.Native.FilePermissions)" attrib="150" static="true" returntype="System.UInt32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="FromLockType(Mono.Unix.Native.LockType)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.LockType" />
                </parameters>
              </method>
              <method name="FromLockfCommand(Mono.Unix.Native.LockfCommand)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.LockfCommand" />
                </parameters>
              </method>
              <method name="FromMessageFlags(Mono.Unix.Native.MessageFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                </parameters>
              </method>
              <method name="FromMlockallFlags(Mono.Unix.Native.MlockallFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.MlockallFlags" />
                </parameters>
              </method>
              <method name="FromMmapFlags(Mono.Unix.Native.MmapFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.MmapFlags" />
                </parameters>
              </method>
              <method name="FromMmapProts(Mono.Unix.Native.MmapProts)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.MmapProts" />
                </parameters>
              </method>
              <method name="FromMountFlags(Mono.Unix.Native.MountFlags)" attrib="150" static="true" returntype="System.UInt64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.MountFlags" />
                </parameters>
              </method>
              <method name="FromMremapFlags(Mono.Unix.Native.MremapFlags)" attrib="150" static="true" returntype="System.UInt64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.MremapFlags" />
                </parameters>
              </method>
              <method name="FromMsyncFlags(Mono.Unix.Native.MsyncFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.MsyncFlags" />
                </parameters>
              </method>
              <method name="FromOctalPermissionString(System.String)" attrib="150" static="true" returntype="Mono.Unix.Native.FilePermissions">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="FromOpenFlags(Mono.Unix.Native.OpenFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.OpenFlags" />
                </parameters>
              </method>
              <method name="FromPathconfName(Mono.Unix.Native.PathconfName)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.PathconfName" />
                </parameters>
              </method>
              <method name="FromPollEvents(Mono.Unix.Native.PollEvents)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.PollEvents" />
                </parameters>
              </method>
              <method name="FromPosixFadviseAdvice(Mono.Unix.Native.PosixFadviseAdvice)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.PosixFadviseAdvice" />
                </parameters>
              </method>
              <method name="FromPosixMadviseAdvice(Mono.Unix.Native.PosixMadviseAdvice)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.PosixMadviseAdvice" />
                </parameters>
              </method>
              <method name="FromRealTimeSignum(Mono.Unix.Native.RealTimeSignum)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="sig" position="0" attrib="0" type="Mono.Unix.Native.RealTimeSignum" />
                </parameters>
              </method>
              <method name="FromSeekFlags(Mono.Unix.Native.SeekFlags)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.SeekFlags" />
                </parameters>
              </method>
              <method name="FromShutdownOption(Mono.Unix.Native.ShutdownOption)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.ShutdownOption" />
                </parameters>
              </method>
              <method name="FromSignum(Mono.Unix.Native.Signum)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Signum" />
                </parameters>
              </method>
              <method name="FromSysconfName(Mono.Unix.Native.SysconfName)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.SysconfName" />
                </parameters>
              </method>
              <method name="FromSyslogFacility(Mono.Unix.Native.SyslogFacility)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.SyslogFacility" />
                </parameters>
              </method>
              <method name="FromSyslogLevel(Mono.Unix.Native.SyslogLevel)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.SyslogLevel" />
                </parameters>
              </method>
              <method name="FromSyslogOptions(Mono.Unix.Native.SyslogOptions)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.SyslogOptions" />
                </parameters>
              </method>
              <method name="FromTimeT(System.Int64)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="FromUnixAddressFamily(Mono.Unix.Native.UnixAddressFamily)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixAddressFamily" />
                </parameters>
              </method>
              <method name="FromUnixPermissionString(System.String)" attrib="150" static="true" returntype="Mono.Unix.Native.FilePermissions">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="FromUnixSocketControlMessage(Mono.Unix.Native.UnixSocketControlMessage)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixSocketControlMessage" />
                </parameters>
              </method>
              <method name="FromUnixSocketFlags(Mono.Unix.Native.UnixSocketFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixSocketFlags" />
                </parameters>
              </method>
              <method name="FromUnixSocketOptionName(Mono.Unix.Native.UnixSocketOptionName)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixSocketOptionName" />
                </parameters>
              </method>
              <method name="FromUnixSocketProtocol(Mono.Unix.Native.UnixSocketProtocol)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                </parameters>
              </method>
              <method name="FromUnixSocketType(Mono.Unix.Native.UnixSocketType)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixSocketType" />
                </parameters>
              </method>
              <method name="FromWaitOptions(Mono.Unix.Native.WaitOptions)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.WaitOptions" />
                </parameters>
              </method>
              <method name="FromXattrFlags(Mono.Unix.Native.XattrFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.XattrFlags" />
                </parameters>
              </method>
              <method name="ToAccessModes(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.AccessModes">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToAtFlags(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.AtFlags">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToConfstrName(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.ConfstrName">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToDateTime(System.Int64)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToDateTime(System.Int64, System.Int64)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.Int64" />
                  <parameter name="nanoTime" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToDirectoryNotifyFlags(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.DirectoryNotifyFlags">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToEpollEvents(System.UInt32)" attrib="150" static="true" returntype="Mono.Unix.Native.EpollEvents">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToEpollFlags(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.EpollFlags">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToErrno(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.Errno">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToFcntlCommand(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.FcntlCommand">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToFilePermissions(System.UInt32)" attrib="150" static="true" returntype="Mono.Unix.Native.FilePermissions">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToFopenMode(System.IO.FileAccess)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="access" position="0" attrib="0" type="System.IO.FileAccess" />
                </parameters>
              </method>
              <method name="ToFopenMode(System.IO.FileMode)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="mode" position="0" attrib="0" type="System.IO.FileMode" />
                </parameters>
              </method>
              <method name="ToFopenMode(System.IO.FileMode, System.IO.FileAccess)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="mode" position="0" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="1" attrib="0" type="System.IO.FileAccess" />
                </parameters>
              </method>
              <method name="ToIPAddress(Mono.Unix.Native.In6Addr)" attrib="150" static="true" returntype="System.Net.IPAddress">
                <parameters>
                  <parameter name="address" position="0" attrib="0" type="Mono.Unix.Native.In6Addr" />
                </parameters>
              </method>
              <method name="ToIPAddress(Mono.Unix.Native.InAddr)" attrib="150" static="true" returntype="System.Net.IPAddress">
                <parameters>
                  <parameter name="address" position="0" attrib="0" type="Mono.Unix.Native.InAddr" />
                </parameters>
              </method>
              <method name="ToIn6Addr(System.Net.IPAddress)" attrib="150" static="true" returntype="Mono.Unix.Native.In6Addr">
                <parameters>
                  <parameter name="address" position="0" attrib="0" type="System.Net.IPAddress" />
                </parameters>
              </method>
              <method name="ToInAddr(System.Net.IPAddress)" attrib="150" static="true" returntype="Mono.Unix.Native.InAddr">
                <parameters>
                  <parameter name="address" position="0" attrib="0" type="System.Net.IPAddress" />
                </parameters>
              </method>
              <method name="ToLockType(System.Int16)" attrib="150" static="true" returntype="Mono.Unix.Native.LockType">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToLockfCommand(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.LockfCommand">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToMessageFlags(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.MessageFlags">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToMlockallFlags(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.MlockallFlags">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToMmapFlags(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.MmapFlags">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToMmapProts(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.MmapProts">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToMountFlags(System.UInt64)" attrib="150" static="true" returntype="Mono.Unix.Native.MountFlags">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToMremapFlags(System.UInt64)" attrib="150" static="true" returntype="Mono.Unix.Native.MremapFlags">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToMsyncFlags(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.MsyncFlags">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToOctalPermissionString(Mono.Unix.Native.FilePermissions)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="ToOpenFlags(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.OpenFlags">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToOpenFlags(System.IO.FileMode, System.IO.FileAccess)" attrib="150" static="true" returntype="Mono.Unix.Native.OpenFlags">
                <parameters>
                  <parameter name="mode" position="0" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="1" attrib="0" type="System.IO.FileAccess" />
                </parameters>
              </method>
              <method name="ToPathconfName(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.PathconfName">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToPollEvents(System.Int16)" attrib="150" static="true" returntype="Mono.Unix.Native.PollEvents">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToPosixFadviseAdvice(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.PosixFadviseAdvice">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToPosixMadviseAdvice(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.PosixMadviseAdvice">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToRealTimeSignum(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.RealTimeSignum">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToSeekFlags(System.Int16)" attrib="150" static="true" returntype="Mono.Unix.Native.SeekFlags">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToShutdownOption(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.ShutdownOption">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToSignum(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.Signum">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToSysconfName(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.SysconfName">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToSyslogFacility(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.SyslogFacility">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToSyslogLevel(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.SyslogLevel">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToSyslogOptions(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.SyslogOptions">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToTimeT(System.DateTime)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="ToUnixAddressFamily(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.UnixAddressFamily">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToUnixPermissionString(Mono.Unix.Native.FilePermissions)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="ToUnixSocketControlMessage(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.UnixSocketControlMessage">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToUnixSocketFlags(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.UnixSocketFlags">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToUnixSocketOptionName(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.UnixSocketOptionName">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToUnixSocketProtocol(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.UnixSocketProtocol">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToUnixSocketType(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.UnixSocketType">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToWaitOptions(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.WaitOptions">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToXattrFlags(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.XattrFlags">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.Cmsghdr&amp;, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.Cmsghdr" direction="ref" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.Flock&amp;, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.Flock" direction="ref" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.In6Addr&amp;, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.In6Addr" direction="ref" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.InAddr&amp;, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.InAddr" direction="ref" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.Iovec&amp;, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.Iovec" direction="ref" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.Linger&amp;, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.Linger" direction="ref" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.Pollfd&amp;, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.Pollfd" direction="ref" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.Sockaddr, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.SockaddrIn, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.SockaddrIn" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.SockaddrIn6, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.SockaddrIn6" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.Stat&amp;, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.Stat" direction="ref" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.Statvfs&amp;, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.Statvfs" direction="ref" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.Timespec&amp;, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.Timespec" direction="ref" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.Timeval&amp;, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.Timeval" direction="ref" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.Timezone&amp;, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.Timezone" direction="ref" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(Mono.Unix.Native.Utimbuf&amp;, System.IntPtr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="Mono.Unix.Native.Utimbuf" direction="ref" />
                  <parameter name="destination" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, Mono.Unix.Native.SockaddrIn)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="0" type="Mono.Unix.Native.SockaddrIn" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, Mono.Unix.Native.SockaddrIn6)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="0" type="Mono.Unix.Native.SockaddrIn6" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, out Mono.Unix.Native.Cmsghdr&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="2" type="Mono.Unix.Native.Cmsghdr" direction="out" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, out Mono.Unix.Native.Flock&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="2" type="Mono.Unix.Native.Flock" direction="out" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, out Mono.Unix.Native.In6Addr&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="2" type="Mono.Unix.Native.In6Addr" direction="out" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, out Mono.Unix.Native.InAddr&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="2" type="Mono.Unix.Native.InAddr" direction="out" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, out Mono.Unix.Native.Iovec&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="2" type="Mono.Unix.Native.Iovec" direction="out" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, out Mono.Unix.Native.Linger&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="2" type="Mono.Unix.Native.Linger" direction="out" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, out Mono.Unix.Native.Pollfd&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="2" type="Mono.Unix.Native.Pollfd" direction="out" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, out Mono.Unix.Native.Stat&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="2" type="Mono.Unix.Native.Stat" direction="out" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, out Mono.Unix.Native.Statvfs&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="2" type="Mono.Unix.Native.Statvfs" direction="out" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, out Mono.Unix.Native.Timespec&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="2" type="Mono.Unix.Native.Timespec" direction="out" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, out Mono.Unix.Native.Timeval&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="2" type="Mono.Unix.Native.Timeval" direction="out" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, out Mono.Unix.Native.Timezone&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="2" type="Mono.Unix.Native.Timezone" direction="out" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, out Mono.Unix.Native.Utimbuf&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="2" type="Mono.Unix.Native.Utimbuf" direction="out" />
                </parameters>
              </method>
              <method name="TryCopy(System.IntPtr, System.Int64, Mono.Unix.Native.Sockaddr)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="size" position="1" attrib="0" type="System.Int64" />
                  <parameter name="destination" position="2" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                </parameters>
              </method>
              <method name="TryFromAccessModes(Mono.Unix.Native.AccessModes, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.AccessModes" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromAtFlags(Mono.Unix.Native.AtFlags, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.AtFlags" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromConfstrName(Mono.Unix.Native.ConfstrName, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.ConfstrName" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromDirectoryNotifyFlags(Mono.Unix.Native.DirectoryNotifyFlags, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.DirectoryNotifyFlags" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromEpollEvents(Mono.Unix.Native.EpollEvents, out System.UInt32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.EpollEvents" />
                  <parameter name="rval" position="1" attrib="2" type="System.UInt32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromEpollFlags(Mono.Unix.Native.EpollFlags, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.EpollFlags" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromErrno(Mono.Unix.Native.Errno, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Errno" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromFcntlCommand(Mono.Unix.Native.FcntlCommand, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.FcntlCommand" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromFilePermissions(Mono.Unix.Native.FilePermissions, out System.UInt32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                  <parameter name="rval" position="1" attrib="2" type="System.UInt32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromLockType(Mono.Unix.Native.LockType, out System.Int16&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.LockType" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int16" direction="out" />
                </parameters>
              </method>
              <method name="TryFromLockfCommand(Mono.Unix.Native.LockfCommand, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.LockfCommand" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromMessageFlags(Mono.Unix.Native.MessageFlags, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromMlockallFlags(Mono.Unix.Native.MlockallFlags, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.MlockallFlags" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromMmapFlags(Mono.Unix.Native.MmapFlags, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.MmapFlags" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromMmapProts(Mono.Unix.Native.MmapProts, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.MmapProts" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromMountFlags(Mono.Unix.Native.MountFlags, out System.UInt64&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.MountFlags" />
                  <parameter name="rval" position="1" attrib="2" type="System.UInt64" direction="out" />
                </parameters>
              </method>
              <method name="TryFromMremapFlags(Mono.Unix.Native.MremapFlags, out System.UInt64&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.MremapFlags" />
                  <parameter name="rval" position="1" attrib="2" type="System.UInt64" direction="out" />
                </parameters>
              </method>
              <method name="TryFromMsyncFlags(Mono.Unix.Native.MsyncFlags, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.MsyncFlags" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromOpenFlags(Mono.Unix.Native.OpenFlags, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.OpenFlags" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromPathconfName(Mono.Unix.Native.PathconfName, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.PathconfName" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromPollEvents(Mono.Unix.Native.PollEvents, out System.Int16&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.PollEvents" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int16" direction="out" />
                </parameters>
              </method>
              <method name="TryFromPosixFadviseAdvice(Mono.Unix.Native.PosixFadviseAdvice, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.PosixFadviseAdvice" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromPosixMadviseAdvice(Mono.Unix.Native.PosixMadviseAdvice, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.PosixMadviseAdvice" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromSeekFlags(Mono.Unix.Native.SeekFlags, out System.Int16&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.SeekFlags" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int16" direction="out" />
                </parameters>
              </method>
              <method name="TryFromShutdownOption(Mono.Unix.Native.ShutdownOption, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.ShutdownOption" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromSignum(Mono.Unix.Native.Signum, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Signum" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromSysconfName(Mono.Unix.Native.SysconfName, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.SysconfName" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromSyslogFacility(Mono.Unix.Native.SyslogFacility, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.SyslogFacility" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromSyslogLevel(Mono.Unix.Native.SyslogLevel, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.SyslogLevel" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromSyslogOptions(Mono.Unix.Native.SyslogOptions, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.SyslogOptions" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromUnixAddressFamily(Mono.Unix.Native.UnixAddressFamily, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixAddressFamily" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromUnixSocketControlMessage(Mono.Unix.Native.UnixSocketControlMessage, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixSocketControlMessage" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromUnixSocketFlags(Mono.Unix.Native.UnixSocketFlags, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixSocketFlags" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromUnixSocketOptionName(Mono.Unix.Native.UnixSocketOptionName, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixSocketOptionName" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromUnixSocketProtocol(Mono.Unix.Native.UnixSocketProtocol, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromUnixSocketType(Mono.Unix.Native.UnixSocketType, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixSocketType" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromWaitOptions(Mono.Unix.Native.WaitOptions, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.WaitOptions" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryFromXattrFlags(Mono.Unix.Native.XattrFlags, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.XattrFlags" />
                  <parameter name="rval" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="TryToAccessModes(System.Int32, out Mono.Unix.Native.AccessModes&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.AccessModes" direction="out" />
                </parameters>
              </method>
              <method name="TryToAtFlags(System.Int32, out Mono.Unix.Native.AtFlags&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.AtFlags" direction="out" />
                </parameters>
              </method>
              <method name="TryToConfstrName(System.Int32, out Mono.Unix.Native.ConfstrName&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.ConfstrName" direction="out" />
                </parameters>
              </method>
              <method name="TryToDirectoryNotifyFlags(System.Int32, out Mono.Unix.Native.DirectoryNotifyFlags&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.DirectoryNotifyFlags" direction="out" />
                </parameters>
              </method>
              <method name="TryToEpollEvents(System.UInt32, out Mono.Unix.Native.EpollEvents&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.EpollEvents" direction="out" />
                </parameters>
              </method>
              <method name="TryToEpollFlags(System.Int32, out Mono.Unix.Native.EpollFlags&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.EpollFlags" direction="out" />
                </parameters>
              </method>
              <method name="TryToErrno(System.Int32, out Mono.Unix.Native.Errno&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.Errno" direction="out" />
                </parameters>
              </method>
              <method name="TryToFcntlCommand(System.Int32, out Mono.Unix.Native.FcntlCommand&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.FcntlCommand" direction="out" />
                </parameters>
              </method>
              <method name="TryToFilePermissions(System.UInt32, out Mono.Unix.Native.FilePermissions&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.FilePermissions" direction="out" />
                </parameters>
              </method>
              <method name="TryToLockType(System.Int16, out Mono.Unix.Native.LockType&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.LockType" direction="out" />
                </parameters>
              </method>
              <method name="TryToLockfCommand(System.Int32, out Mono.Unix.Native.LockfCommand&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.LockfCommand" direction="out" />
                </parameters>
              </method>
              <method name="TryToMessageFlags(System.Int32, out Mono.Unix.Native.MessageFlags&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.MessageFlags" direction="out" />
                </parameters>
              </method>
              <method name="TryToMlockallFlags(System.Int32, out Mono.Unix.Native.MlockallFlags&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.MlockallFlags" direction="out" />
                </parameters>
              </method>
              <method name="TryToMmapFlags(System.Int32, out Mono.Unix.Native.MmapFlags&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.MmapFlags" direction="out" />
                </parameters>
              </method>
              <method name="TryToMmapProts(System.Int32, out Mono.Unix.Native.MmapProts&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.MmapProts" direction="out" />
                </parameters>
              </method>
              <method name="TryToMountFlags(System.UInt64, out Mono.Unix.Native.MountFlags&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.MountFlags" direction="out" />
                </parameters>
              </method>
              <method name="TryToMremapFlags(System.UInt64, out Mono.Unix.Native.MremapFlags&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.MremapFlags" direction="out" />
                </parameters>
              </method>
              <method name="TryToMsyncFlags(System.Int32, out Mono.Unix.Native.MsyncFlags&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.MsyncFlags" direction="out" />
                </parameters>
              </method>
              <method name="TryToOpenFlags(System.Int32, out Mono.Unix.Native.OpenFlags&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.OpenFlags" direction="out" />
                </parameters>
              </method>
              <method name="TryToPathconfName(System.Int32, out Mono.Unix.Native.PathconfName&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.PathconfName" direction="out" />
                </parameters>
              </method>
              <method name="TryToPollEvents(System.Int16, out Mono.Unix.Native.PollEvents&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.PollEvents" direction="out" />
                </parameters>
              </method>
              <method name="TryToPosixFadviseAdvice(System.Int32, out Mono.Unix.Native.PosixFadviseAdvice&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.PosixFadviseAdvice" direction="out" />
                </parameters>
              </method>
              <method name="TryToPosixMadviseAdvice(System.Int32, out Mono.Unix.Native.PosixMadviseAdvice&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.PosixMadviseAdvice" direction="out" />
                </parameters>
              </method>
              <method name="TryToSeekFlags(System.Int16, out Mono.Unix.Native.SeekFlags&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.SeekFlags" direction="out" />
                </parameters>
              </method>
              <method name="TryToShutdownOption(System.Int32, out Mono.Unix.Native.ShutdownOption&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.ShutdownOption" direction="out" />
                </parameters>
              </method>
              <method name="TryToSignum(System.Int32, out Mono.Unix.Native.Signum&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.Signum" direction="out" />
                </parameters>
              </method>
              <method name="TryToSysconfName(System.Int32, out Mono.Unix.Native.SysconfName&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.SysconfName" direction="out" />
                </parameters>
              </method>
              <method name="TryToSyslogFacility(System.Int32, out Mono.Unix.Native.SyslogFacility&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.SyslogFacility" direction="out" />
                </parameters>
              </method>
              <method name="TryToSyslogLevel(System.Int32, out Mono.Unix.Native.SyslogLevel&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.SyslogLevel" direction="out" />
                </parameters>
              </method>
              <method name="TryToSyslogOptions(System.Int32, out Mono.Unix.Native.SyslogOptions&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.SyslogOptions" direction="out" />
                </parameters>
              </method>
              <method name="TryToUnixAddressFamily(System.Int32, out Mono.Unix.Native.UnixAddressFamily&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.UnixAddressFamily" direction="out" />
                </parameters>
              </method>
              <method name="TryToUnixSocketControlMessage(System.Int32, out Mono.Unix.Native.UnixSocketControlMessage&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.UnixSocketControlMessage" direction="out" />
                </parameters>
              </method>
              <method name="TryToUnixSocketFlags(System.Int32, out Mono.Unix.Native.UnixSocketFlags&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.UnixSocketFlags" direction="out" />
                </parameters>
              </method>
              <method name="TryToUnixSocketOptionName(System.Int32, out Mono.Unix.Native.UnixSocketOptionName&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.UnixSocketOptionName" direction="out" />
                </parameters>
              </method>
              <method name="TryToUnixSocketProtocol(System.Int32, out Mono.Unix.Native.UnixSocketProtocol&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.UnixSocketProtocol" direction="out" />
                </parameters>
              </method>
              <method name="TryToUnixSocketType(System.Int32, out Mono.Unix.Native.UnixSocketType&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.UnixSocketType" direction="out" />
                </parameters>
              </method>
              <method name="TryToWaitOptions(System.Int32, out Mono.Unix.Native.WaitOptions&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.WaitOptions" direction="out" />
                </parameters>
              </method>
              <method name="TryToXattrFlags(System.Int32, out Mono.Unix.Native.XattrFlags&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rval" position="1" attrib="2" type="Mono.Unix.Native.XattrFlags" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="OpenFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="O_APPEND" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="1024" />
              <field name="O_ASYNC" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="8192" />
              <field name="O_CLOEXEC" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="524288" />
              <field name="O_CREAT" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="64" />
              <field name="O_DIRECT" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="16384" />
              <field name="O_DIRECTORY" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="65536" />
              <field name="O_EXCL" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="128" />
              <field name="O_LARGEFILE" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="32768" />
              <field name="O_NOCTTY" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="256" />
              <field name="O_NOFOLLOW" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="131072" />
              <field name="O_NONBLOCK" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="2048" />
              <field name="O_PATH" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="2097152" />
              <field name="O_RDONLY" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="0" />
              <field name="O_RDWR" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="2" />
              <field name="O_SYNC" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="4096" />
              <field name="O_TRUNC" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="512" />
              <field name="O_WRONLY" attrib="32854" fieldtype="Mono.Unix.Native.OpenFlags" value="1" />
            </fields>
          </class>
          <class name="Passwd" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.Passwd]" />
            </interfaces>
            <fields>
              <field name="pw_dir" attrib="6" fieldtype="System.String" />
              <field name="pw_gecos" attrib="6" fieldtype="System.String" />
              <field name="pw_gid" attrib="6" fieldtype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="pw_name" attrib="6" fieldtype="System.String" />
              <field name="pw_passwd" attrib="6" fieldtype="System.String" />
              <field name="pw_shell" attrib="6" fieldtype="System.String" />
              <field name="pw_uid" attrib="6" fieldtype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Equals(Mono.Unix.Native.Passwd)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Passwd" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.Native.Passwd, Mono.Unix.Native.Passwd)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Passwd" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Passwd" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.Native.Passwd, Mono.Unix.Native.Passwd)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Passwd" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Passwd" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PathconfName" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="_PC_2_SYMLINKS" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="20" />
              <field name="_PC_ALLOC_SIZE_MIN" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="18" />
              <field name="_PC_ASYNC_IO" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="10" />
              <field name="_PC_CHOWN_RESTRICTED" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="6" />
              <field name="_PC_FILESIZEBITS" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="13" />
              <field name="_PC_LINK_MAX" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="0" />
              <field name="_PC_MAX_CANON" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="1" />
              <field name="_PC_MAX_INPUT" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="2" />
              <field name="_PC_NAME_MAX" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="3" />
              <field name="_PC_NO_TRUNC" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="7" />
              <field name="_PC_PATH_MAX" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="4" />
              <field name="_PC_PIPE_BUF" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="5" />
              <field name="_PC_PRIO_IO" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="11" />
              <field name="_PC_REC_INCR_XFER_SIZE" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="14" />
              <field name="_PC_REC_MAX_XFER_SIZE" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="15" />
              <field name="_PC_REC_MIN_XFER_SIZE" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="16" />
              <field name="_PC_REC_XFER_ALIGN" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="17" />
              <field name="_PC_SOCK_MAXBUF" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="12" />
              <field name="_PC_SYMLINK_MAX" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="19" />
              <field name="_PC_SYNC_IO" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="9" />
              <field name="_PC_VDISABLE" attrib="32854" fieldtype="Mono.Unix.Native.PathconfName" value="8" />
            </fields>
          </class>
          <class name="PollEvents" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int16">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="POLLERR" attrib="32854" fieldtype="Mono.Unix.Native.PollEvents" value="8" />
              <field name="POLLHUP" attrib="32854" fieldtype="Mono.Unix.Native.PollEvents" value="16" />
              <field name="POLLIN" attrib="32854" fieldtype="Mono.Unix.Native.PollEvents" value="1" />
              <field name="POLLNVAL" attrib="32854" fieldtype="Mono.Unix.Native.PollEvents" value="32" />
              <field name="POLLOUT" attrib="32854" fieldtype="Mono.Unix.Native.PollEvents" value="4" />
              <field name="POLLPRI" attrib="32854" fieldtype="Mono.Unix.Native.PollEvents" value="2" />
              <field name="POLLRDBAND" attrib="32854" fieldtype="Mono.Unix.Native.PollEvents" value="128" />
              <field name="POLLRDNORM" attrib="32854" fieldtype="Mono.Unix.Native.PollEvents" value="64" />
              <field name="POLLWRBAND" attrib="32854" fieldtype="Mono.Unix.Native.PollEvents" value="512" />
              <field name="POLLWRNORM" attrib="32854" fieldtype="Mono.Unix.Native.PollEvents" value="256" />
            </fields>
          </class>
          <class name="Pollfd" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes />
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.Pollfd]" />
            </interfaces>
            <fields>
              <field name="events" attrib="6" fieldtype="Mono.Unix.Native.PollEvents">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="fd" attrib="6" fieldtype="System.Int32" />
              <field name="revents" attrib="6" fieldtype="Mono.Unix.Native.PollEvents">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
            </fields>
            <methods>
              <method name="Equals(Mono.Unix.Native.Pollfd)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Pollfd" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.Native.Pollfd, Mono.Unix.Native.Pollfd)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Pollfd" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Pollfd" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.Native.Pollfd, Mono.Unix.Native.Pollfd)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Pollfd" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Pollfd" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PosixFadviseAdvice" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="POSIX_FADV_DONTNEED" attrib="32854" fieldtype="Mono.Unix.Native.PosixFadviseAdvice" value="4" />
              <field name="POSIX_FADV_NOREUSE" attrib="32854" fieldtype="Mono.Unix.Native.PosixFadviseAdvice" value="5" />
              <field name="POSIX_FADV_NORMAL" attrib="32854" fieldtype="Mono.Unix.Native.PosixFadviseAdvice" value="0" />
              <field name="POSIX_FADV_RANDOM" attrib="32854" fieldtype="Mono.Unix.Native.PosixFadviseAdvice" value="1" />
              <field name="POSIX_FADV_SEQUENTIAL" attrib="32854" fieldtype="Mono.Unix.Native.PosixFadviseAdvice" value="2" />
              <field name="POSIX_FADV_WILLNEED" attrib="32854" fieldtype="Mono.Unix.Native.PosixFadviseAdvice" value="3" />
            </fields>
          </class>
          <class name="PosixMadviseAdvice" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="POSIX_MADV_DONTNEED" attrib="32854" fieldtype="Mono.Unix.Native.PosixMadviseAdvice" value="4" />
              <field name="POSIX_MADV_NORMAL" attrib="32854" fieldtype="Mono.Unix.Native.PosixMadviseAdvice" value="0" />
              <field name="POSIX_MADV_RANDOM" attrib="32854" fieldtype="Mono.Unix.Native.PosixMadviseAdvice" value="1" />
              <field name="POSIX_MADV_SEQUENTIAL" attrib="32854" fieldtype="Mono.Unix.Native.PosixMadviseAdvice" value="2" />
              <field name="POSIX_MADV_WILLNEED" attrib="32854" fieldtype="Mono.Unix.Native.PosixMadviseAdvice" value="3" />
            </fields>
          </class>
          <class name="RealTimeSignum" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.RealTimeSignum]" />
            </interfaces>
            <fields>
              <field name="MaxValue" attrib="54" fieldtype="Mono.Unix.Native.RealTimeSignum" />
              <field name="MinValue" attrib="54" fieldtype="Mono.Unix.Native.RealTimeSignum" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Offset" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Offset()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(Mono.Unix.Native.RealTimeSignum)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.RealTimeSignum" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.Native.RealTimeSignum, Mono.Unix.Native.RealTimeSignum)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.RealTimeSignum" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.RealTimeSignum" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.Native.RealTimeSignum, Mono.Unix.Native.RealTimeSignum)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.RealTimeSignum" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.RealTimeSignum" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SeekFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int16">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="L_INCR" attrib="32854" fieldtype="Mono.Unix.Native.SeekFlags" value="1" />
              <field name="L_SET" attrib="32854" fieldtype="Mono.Unix.Native.SeekFlags" value="0" />
              <field name="L_XTND" attrib="32854" fieldtype="Mono.Unix.Native.SeekFlags" value="2" />
              <field name="SEEK_CUR" attrib="32854" fieldtype="Mono.Unix.Native.SeekFlags" value="1" />
              <field name="SEEK_END" attrib="32854" fieldtype="Mono.Unix.Native.SeekFlags" value="2" />
              <field name="SEEK_SET" attrib="32854" fieldtype="Mono.Unix.Native.SeekFlags" value="0" />
            </fields>
          </class>
          <class name="ShutdownOption" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="SHUT_RD" attrib="32854" fieldtype="Mono.Unix.Native.ShutdownOption" value="1" />
              <field name="SHUT_RDWR" attrib="32854" fieldtype="Mono.Unix.Native.ShutdownOption" value="3" />
              <field name="SHUT_WR" attrib="32854" fieldtype="Mono.Unix.Native.ShutdownOption" value="2" />
            </fields>
          </class>
          <class name="SignalAction" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Default" attrib="32854" fieldtype="Mono.Unix.Native.SignalAction" value="0" />
              <field name="Error" attrib="32854" fieldtype="Mono.Unix.Native.SignalAction" value="2" />
              <field name="Ignore" attrib="32854" fieldtype="Mono.Unix.Native.SignalAction" value="1" />
            </fields>
          </class>
          <class name="SignalHandler" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Int32, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="signal" position="0" attrib="0" type="System.Int32" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Int32)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="signal" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Signum" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes />
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="SIGABRT" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="6" />
              <field name="SIGALRM" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="14" />
              <field name="SIGBUS" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="7" />
              <field name="SIGCHLD" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="17" />
              <field name="SIGCLD" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="17" />
              <field name="SIGCONT" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="18" />
              <field name="SIGFPE" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="8" />
              <field name="SIGHUP" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="1" />
              <field name="SIGILL" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="4" />
              <field name="SIGINT" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="2" />
              <field name="SIGIO" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="29" />
              <field name="SIGIOT" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="6" />
              <field name="SIGKILL" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="9" />
              <field name="SIGPIPE" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="13" />
              <field name="SIGPOLL" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="29" />
              <field name="SIGPROF" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="27" />
              <field name="SIGPWR" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="30" />
              <field name="SIGQUIT" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="3" />
              <field name="SIGSEGV" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="11" />
              <field name="SIGSTKFLT" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="16" />
              <field name="SIGSTOP" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="19" />
              <field name="SIGSYS" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="31" />
              <field name="SIGTERM" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="15" />
              <field name="SIGTRAP" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="5" />
              <field name="SIGTSTP" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="20" />
              <field name="SIGTTIN" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="21" />
              <field name="SIGTTOU" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="22" />
              <field name="SIGUNUSED" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="31" />
              <field name="SIGURG" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="23" />
              <field name="SIGUSR1" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="10" />
              <field name="SIGUSR2" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="12" />
              <field name="SIGVTALRM" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="26" />
              <field name="SIGWINCH" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="28" />
              <field name="SIGXCPU" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="24" />
              <field name="SIGXFSZ" attrib="32854" fieldtype="Mono.Unix.Native.Signum" value="25" />
            </fields>
          </class>
          <class name="Sockaddr" type="class" base="System.Object" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="sa_family" attrib="0" ptype="Mono.Unix.Native.UnixAddressFamily">
                <methods>
                  <method name="get_sa_family()" attrib="2182" returntype="Mono.Unix.Native.UnixAddressFamily">
                    <parameters />
                  </method>
                  <method name="set_sa_family(Mono.Unix.Native.UnixAddressFamily)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixAddressFamily" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="FromSockaddrStorage(Mono.Unix.Native.SockaddrStorage)" attrib="150" static="true" returntype="Mono.Unix.Native.Sockaddr">
                <parameters>
                  <parameter name="storage" position="0" attrib="0" type="Mono.Unix.Native.SockaddrStorage" />
                </parameters>
              </method>
              <method name="ToSockaddrStorage()" attrib="134" returntype="Mono.Unix.Native.SockaddrStorage">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SockaddrIn" type="class" base="Mono.Unix.Native.Sockaddr" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.SockaddrIn]" />
            </interfaces>
            <fields>
              <field name="sin_addr" attrib="6" fieldtype="Mono.Unix.Native.InAddr" />
              <field name="sin_port" attrib="6" fieldtype="System.UInt16" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="sin_family" attrib="0" ptype="Mono.Unix.Native.UnixAddressFamily">
                <methods>
                  <method name="get_sin_family()" attrib="2182" returntype="Mono.Unix.Native.UnixAddressFamily">
                    <parameters />
                  </method>
                  <method name="set_sin_family(Mono.Unix.Native.UnixAddressFamily)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixAddressFamily" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(Mono.Unix.Native.SockaddrIn)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.SockaddrIn" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="FromSockaddrStorage(Mono.Unix.Native.SockaddrStorage)" attrib="150" static="true" returntype="Mono.Unix.Native.SockaddrIn">
                <parameters>
                  <parameter name="storage" position="0" attrib="0" type="Mono.Unix.Native.SockaddrStorage" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SockaddrIn6" type="class" base="Mono.Unix.Native.Sockaddr" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.SockaddrIn6]" />
            </interfaces>
            <fields>
              <field name="sin6_addr" attrib="6" fieldtype="Mono.Unix.Native.In6Addr" />
              <field name="sin6_flowinfo" attrib="6" fieldtype="System.UInt32" />
              <field name="sin6_port" attrib="6" fieldtype="System.UInt16" />
              <field name="sin6_scope_id" attrib="6" fieldtype="System.UInt32" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="sin6_family" attrib="0" ptype="Mono.Unix.Native.UnixAddressFamily">
                <methods>
                  <method name="get_sin6_family()" attrib="2182" returntype="Mono.Unix.Native.UnixAddressFamily">
                    <parameters />
                  </method>
                  <method name="set_sin6_family(Mono.Unix.Native.UnixAddressFamily)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixAddressFamily" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(Mono.Unix.Native.SockaddrIn6)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.SockaddrIn6" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="FromSockaddrStorage(Mono.Unix.Native.SockaddrStorage)" attrib="150" static="true" returntype="Mono.Unix.Native.SockaddrIn6">
                <parameters>
                  <parameter name="storage" position="0" attrib="0" type="Mono.Unix.Native.SockaddrStorage" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SockaddrStorage" type="class" base="Mono.Unix.Native.Sockaddr" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.SockaddrStorage]" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="data" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_data()" attrib="2182" returntype="System.Byte[]">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_data(System.Byte[])" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="data_len" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_data_len()" attrib="2182" returntype="System.Int64">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_data_len(System.Int64)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CopyTo(Mono.Unix.Native.Sockaddr)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="address" position="0" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                </parameters>
              </method>
              <method name="Equals(Mono.Unix.Native.SockaddrStorage)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.SockaddrStorage" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="SetTo(Mono.Unix.Native.Sockaddr)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="address" position="0" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SockaddrUn" type="class" base="Mono.Unix.Native.Sockaddr" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.SockaddrUn]" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="linuxAbstractNamespace" position="1" attrib="4112" type="System.Boolean" optional="true" defaultValue="False" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="IsLinuxAbstractNamespace" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsLinuxAbstractNamespace()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Path" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Path()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="sun_family" attrib="0" ptype="Mono.Unix.Native.UnixAddressFamily">
                <methods>
                  <method name="get_sun_family()" attrib="2182" returntype="Mono.Unix.Native.UnixAddressFamily">
                    <parameters />
                  </method>
                  <method name="set_sun_family(Mono.Unix.Native.UnixAddressFamily)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.UnixAddressFamily" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="sun_path" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_sun_path()" attrib="2182" returntype="System.Byte[]">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_sun_path(System.Byte[])" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="sun_path_len" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_sun_path_len()" attrib="2182" returntype="System.Int64">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_sun_path_len(System.Int64)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(Mono.Unix.Native.SockaddrUn)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.SockaddrUn" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="FromSockaddrStorage(Mono.Unix.Native.SockaddrStorage)" attrib="150" static="true" returntype="Mono.Unix.Native.SockaddrUn">
                <parameters>
                  <parameter name="storage" position="0" attrib="0" type="Mono.Unix.Native.SockaddrStorage" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Stat" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.Stat]" />
            </interfaces>
            <fields>
              <field name="st_atime" attrib="6" fieldtype="System.Int64">
                <attributes />
              </field>
              <field name="st_atime_nsec" attrib="6" fieldtype="System.Int64" />
              <field name="st_blksize" attrib="6" fieldtype="System.Int64">
                <attributes />
              </field>
              <field name="st_blocks" attrib="6" fieldtype="System.Int64">
                <attributes />
              </field>
              <field name="st_ctime" attrib="6" fieldtype="System.Int64">
                <attributes />
              </field>
              <field name="st_ctime_nsec" attrib="6" fieldtype="System.Int64" />
              <field name="st_dev" attrib="6" fieldtype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="st_gid" attrib="6" fieldtype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="st_ino" attrib="6" fieldtype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="st_mode" attrib="6" fieldtype="Mono.Unix.Native.FilePermissions">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="st_mtime" attrib="6" fieldtype="System.Int64">
                <attributes />
              </field>
              <field name="st_mtime_nsec" attrib="6" fieldtype="System.Int64" />
              <field name="st_nlink" attrib="6" fieldtype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="st_rdev" attrib="6" fieldtype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="st_size" attrib="6" fieldtype="System.Int64">
                <attributes />
              </field>
              <field name="st_uid" attrib="6" fieldtype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
            </fields>
            <properties>
              <property name="st_atim" attrib="0" ptype="Mono.Unix.Native.Timespec">
                <methods>
                  <method name="get_st_atim()" attrib="2182" returntype="Mono.Unix.Native.Timespec">
                    <parameters />
                  </method>
                  <method name="set_st_atim(Mono.Unix.Native.Timespec)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Timespec" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="st_ctim" attrib="0" ptype="Mono.Unix.Native.Timespec">
                <methods>
                  <method name="get_st_ctim()" attrib="2182" returntype="Mono.Unix.Native.Timespec">
                    <parameters />
                  </method>
                  <method name="set_st_ctim(Mono.Unix.Native.Timespec)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Timespec" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="st_mtim" attrib="0" ptype="Mono.Unix.Native.Timespec">
                <methods>
                  <method name="get_st_mtim()" attrib="2182" returntype="Mono.Unix.Native.Timespec">
                    <parameters />
                  </method>
                  <method name="set_st_mtim(Mono.Unix.Native.Timespec)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Timespec" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(Mono.Unix.Native.Stat)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Stat" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.Native.Stat, Mono.Unix.Native.Stat)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Stat" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Stat" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.Native.Stat, Mono.Unix.Native.Stat)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Stat" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Stat" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Statvfs" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.Statvfs]" />
            </interfaces>
            <fields>
              <field name="f_bavail" attrib="6" fieldtype="System.UInt64">
                <attributes />
              </field>
              <field name="f_bfree" attrib="6" fieldtype="System.UInt64">
                <attributes />
              </field>
              <field name="f_blocks" attrib="6" fieldtype="System.UInt64">
                <attributes />
              </field>
              <field name="f_bsize" attrib="6" fieldtype="System.UInt64" />
              <field name="f_favail" attrib="6" fieldtype="System.UInt64">
                <attributes />
              </field>
              <field name="f_ffree" attrib="6" fieldtype="System.UInt64">
                <attributes />
              </field>
              <field name="f_files" attrib="6" fieldtype="System.UInt64">
                <attributes />
              </field>
              <field name="f_flag" attrib="6" fieldtype="Mono.Unix.Native.MountFlags" />
              <field name="f_frsize" attrib="6" fieldtype="System.UInt64" />
              <field name="f_fsid" attrib="6" fieldtype="System.UInt64" />
              <field name="f_namemax" attrib="6" fieldtype="System.UInt64" />
            </fields>
            <methods>
              <method name="Equals(Mono.Unix.Native.Statvfs)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Statvfs" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.Native.Statvfs, Mono.Unix.Native.Statvfs)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Statvfs" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Statvfs" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.Native.Statvfs, Mono.Unix.Native.Statvfs)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Statvfs" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Statvfs" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Stdlib" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <fields>
              <field name="BUFSIZ" attrib="54" fieldtype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="EOF" attrib="54" fieldtype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="EXIT_FAILURE" attrib="54" fieldtype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="EXIT_SUCCESS" attrib="54" fieldtype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="FILENAME_MAX" attrib="54" fieldtype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="FOPEN_MAX" attrib="54" fieldtype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="L_tmpnam" attrib="54" fieldtype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="MB_CUR_MAX" attrib="54" fieldtype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="RAND_MAX" attrib="54" fieldtype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="SIG_DFL" attrib="54" fieldtype="Mono.Unix.Native.SignalHandler">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="SIG_ERR" attrib="54" fieldtype="Mono.Unix.Native.SignalHandler">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="SIG_IGN" attrib="54" fieldtype="Mono.Unix.Native.SignalHandler">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="TMP_MAX" attrib="54" fieldtype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="_IOFBF" attrib="54" fieldtype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="_IOLBF" attrib="54" fieldtype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="_IONBF" attrib="54" fieldtype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
              </field>
              <field name="stderr" attrib="54" fieldtype="System.IntPtr" />
              <field name="stdin" attrib="54" fieldtype="System.IntPtr" />
              <field name="stdout" attrib="54" fieldtype="System.IntPtr" />
            </fields>
            <methods>
              <method name="GetLastError()" attrib="150" static="true" returntype="Mono.Unix.Native.Errno">
                <parameters />
              </method>
              <method name="SetLastError(Mono.Unix.Native.Errno)" attrib="148" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="error" position="0" attrib="0" type="Mono.Unix.Native.Errno" />
                </parameters>
              </method>
              <method name="SetSignalAction(Mono.Unix.Native.RealTimeSignum, Mono.Unix.Native.SignalAction)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="rts" position="0" attrib="0" type="Mono.Unix.Native.RealTimeSignum" />
                  <parameter name="action" position="1" attrib="0" type="Mono.Unix.Native.SignalAction" />
                </parameters>
              </method>
              <method name="SetSignalAction(Mono.Unix.Native.Signum, Mono.Unix.Native.SignalAction)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="signal" position="0" attrib="0" type="Mono.Unix.Native.Signum" />
                  <parameter name="action" position="1" attrib="0" type="Mono.Unix.Native.SignalAction" />
                </parameters>
              </method>
              <method name="_Exit(System.Int32)" attrib="8342" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="status" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="abort()" attrib="8342" static="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="calloc(System.UInt64, System.UInt64)" attrib="8342" static="true" returntype="System.IntPtr">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="nmemb" position="0" attrib="0" type="System.UInt64" />
                  <parameter name="size" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="clearerr(System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="exit(System.Int32)" attrib="8342" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="status" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="fclose(System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="feof(System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="ferror(System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fflush(System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fgetc(System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fgetpos(System.IntPtr, Mono.Unix.Native.FilePosition)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="pos" position="1" attrib="0" type="Mono.Unix.Native.FilePosition" />
                </parameters>
              </method>
              <method name="fgets(System.Text.StringBuilder, System.IntPtr)" attrib="150" static="true" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="sb" position="0" attrib="0" type="System.Text.StringBuilder" />
                  <parameter name="stream" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fgets(System.Text.StringBuilder, System.Int32, System.IntPtr)" attrib="150" static="true" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="sb" position="0" attrib="0" type="System.Text.StringBuilder" />
                  <parameter name="size" position="1" attrib="0" type="System.Int32" />
                  <parameter name="stream" position="2" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fopen(System.String, System.String)" attrib="8342" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="fprintf(System.IntPtr, System.String)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="message" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="fprintf(System.IntPtr, System.String, System.Object[])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Not necessarily portable due to cdecl restrictions.&#xA;Use fprintf (IntPtr, string) instead." />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                  <parameter name="parameters" position="2" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="fputc(System.Int32, System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Int32" />
                  <parameter name="stream" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fputs(System.String, System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="stream" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fread(System.Byte[], System.IntPtr)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="stream" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fread(System.Byte[], System.UInt64, System.UInt64, System.IntPtr)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="1" attrib="0" type="System.UInt64" />
                  <parameter name="nmemb" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="stream" position="3" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fread(System.IntPtr, System.UInt64, System.UInt64, System.IntPtr)" attrib="8342" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="size" position="1" attrib="0" type="System.UInt64" />
                  <parameter name="nmemb" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="stream" position="3" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fread(System.Void*, System.UInt64, System.UInt64, System.IntPtr)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.Void*" />
                  <parameter name="size" position="1" attrib="0" type="System.UInt64" />
                  <parameter name="nmemb" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="stream" position="3" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="free(System.IntPtr)" attrib="8342" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="freopen(System.String, System.String, System.IntPtr)" attrib="8342" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.String" />
                  <parameter name="stream" position="2" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fseek(System.IntPtr, System.Int64, Mono.Unix.Native.SeekFlags)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int64" />
                  <parameter name="origin" position="2" attrib="0" type="Mono.Unix.Native.SeekFlags" />
                </parameters>
              </method>
              <method name="fsetpos(System.IntPtr, Mono.Unix.Native.FilePosition)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="pos" position="1" attrib="0" type="Mono.Unix.Native.FilePosition" />
                </parameters>
              </method>
              <method name="ftell(System.IntPtr)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fwrite(System.Byte[], System.IntPtr)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="stream" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fwrite(System.Byte[], System.UInt64, System.UInt64, System.IntPtr)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="1" attrib="0" type="System.UInt64" />
                  <parameter name="nmemb" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="stream" position="3" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fwrite(System.IntPtr, System.UInt64, System.UInt64, System.IntPtr)" attrib="8342" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="size" position="1" attrib="0" type="System.UInt64" />
                  <parameter name="nmemb" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="stream" position="3" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fwrite(System.Void*, System.UInt64, System.UInt64, System.IntPtr)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.Void*" />
                  <parameter name="size" position="1" attrib="0" type="System.UInt64" />
                  <parameter name="nmemb" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="stream" position="3" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="getc(System.IntPtr)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="getchar()" attrib="8342" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="getenv(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="malloc(System.UInt64)" attrib="8342" static="true" returntype="System.IntPtr">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="perror(System.String)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="printf(System.String)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="printf(System.String, System.Object[])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Not necessarily portable due to cdecl restrictions.&#xA;Use printf (string) instead." />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="parameters" position="1" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="putc(System.Int32, System.IntPtr)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Int32" />
                  <parameter name="stream" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="putchar(System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="puts(System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="raise(Mono.Unix.Native.RealTimeSignum)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="rts" position="0" attrib="0" type="Mono.Unix.Native.RealTimeSignum" />
                </parameters>
              </method>
              <method name="raise(Mono.Unix.Native.Signum)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="sig" position="0" attrib="0" type="Mono.Unix.Native.Signum" />
                </parameters>
              </method>
              <method name="rand()" attrib="8342" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="realloc(System.IntPtr, System.UInt64)" attrib="8342" static="true" returntype="System.IntPtr">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="size" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="remove(System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="filename" position="0" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="rename(System.String, System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="oldpath" position="0" attrib="8192" type="System.String" />
                  <parameter name="newpath" position="1" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="rewind(System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="setbuf(System.IntPtr, System.Byte*)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="buf" position="1" attrib="0" type="System.Byte*" />
                </parameters>
              </method>
              <method name="setbuf(System.IntPtr, System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="buf" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="setvbuf(System.IntPtr, System.Byte*, System.Int32, System.UInt64)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="buf" position="1" attrib="0" type="System.Byte*" />
                  <parameter name="mode" position="2" attrib="0" type="System.Int32" />
                  <parameter name="size" position="3" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="setvbuf(System.IntPtr, System.IntPtr, System.Int32, System.UInt64)" attrib="8342" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="buf" position="1" attrib="0" type="System.IntPtr" />
                  <parameter name="mode" position="2" attrib="0" type="System.Int32" />
                  <parameter name="size" position="3" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="signal(Mono.Unix.Native.Signum, Mono.Unix.Native.SignalHandler)" attrib="150" static="true" returntype="Mono.Unix.Native.SignalHandler">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="This is not safe; use Mono.Unix.UnixSignal for signal delivery or SetSignalAction()" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="signum" position="0" attrib="0" type="Mono.Unix.Native.Signum" />
                  <parameter name="handler" position="1" attrib="0" type="Mono.Unix.Native.SignalHandler" />
                </parameters>
              </method>
              <method name="snprintf(System.Text.StringBuilder, System.String)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.Text.StringBuilder" />
                  <parameter name="message" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="snprintf(System.Text.StringBuilder, System.String, System.Object[])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Not necessarily portable due to cdecl restrictions.&#xA;Use snprintf (StringBuilder, string) instead." />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.Text.StringBuilder" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                  <parameter name="parameters" position="2" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="snprintf(System.Text.StringBuilder, System.UInt64, System.String)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.Text.StringBuilder" />
                  <parameter name="n" position="1" attrib="0" type="System.UInt64" />
                  <parameter name="message" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="snprintf(System.Text.StringBuilder, System.UInt64, System.String, System.Object[])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Not necessarily portable due to cdecl restrictions.&#xA;Use snprintf (StringBuilder, string) instead." />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.Text.StringBuilder" />
                  <parameter name="n" position="1" attrib="0" type="System.UInt64" />
                  <parameter name="format" position="2" attrib="0" type="System.String" />
                  <parameter name="parameters" position="3" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="srand(System.UInt32)" attrib="8342" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="seed" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="strerror(Mono.Unix.Native.Errno)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="errnum" position="0" attrib="0" type="Mono.Unix.Native.Errno" />
                </parameters>
              </method>
              <method name="strlen(System.IntPtr)" attrib="8342" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="system(System.String)" attrib="8342" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="string" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="tmpfile()" attrib="8342" static="true" returntype="System.IntPtr">
                <parameters />
              </method>
              <method name="tmpnam()" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Syscall.mkstemp() should be preferred." />
                    </properties>
                  </attribute>
                </attributes>
                <parameters />
              </method>
              <method name="tmpnam(System.Text.StringBuilder)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Syscall.mkstemp() should be preferred." />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.Text.StringBuilder" />
                </parameters>
              </method>
              <method name="ungetc(System.Int32, System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Int32" />
                  <parameter name="stream" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Syscall" type="class" base="Mono.Unix.Native.Stdlib" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <fields>
              <field name="AT_FDCWD" attrib="54" fieldtype="System.Int32" />
              <field name="L_ctermid" attrib="54" fieldtype="System.Int32" />
              <field name="L_cuserid" attrib="54" fieldtype="System.Int32" />
              <field name="MAP_FAILED" attrib="54" fieldtype="System.IntPtr" />
              <field name="UTIME_NOW" attrib="54" fieldtype="System.Int64" />
              <field name="UTIME_OMIT" attrib="54" fieldtype="System.Int64" />
            </fields>
            <methods>
              <method name="CMSG_ALIGN(System.UInt64)" attrib="8342" static="true" returntype="System.UInt64">
                <parameters>
                  <parameter name="length" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="CMSG_DATA(Mono.Unix.Native.Msghdr, System.Int64)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="msgh" position="0" attrib="0" type="Mono.Unix.Native.Msghdr" />
                  <parameter name="cmsg" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="CMSG_FIRSTHDR(Mono.Unix.Native.Msghdr)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="msgh" position="0" attrib="0" type="Mono.Unix.Native.Msghdr" />
                </parameters>
              </method>
              <method name="CMSG_LEN(System.UInt64)" attrib="8342" static="true" returntype="System.UInt64">
                <parameters>
                  <parameter name="length" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="CMSG_NXTHDR(Mono.Unix.Native.Msghdr, System.Int64)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="msgh" position="0" attrib="0" type="Mono.Unix.Native.Msghdr" />
                  <parameter name="cmsg" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="CMSG_SPACE(System.UInt64)" attrib="8342" static="true" returntype="System.UInt64">
                <parameters>
                  <parameter name="length" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="WEXITSTATUS(System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="status" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WIFEXITED(System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="status" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WIFSIGNALED(System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="status" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WIFSTOPPED(System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="status" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WSTOPSIG(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.Signum">
                <parameters>
                  <parameter name="status" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WTERMSIG(System.Int32)" attrib="150" static="true" returntype="Mono.Unix.Native.Signum">
                <parameters>
                  <parameter name="status" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="_exit(System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="status" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="accept(System.Int32, Mono.Unix.Native.Sockaddr)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="address" position="1" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                </parameters>
              </method>
              <method name="accept4(System.Int32, Mono.Unix.Native.Sockaddr, Mono.Unix.Native.UnixSocketFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="address" position="1" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                  <parameter name="flags" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketFlags" />
                </parameters>
              </method>
              <method name="access(System.String, Mono.Unix.Native.AccessModes)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="pathname" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="Mono.Unix.Native.AccessModes" />
                </parameters>
              </method>
              <method name="acct(System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="filename" position="0" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="alarm(System.UInt32)" attrib="8342" static="true" returntype="System.UInt32">
                <parameters>
                  <parameter name="seconds" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="bind(System.Int32, Mono.Unix.Native.Sockaddr)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="address" position="1" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                </parameters>
              </method>
              <method name="brk(System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="end_data_segment" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="chdir(System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="chmod(System.String, Mono.Unix.Native.FilePermissions)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="chown(System.String, System.UInt32, System.UInt32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="owner" position="1" attrib="0" type="System.UInt32" />
                  <parameter name="group" position="2" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="chroot(System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="close(System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="closedir(System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dir" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="closelog()" attrib="8342" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="confstr(Mono.Unix.Native.ConfstrName, System.Text.StringBuilder, System.UInt64)" attrib="8342" static="true" returntype="System.UInt64">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="Mono.Unix.Native.ConfstrName" />
                  <parameter name="buf" position="1" attrib="2" type="System.Text.StringBuilder" />
                  <parameter name="len" position="2" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="connect(System.Int32, Mono.Unix.Native.Sockaddr)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="address" position="1" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                </parameters>
              </method>
              <method name="creat(System.String, Mono.Unix.Native.FilePermissions)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="pathname" position="0" attrib="8192" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="crypt(System.String, System.String)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="This is insecure and should not be used" />
                      <property name="IsError" value="True" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.String" />
                  <parameter name="salt" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="cuserid(System.Text.StringBuilder)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="&quot;Nobody knows precisely what cuserid() does... DO NOT USE cuserid().&#xA;`string' must hold L_cuserid characters.  Use getlogin_r instead." />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="string" position="0" attrib="0" type="System.Text.StringBuilder" />
                </parameters>
              </method>
              <method name="dirfd(System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dir" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="dup(System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="dup2(System.Int32, System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="fd2" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="encrypt(System.Byte[], System.Boolean)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="This is insecure and should not be used" />
                      <property name="IsError" value="True" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="block" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="decode" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="endfsent()" attrib="150" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="endgrent()" attrib="150" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="endpwent()" attrib="150" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="endusershell()" attrib="150" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="epoll_create(Mono.Unix.Native.EpollFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="flags" position="0" attrib="0" type="Mono.Unix.Native.EpollFlags" />
                </parameters>
              </method>
              <method name="epoll_create(System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="epoll_ctl(System.Int32, Mono.Unix.Native.EpollOp, System.Int32, Mono.Unix.Native.EpollEvent&amp;)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="epfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="op" position="1" attrib="0" type="Mono.Unix.Native.EpollOp" />
                  <parameter name="fd" position="2" attrib="0" type="System.Int32" />
                  <parameter name="ee" position="3" attrib="0" type="Mono.Unix.Native.EpollEvent" direction="ref" />
                </parameters>
              </method>
              <method name="epoll_ctl(System.Int32, Mono.Unix.Native.EpollOp, System.Int32, Mono.Unix.Native.EpollEvents)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="epfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="op" position="1" attrib="0" type="Mono.Unix.Native.EpollOp" />
                  <parameter name="fd" position="2" attrib="0" type="System.Int32" />
                  <parameter name="events" position="3" attrib="0" type="Mono.Unix.Native.EpollEvents" />
                </parameters>
              </method>
              <method name="epoll_wait(System.Int32, Mono.Unix.Native.EpollEvent[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="epfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="events" position="1" attrib="0" type="Mono.Unix.Native.EpollEvent[]" />
                  <parameter name="max_events" position="2" attrib="0" type="System.Int32" />
                  <parameter name="timeout" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="execv(System.String, System.String[])" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="argv" position="1" attrib="0" type="System.String[]" />
                </parameters>
              </method>
              <method name="execve(System.String, System.String[], System.String[])" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="argv" position="1" attrib="0" type="System.String[]" />
                  <parameter name="envp" position="2" attrib="0" type="System.String[]" />
                </parameters>
              </method>
              <method name="execvp(System.String, System.String[])" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="argv" position="1" attrib="0" type="System.String[]" />
                </parameters>
              </method>
              <method name="faccessat(System.Int32, System.String, Mono.Unix.Native.AccessModes, Mono.Unix.Native.AtFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pathname" position="1" attrib="0" type="System.String" />
                  <parameter name="mode" position="2" attrib="0" type="Mono.Unix.Native.AccessModes" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.AtFlags" />
                </parameters>
              </method>
              <method name="fchdir(System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="fchmod(System.Int32, Mono.Unix.Native.FilePermissions)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="filedes" position="0" attrib="0" type="System.Int32" />
                  <parameter name="mode" position="1" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="fchmodat(System.Int32, System.String, Mono.Unix.Native.FilePermissions, Mono.Unix.Native.AtFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pathname" position="1" attrib="0" type="System.String" />
                  <parameter name="mode" position="2" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.AtFlags" />
                </parameters>
              </method>
              <method name="fchown(System.Int32, System.UInt32, System.UInt32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="owner" position="1" attrib="0" type="System.UInt32" />
                  <parameter name="group" position="2" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="fchownat(System.Int32, System.String, System.UInt32, System.UInt32, Mono.Unix.Native.AtFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pathname" position="1" attrib="0" type="System.String" />
                  <parameter name="owner" position="2" attrib="0" type="System.UInt32" />
                  <parameter name="group" position="3" attrib="0" type="System.UInt32" />
                  <parameter name="flags" position="4" attrib="0" type="Mono.Unix.Native.AtFlags" />
                </parameters>
              </method>
              <method name="fcntl(System.Int32, Mono.Unix.Native.FcntlCommand)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="cmd" position="1" attrib="0" type="Mono.Unix.Native.FcntlCommand" />
                </parameters>
              </method>
              <method name="fcntl(System.Int32, Mono.Unix.Native.FcntlCommand, Mono.Unix.Native.DirectoryNotifyFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="cmd" position="1" attrib="0" type="Mono.Unix.Native.FcntlCommand" />
                  <parameter name="arg" position="2" attrib="0" type="Mono.Unix.Native.DirectoryNotifyFlags" />
                </parameters>
              </method>
              <method name="fcntl(System.Int32, Mono.Unix.Native.FcntlCommand, Mono.Unix.Native.Flock&amp;)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="cmd" position="1" attrib="0" type="Mono.Unix.Native.FcntlCommand" />
                  <parameter name="lock" position="2" attrib="0" type="Mono.Unix.Native.Flock" direction="ref" />
                </parameters>
              </method>
              <method name="fcntl(System.Int32, Mono.Unix.Native.FcntlCommand, System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="cmd" position="1" attrib="0" type="Mono.Unix.Native.FcntlCommand" />
                  <parameter name="arg" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="fcntl(System.Int32, Mono.Unix.Native.FcntlCommand, System.Int64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="cmd" position="1" attrib="0" type="Mono.Unix.Native.FcntlCommand" />
                  <parameter name="arg" position="2" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="fcntl(System.Int32, Mono.Unix.Native.FcntlCommand, System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="cmd" position="1" attrib="0" type="Mono.Unix.Native.FcntlCommand" />
                  <parameter name="ptr" position="2" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fdatasync(System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="fdopendir(System.Int32)" attrib="8342" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="fexecve(System.Int32, System.String[], System.String[])" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="argv" position="1" attrib="0" type="System.String[]" />
                  <parameter name="envp" position="2" attrib="0" type="System.String[]" />
                </parameters>
              </method>
              <method name="fgetgrent(System.IntPtr)" attrib="150" static="true" returntype="Mono.Unix.Native.Group">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fgetpwent(System.IntPtr)" attrib="150" static="true" returntype="Mono.Unix.Native.Passwd">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="fgetxattr(System.Int32, System.String, System.Byte[])" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="fgetxattr(System.Int32, System.String, out System.Byte[]&amp;)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="2" type="System.Byte[]" direction="out" />
                </parameters>
              </method>
              <method name="fgetxattr(System.Int32, System.String, System.Byte[], System.UInt64)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="name" position="1" attrib="8192" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="3" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="flistxattr(System.Int32, out System.String[]&amp;)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="values" position="1" attrib="2" type="System.String[]" direction="out" />
                </parameters>
              </method>
              <method name="flistxattr(System.Int32, System.Byte[], System.UInt64)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="list" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="2" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="flistxattr(System.Int32, System.Text.Encoding, out System.String[]&amp;)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                  <parameter name="values" position="2" attrib="2" type="System.String[]" direction="out" />
                </parameters>
              </method>
              <method name="fpathconf(System.Int32, Mono.Unix.Native.PathconfName)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="filedes" position="0" attrib="0" type="System.Int32" />
                  <parameter name="name" position="1" attrib="0" type="Mono.Unix.Native.PathconfName" />
                </parameters>
              </method>
              <method name="fpathconf(System.Int32, Mono.Unix.Native.PathconfName, Mono.Unix.Native.Errno)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="filedes" position="0" attrib="0" type="System.Int32" />
                  <parameter name="name" position="1" attrib="0" type="Mono.Unix.Native.PathconfName" />
                  <parameter name="defaultError" position="2" attrib="0" type="Mono.Unix.Native.Errno" />
                </parameters>
              </method>
              <method name="fremovexattr(System.Int32, System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="name" position="1" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="fsetxattr(System.Int32, System.String, System.Byte[])" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="fsetxattr(System.Int32, System.String, System.Byte[], Mono.Unix.Native.XattrFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.XattrFlags" />
                </parameters>
              </method>
              <method name="fsetxattr(System.Int32, System.String, System.Byte[], System.UInt64)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="3" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="fsetxattr(System.Int32, System.String, System.Byte[], System.UInt64, Mono.Unix.Native.XattrFlags)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="name" position="1" attrib="8192" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="3" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="4" attrib="0" type="Mono.Unix.Native.XattrFlags" />
                </parameters>
              </method>
              <method name="fstat(System.Int32, out Mono.Unix.Native.Stat&amp;)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="filedes" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buf" position="1" attrib="2" type="Mono.Unix.Native.Stat" direction="out" />
                </parameters>
              </method>
              <method name="fstatat(System.Int32, System.String, out Mono.Unix.Native.Stat&amp;, Mono.Unix.Native.AtFlags)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="file_name" position="1" attrib="8192" type="System.String" />
                  <parameter name="buf" position="2" attrib="2" type="Mono.Unix.Native.Stat" direction="out" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.AtFlags" />
                </parameters>
              </method>
              <method name="fstatvfs(System.Int32, out Mono.Unix.Native.Statvfs&amp;)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buf" position="1" attrib="2" type="Mono.Unix.Native.Statvfs" direction="out" />
                </parameters>
              </method>
              <method name="fsync(System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ftruncate(System.Int32, System.Int64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="length" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="futimens(System.Int32, Mono.Unix.Native.Timespec[])" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="times" position="1" attrib="0" type="Mono.Unix.Native.Timespec[]" />
                </parameters>
              </method>
              <method name="futimes(System.Int32, Mono.Unix.Native.Timeval[])" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="tvp" position="1" attrib="0" type="Mono.Unix.Native.Timeval[]" />
                </parameters>
              </method>
              <method name="getcwd(System.Text.StringBuilder)" attrib="150" static="true" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="buf" position="0" attrib="0" type="System.Text.StringBuilder" />
                </parameters>
              </method>
              <method name="getcwd(System.Text.StringBuilder, System.UInt64)" attrib="8342" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="buf" position="0" attrib="2" type="System.Text.StringBuilder" />
                  <parameter name="size" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="getdomainname(System.Text.StringBuilder)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.Text.StringBuilder" />
                </parameters>
              </method>
              <method name="getdomainname(System.Text.StringBuilder, System.UInt64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="name" position="0" attrib="2" type="System.Text.StringBuilder" />
                  <parameter name="len" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="getdtablesize()" attrib="8342" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="getegid()" attrib="8342" static="true" returntype="System.UInt32">
                <parameters />
              </method>
              <method name="geteuid()" attrib="8342" static="true" returntype="System.UInt32">
                <parameters />
              </method>
              <method name="getfsent()" attrib="150" static="true" returntype="Mono.Unix.Native.Fstab">
                <parameters />
              </method>
              <method name="getfsfile(System.String)" attrib="150" static="true" returntype="Mono.Unix.Native.Fstab">
                <parameters>
                  <parameter name="mount_point" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="getfsspec(System.String)" attrib="150" static="true" returntype="Mono.Unix.Native.Fstab">
                <parameters>
                  <parameter name="special_file" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="getgid()" attrib="8342" static="true" returntype="System.UInt32">
                <parameters />
              </method>
              <method name="getgrent()" attrib="150" static="true" returntype="Mono.Unix.Native.Group">
                <parameters />
              </method>
              <method name="getgrgid(System.UInt32)" attrib="150" static="true" returntype="Mono.Unix.Native.Group">
                <parameters>
                  <parameter name="uid" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="getgrgid_r(System.UInt32, Mono.Unix.Native.Group, out Mono.Unix.Native.Group&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="uid" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="grbuf" position="1" attrib="0" type="Mono.Unix.Native.Group" />
                  <parameter name="grbufp" position="2" attrib="2" type="Mono.Unix.Native.Group" direction="out" />
                </parameters>
              </method>
              <method name="getgrnam(System.String)" attrib="150" static="true" returntype="Mono.Unix.Native.Group">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="getgrnam_r(System.String, Mono.Unix.Native.Group, out Mono.Unix.Native.Group&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="grbuf" position="1" attrib="0" type="Mono.Unix.Native.Group" />
                  <parameter name="grbufp" position="2" attrib="2" type="Mono.Unix.Native.Group" direction="out" />
                </parameters>
              </method>
              <method name="getgrouplist(Mono.Unix.Native.Passwd)" attrib="150" static="true" returntype="Mono.Unix.Native.Group[]">
                <parameters>
                  <parameter name="user" position="0" attrib="0" type="Mono.Unix.Native.Passwd" />
                </parameters>
              </method>
              <method name="getgrouplist(System.String)" attrib="150" static="true" returntype="Mono.Unix.Native.Group[]">
                <parameters>
                  <parameter name="username" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="getgroups(System.UInt32[])" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="list" position="0" attrib="0" type="System.UInt32[]" />
                </parameters>
              </method>
              <method name="getgroups(System.Int32, System.UInt32[])" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.Int32" />
                  <parameter name="list" position="1" attrib="0" type="System.UInt32[]" />
                </parameters>
              </method>
              <method name="gethostid()" attrib="8342" static="true" returntype="System.Int64">
                <parameters />
              </method>
              <method name="gethostname(System.Text.StringBuilder)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.Text.StringBuilder" />
                </parameters>
              </method>
              <method name="gethostname(System.Text.StringBuilder, System.UInt64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="name" position="0" attrib="2" type="System.Text.StringBuilder" />
                  <parameter name="len" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="getlogin()" attrib="150" static="true" returntype="System.String">
                <parameters />
              </method>
              <method name="getlogin_r(System.Text.StringBuilder)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.Text.StringBuilder" />
                </parameters>
              </method>
              <method name="getlogin_r(System.Text.StringBuilder, System.UInt64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="name" position="0" attrib="2" type="System.Text.StringBuilder" />
                  <parameter name="bufsize" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="getpagesize()" attrib="8342" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Dropped in POSIX 1003.1-2001.  Use Syscall.sysconf (SysconfName._SC_PAGESIZE)." />
                    </properties>
                  </attribute>
                </attributes>
                <parameters />
              </method>
              <method name="getpeername(System.Int32, Mono.Unix.Native.Sockaddr)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="address" position="1" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                </parameters>
              </method>
              <method name="getpgid(System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="pid" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="getpgrp()" attrib="8342" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="getpid()" attrib="8342" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="getppid()" attrib="8342" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="getpwent()" attrib="150" static="true" returntype="Mono.Unix.Native.Passwd">
                <parameters />
              </method>
              <method name="getpwnam(System.String)" attrib="150" static="true" returntype="Mono.Unix.Native.Passwd">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="getpwnam_r(System.String, Mono.Unix.Native.Passwd, out Mono.Unix.Native.Passwd&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="pwbuf" position="1" attrib="0" type="Mono.Unix.Native.Passwd" />
                  <parameter name="pwbufp" position="2" attrib="2" type="Mono.Unix.Native.Passwd" direction="out" />
                </parameters>
              </method>
              <method name="getpwuid(System.UInt32)" attrib="150" static="true" returntype="Mono.Unix.Native.Passwd">
                <parameters>
                  <parameter name="uid" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="getpwuid_r(System.UInt32, Mono.Unix.Native.Passwd, out Mono.Unix.Native.Passwd&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="uid" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="pwbuf" position="1" attrib="0" type="Mono.Unix.Native.Passwd" />
                  <parameter name="pwbufp" position="2" attrib="2" type="Mono.Unix.Native.Passwd" direction="out" />
                </parameters>
              </method>
              <method name="getresgid(out System.UInt32&amp;, out System.UInt32&amp;, out System.UInt32&amp;)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="rgid" position="0" attrib="2" type="System.UInt32" direction="out" />
                  <parameter name="egid" position="1" attrib="2" type="System.UInt32" direction="out" />
                  <parameter name="sgid" position="2" attrib="2" type="System.UInt32" direction="out" />
                </parameters>
              </method>
              <method name="getresuid(out System.UInt32&amp;, out System.UInt32&amp;, out System.UInt32&amp;)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="ruid" position="0" attrib="2" type="System.UInt32" direction="out" />
                  <parameter name="euid" position="1" attrib="2" type="System.UInt32" direction="out" />
                  <parameter name="suid" position="2" attrib="2" type="System.UInt32" direction="out" />
                </parameters>
              </method>
              <method name="getsid(System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="pid" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="getsockname(System.Int32, Mono.Unix.Native.Sockaddr)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="address" position="1" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                </parameters>
              </method>
              <method name="getsockopt(System.Int32, Mono.Unix.Native.UnixSocketProtocol, Mono.Unix.Native.UnixSocketOptionName, out Mono.Unix.Native.Linger&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="level" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                  <parameter name="option_name" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketOptionName" />
                  <parameter name="option_value" position="3" attrib="2" type="Mono.Unix.Native.Linger" direction="out" />
                </parameters>
              </method>
              <method name="getsockopt(System.Int32, Mono.Unix.Native.UnixSocketProtocol, Mono.Unix.Native.UnixSocketOptionName, out Mono.Unix.Native.Timeval&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="level" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                  <parameter name="option_name" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketOptionName" />
                  <parameter name="option_value" position="3" attrib="2" type="Mono.Unix.Native.Timeval" direction="out" />
                </parameters>
              </method>
              <method name="getsockopt(System.Int32, Mono.Unix.Native.UnixSocketProtocol, Mono.Unix.Native.UnixSocketOptionName, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="level" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                  <parameter name="option_name" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketOptionName" />
                  <parameter name="option_value" position="3" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="getsockopt(System.Int32, Mono.Unix.Native.UnixSocketProtocol, Mono.Unix.Native.UnixSocketOptionName, System.Byte[], System.Int64&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="level" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                  <parameter name="option_name" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketOptionName" />
                  <parameter name="option_value" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="option_len" position="4" attrib="0" type="System.Int64" direction="ref" />
                </parameters>
              </method>
              <method name="getsockopt(System.Int32, Mono.Unix.Native.UnixSocketProtocol, Mono.Unix.Native.UnixSocketOptionName, System.IntPtr, System.Int64&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="level" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                  <parameter name="option_name" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketOptionName" />
                  <parameter name="option_value" position="3" attrib="0" type="System.IntPtr" />
                  <parameter name="option_len" position="4" attrib="0" type="System.Int64" direction="ref" />
                </parameters>
              </method>
              <method name="getsockopt(System.Int32, Mono.Unix.Native.UnixSocketProtocol, Mono.Unix.Native.UnixSocketOptionName, System.Void*, System.Int64&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="level" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                  <parameter name="option_name" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketOptionName" />
                  <parameter name="option_value" position="3" attrib="0" type="System.Void*" />
                  <parameter name="option_len" position="4" attrib="0" type="System.Int64" direction="ref" />
                </parameters>
              </method>
              <method name="gettimeofday(out Mono.Unix.Native.Timeval&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="tv" position="0" attrib="2" type="Mono.Unix.Native.Timeval" direction="out" />
                </parameters>
              </method>
              <method name="gettimeofday(out Mono.Unix.Native.Timezone&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="tz" position="0" attrib="2" type="Mono.Unix.Native.Timezone" direction="out" />
                </parameters>
              </method>
              <method name="gettimeofday(out Mono.Unix.Native.Timeval&amp;, out Mono.Unix.Native.Timezone&amp;)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="tv" position="0" attrib="2" type="Mono.Unix.Native.Timeval" direction="out" />
                  <parameter name="tz" position="1" attrib="2" type="Mono.Unix.Native.Timezone" direction="out" />
                </parameters>
              </method>
              <method name="getuid()" attrib="8342" static="true" returntype="System.UInt32">
                <parameters />
              </method>
              <method name="getusershell()" attrib="150" static="true" returntype="System.String">
                <parameters />
              </method>
              <method name="getxattr(System.String, System.String, System.Byte[])" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="getxattr(System.String, System.String, out System.Byte[]&amp;)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="2" type="System.Byte[]" direction="out" />
                </parameters>
              </method>
              <method name="getxattr(System.String, System.String, System.Byte[], System.UInt64)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="name" position="1" attrib="8192" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="3" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="htonl(System.UInt32)" attrib="8342" static="true" returntype="System.UInt32">
                <parameters>
                  <parameter name="hostlong" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="htons(System.UInt16)" attrib="8342" static="true" returntype="System.UInt16">
                <parameters>
                  <parameter name="hostshort" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="isatty(System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="kill(System.Int32, Mono.Unix.Native.Signum)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="pid" position="0" attrib="0" type="System.Int32" />
                  <parameter name="sig" position="1" attrib="0" type="Mono.Unix.Native.Signum" />
                </parameters>
              </method>
              <method name="lchown(System.String, System.UInt32, System.UInt32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="owner" position="1" attrib="0" type="System.UInt32" />
                  <parameter name="group" position="2" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="lgetxattr(System.String, System.String, System.Byte[])" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="lgetxattr(System.String, System.String, out System.Byte[]&amp;)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="2" type="System.Byte[]" direction="out" />
                </parameters>
              </method>
              <method name="lgetxattr(System.String, System.String, System.Byte[], System.UInt64)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="name" position="1" attrib="8192" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="3" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="link(System.String, System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="oldpath" position="0" attrib="8192" type="System.String" />
                  <parameter name="newpath" position="1" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="linkat(System.Int32, System.String, System.Int32, System.String, Mono.Unix.Native.AtFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="olddirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="oldpath" position="1" attrib="0" type="System.String" />
                  <parameter name="newdirfd" position="2" attrib="0" type="System.Int32" />
                  <parameter name="newpath" position="3" attrib="0" type="System.String" />
                  <parameter name="flags" position="4" attrib="0" type="Mono.Unix.Native.AtFlags" />
                </parameters>
              </method>
              <method name="listen(System.Int32, System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="backlog" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="listxattr(System.String, out System.String[]&amp;)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="values" position="1" attrib="2" type="System.String[]" direction="out" />
                </parameters>
              </method>
              <method name="listxattr(System.String, System.Byte[], System.UInt64)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="list" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="2" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="listxattr(System.String, System.Text.Encoding, out System.String[]&amp;)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                  <parameter name="values" position="2" attrib="2" type="System.String[]" direction="out" />
                </parameters>
              </method>
              <method name="llistxattr(System.String, out System.String[]&amp;)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="values" position="1" attrib="2" type="System.String[]" direction="out" />
                </parameters>
              </method>
              <method name="llistxattr(System.String, System.Byte[], System.UInt64)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="list" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="2" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="llistxattr(System.String, System.Text.Encoding, out System.String[]&amp;)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                  <parameter name="values" position="2" attrib="2" type="System.String[]" direction="out" />
                </parameters>
              </method>
              <method name="lockf(System.Int32, Mono.Unix.Native.LockfCommand, System.Int64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="cmd" position="1" attrib="0" type="Mono.Unix.Native.LockfCommand" />
                  <parameter name="len" position="2" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="lremovexattr(System.String, System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="name" position="1" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="lseek(System.Int32, System.Int64, Mono.Unix.Native.SeekFlags)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int64" />
                  <parameter name="whence" position="2" attrib="0" type="Mono.Unix.Native.SeekFlags" />
                </parameters>
              </method>
              <method name="lsetxattr(System.String, System.String, System.Byte[])" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="lsetxattr(System.String, System.String, System.Byte[], Mono.Unix.Native.XattrFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.XattrFlags" />
                </parameters>
              </method>
              <method name="lsetxattr(System.String, System.String, System.Byte[], System.UInt64)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="3" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="lsetxattr(System.String, System.String, System.Byte[], System.UInt64, Mono.Unix.Native.XattrFlags)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="name" position="1" attrib="8192" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="3" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="4" attrib="0" type="Mono.Unix.Native.XattrFlags" />
                </parameters>
              </method>
              <method name="lstat(System.String, out Mono.Unix.Native.Stat&amp;)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="file_name" position="0" attrib="8192" type="System.String" />
                  <parameter name="buf" position="1" attrib="2" type="Mono.Unix.Native.Stat" direction="out" />
                </parameters>
              </method>
              <method name="lutimes(System.String, Mono.Unix.Native.Timeval[])" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                  <parameter name="tvp" position="1" attrib="0" type="Mono.Unix.Native.Timeval[]" />
                </parameters>
              </method>
              <method name="mincore(System.IntPtr, System.UInt64, System.Byte[])" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="start" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="length" position="1" attrib="0" type="System.UInt64" />
                  <parameter name="vec" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="mkdir(System.String, Mono.Unix.Native.FilePermissions)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="oldpath" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="mkdirat(System.Int32, System.String, Mono.Unix.Native.FilePermissions)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="oldpath" position="1" attrib="0" type="System.String" />
                  <parameter name="mode" position="2" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="mkdtemp(System.Text.StringBuilder)" attrib="150" static="true" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="template" position="0" attrib="0" type="System.Text.StringBuilder" />
                </parameters>
              </method>
              <method name="mkfifo(System.String, Mono.Unix.Native.FilePermissions)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="pathname" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="mkfifoat(System.Int32, System.String, Mono.Unix.Native.FilePermissions)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pathname" position="1" attrib="0" type="System.String" />
                  <parameter name="mode" position="2" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="mknod(System.String, Mono.Unix.Native.FilePermissions, System.UInt64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="pathname" position="0" attrib="8192" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                  <parameter name="dev" position="2" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="mknodat(System.Int32, System.String, Mono.Unix.Native.FilePermissions, System.UInt64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pathname" position="1" attrib="8192" type="System.String" />
                  <parameter name="mode" position="2" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                  <parameter name="dev" position="3" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="mkstemp(System.Text.StringBuilder)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="template" position="0" attrib="0" type="System.Text.StringBuilder" />
                </parameters>
              </method>
              <method name="mlock(System.IntPtr, System.UInt64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="start" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="len" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="mlockall(Mono.Unix.Native.MlockallFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="flags" position="0" attrib="0" type="Mono.Unix.Native.MlockallFlags" />
                </parameters>
              </method>
              <method name="mmap(System.IntPtr, System.UInt64, Mono.Unix.Native.MmapProts, Mono.Unix.Native.MmapFlags, System.Int32, System.Int64)" attrib="8342" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="start" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="length" position="1" attrib="0" type="System.UInt64" />
                  <parameter name="prot" position="2" attrib="0" type="Mono.Unix.Native.MmapProts" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.MmapFlags" />
                  <parameter name="fd" position="4" attrib="0" type="System.Int32" />
                  <parameter name="offset" position="5" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="mprotect(System.IntPtr, System.UInt64, Mono.Unix.Native.MmapProts)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="start" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="len" position="1" attrib="0" type="System.UInt64" />
                  <parameter name="prot" position="2" attrib="0" type="Mono.Unix.Native.MmapProts" />
                </parameters>
              </method>
              <method name="mremap(System.IntPtr, System.UInt64, System.UInt64, Mono.Unix.Native.MremapFlags)" attrib="8342" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="old_address" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="old_size" position="1" attrib="0" type="System.UInt64" />
                  <parameter name="new_size" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.MremapFlags" />
                </parameters>
              </method>
              <method name="msync(System.IntPtr, System.UInt64, Mono.Unix.Native.MsyncFlags)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="start" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="len" position="1" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="2" attrib="0" type="Mono.Unix.Native.MsyncFlags" />
                </parameters>
              </method>
              <method name="munlock(System.IntPtr, System.UInt64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="start" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="len" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="munlockall()" attrib="8342" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="munmap(System.IntPtr, System.UInt64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="start" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="length" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="nanosleep(Mono.Unix.Native.Timespec&amp;, Mono.Unix.Native.Timespec&amp;)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="req" position="0" attrib="0" type="Mono.Unix.Native.Timespec" direction="ref" />
                  <parameter name="rem" position="1" attrib="0" type="Mono.Unix.Native.Timespec" direction="ref" />
                </parameters>
              </method>
              <method name="nice(System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="inc" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ntohl(System.UInt32)" attrib="8342" static="true" returntype="System.UInt32">
                <parameters>
                  <parameter name="netlong" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ntohs(System.UInt16)" attrib="8342" static="true" returntype="System.UInt16">
                <parameters>
                  <parameter name="netshort" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="open(System.String, Mono.Unix.Native.OpenFlags)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="pathname" position="0" attrib="8192" type="System.String" />
                  <parameter name="flags" position="1" attrib="0" type="Mono.Unix.Native.OpenFlags" />
                </parameters>
              </method>
              <method name="open(System.String, Mono.Unix.Native.OpenFlags, Mono.Unix.Native.FilePermissions)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="pathname" position="0" attrib="8192" type="System.String" />
                  <parameter name="flags" position="1" attrib="0" type="Mono.Unix.Native.OpenFlags" />
                  <parameter name="mode" position="2" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="openat(System.Int32, System.String, Mono.Unix.Native.OpenFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pathname" position="1" attrib="0" type="System.String" />
                  <parameter name="flags" position="2" attrib="0" type="Mono.Unix.Native.OpenFlags" />
                </parameters>
              </method>
              <method name="openat(System.Int32, System.String, Mono.Unix.Native.OpenFlags, Mono.Unix.Native.FilePermissions)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pathname" position="1" attrib="0" type="System.String" />
                  <parameter name="flags" position="2" attrib="0" type="Mono.Unix.Native.OpenFlags" />
                  <parameter name="mode" position="3" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="opendir(System.String)" attrib="8342" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="name" position="0" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="openlog(System.IntPtr, Mono.Unix.Native.SyslogOptions, Mono.Unix.Native.SyslogFacility)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="ident" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="option" position="1" attrib="0" type="Mono.Unix.Native.SyslogOptions" />
                  <parameter name="defaultFacility" position="2" attrib="0" type="Mono.Unix.Native.SyslogFacility" />
                </parameters>
              </method>
              <method name="pathconf(System.String, Mono.Unix.Native.PathconfName)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="name" position="1" attrib="0" type="Mono.Unix.Native.PathconfName" />
                </parameters>
              </method>
              <method name="pathconf(System.String, Mono.Unix.Native.PathconfName, Mono.Unix.Native.Errno)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="name" position="1" attrib="0" type="Mono.Unix.Native.PathconfName" />
                  <parameter name="defaultError" position="2" attrib="0" type="Mono.Unix.Native.Errno" />
                </parameters>
              </method>
              <method name="pause()" attrib="8342" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="pipe(System.Int32[])" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="filedes" position="0" attrib="0" type="System.Int32[]" />
                </parameters>
              </method>
              <method name="pipe(out System.Int32&amp;, out System.Int32&amp;)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="reading" position="0" attrib="2" type="System.Int32" direction="out" />
                  <parameter name="writing" position="1" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="poll(Mono.Unix.Native.Pollfd[], System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fds" position="0" attrib="0" type="Mono.Unix.Native.Pollfd[]" />
                  <parameter name="timeout" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="poll(Mono.Unix.Native.Pollfd[], System.UInt32, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fds" position="0" attrib="0" type="Mono.Unix.Native.Pollfd[]" />
                  <parameter name="nfds" position="1" attrib="0" type="System.UInt32" />
                  <parameter name="timeout" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="posix_fadvise(System.Int32, System.Int64, System.Int64, Mono.Unix.Native.PosixFadviseAdvice)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int64" />
                  <parameter name="len" position="2" attrib="0" type="System.Int64" />
                  <parameter name="advice" position="3" attrib="0" type="Mono.Unix.Native.PosixFadviseAdvice" />
                </parameters>
              </method>
              <method name="posix_fallocate(System.Int32, System.Int64, System.UInt64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int64" />
                  <parameter name="len" position="2" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="posix_madvise(System.IntPtr, System.UInt64, Mono.Unix.Native.PosixMadviseAdvice)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="addr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="len" position="1" attrib="0" type="System.UInt64" />
                  <parameter name="advice" position="2" attrib="0" type="Mono.Unix.Native.PosixMadviseAdvice" />
                </parameters>
              </method>
              <method name="pread(System.Int32, System.IntPtr, System.UInt64, System.Int64)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buf" position="1" attrib="0" type="System.IntPtr" />
                  <parameter name="count" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="offset" position="3" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="pread(System.Int32, System.Void*, System.UInt64, System.Int64)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buf" position="1" attrib="0" type="System.Void*" />
                  <parameter name="count" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="offset" position="3" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="preadv(System.Int32, Mono.Unix.Native.Iovec[], System.Int64)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="iov" position="1" attrib="0" type="Mono.Unix.Native.Iovec[]" />
                  <parameter name="offset" position="2" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="psignal(Mono.Unix.Native.Signum, System.String)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="sig" position="0" attrib="0" type="Mono.Unix.Native.Signum" />
                  <parameter name="s" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="pwrite(System.Int32, System.IntPtr, System.UInt64, System.Int64)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buf" position="1" attrib="0" type="System.IntPtr" />
                  <parameter name="count" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="offset" position="3" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="pwrite(System.Int32, System.Void*, System.UInt64, System.Int64)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buf" position="1" attrib="0" type="System.Void*" />
                  <parameter name="count" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="offset" position="3" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="pwritev(System.Int32, Mono.Unix.Native.Iovec[], System.Int64)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="iov" position="1" attrib="0" type="Mono.Unix.Native.Iovec[]" />
                  <parameter name="offset" position="2" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="read(System.Int32, System.IntPtr, System.UInt64)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buf" position="1" attrib="0" type="System.IntPtr" />
                  <parameter name="count" position="2" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="read(System.Int32, System.Void*, System.UInt64)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buf" position="1" attrib="0" type="System.Void*" />
                  <parameter name="count" position="2" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="readdir(System.IntPtr)" attrib="150" static="true" returntype="Mono.Unix.Native.Dirent">
                <parameters>
                  <parameter name="dir" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="readdir_r(System.IntPtr, Mono.Unix.Native.Dirent, out System.IntPtr&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dirp" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="entry" position="1" attrib="0" type="Mono.Unix.Native.Dirent" />
                  <parameter name="result" position="2" attrib="2" type="System.IntPtr" direction="out" />
                </parameters>
              </method>
              <method name="readlink(System.String, System.Byte[])" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="buf" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="readlink(System.String, System.Text.StringBuilder)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="buf" position="1" attrib="2" type="System.Text.StringBuilder" />
                </parameters>
              </method>
              <method name="readlink(System.String, System.Text.StringBuilder, System.UInt64)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="buf" position="1" attrib="2" type="System.Text.StringBuilder" />
                  <parameter name="bufsiz" position="2" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="readlinkat(System.Int32, System.String, System.Byte[])" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pathname" position="1" attrib="0" type="System.String" />
                  <parameter name="buf" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="readlinkat(System.Int32, System.String, System.Text.StringBuilder)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pathname" position="1" attrib="0" type="System.String" />
                  <parameter name="buf" position="2" attrib="2" type="System.Text.StringBuilder" />
                </parameters>
              </method>
              <method name="readlinkat(System.Int32, System.String, System.Text.StringBuilder, System.UInt64)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pathname" position="1" attrib="0" type="System.String" />
                  <parameter name="buf" position="2" attrib="2" type="System.Text.StringBuilder" />
                  <parameter name="bufsiz" position="3" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="readv(System.Int32, Mono.Unix.Native.Iovec[])" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="iov" position="1" attrib="0" type="Mono.Unix.Native.Iovec[]" />
                </parameters>
              </method>
              <method name="recv(System.Int32, System.Byte[], System.UInt64, Mono.Unix.Native.MessageFlags)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buffer" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="length" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                </parameters>
              </method>
              <method name="recv(System.Int32, System.IntPtr, System.UInt64, Mono.Unix.Native.MessageFlags)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buffer" position="1" attrib="0" type="System.IntPtr" />
                  <parameter name="length" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                </parameters>
              </method>
              <method name="recv(System.Int32, System.Void*, System.UInt64, Mono.Unix.Native.MessageFlags)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buffer" position="1" attrib="0" type="System.Void*" />
                  <parameter name="length" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                </parameters>
              </method>
              <method name="recvfrom(System.Int32, System.Byte[], System.UInt64, Mono.Unix.Native.MessageFlags, Mono.Unix.Native.Sockaddr)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buffer" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="length" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                  <parameter name="address" position="4" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                </parameters>
              </method>
              <method name="recvfrom(System.Int32, System.IntPtr, System.UInt64, Mono.Unix.Native.MessageFlags, Mono.Unix.Native.Sockaddr)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buffer" position="1" attrib="0" type="System.IntPtr" />
                  <parameter name="length" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                  <parameter name="address" position="4" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                </parameters>
              </method>
              <method name="recvfrom(System.Int32, System.Void*, System.UInt64, Mono.Unix.Native.MessageFlags, Mono.Unix.Native.Sockaddr)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buffer" position="1" attrib="0" type="System.Void*" />
                  <parameter name="length" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                  <parameter name="address" position="4" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                </parameters>
              </method>
              <method name="recvmsg(System.Int32, Mono.Unix.Native.Msghdr, Mono.Unix.Native.MessageFlags)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="message" position="1" attrib="0" type="Mono.Unix.Native.Msghdr" />
                  <parameter name="flags" position="2" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                </parameters>
              </method>
              <method name="remap_file_pages(System.IntPtr, System.UInt64, Mono.Unix.Native.MmapProts, System.Int64, Mono.Unix.Native.MmapFlags)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="start" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="size" position="1" attrib="0" type="System.UInt64" />
                  <parameter name="prot" position="2" attrib="0" type="Mono.Unix.Native.MmapProts" />
                  <parameter name="pgoff" position="3" attrib="0" type="System.Int64" />
                  <parameter name="flags" position="4" attrib="0" type="Mono.Unix.Native.MmapFlags" />
                </parameters>
              </method>
              <method name="removexattr(System.String, System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="name" position="1" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="renameat(System.Int32, System.String, System.Int32, System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="olddirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="oldpath" position="1" attrib="8192" type="System.String" />
                  <parameter name="newdirfd" position="2" attrib="0" type="System.Int32" />
                  <parameter name="newpath" position="3" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="revoke(System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="file" position="0" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="rewinddir(System.IntPtr)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dir" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="rmdir(System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="pathname" position="0" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="sbrk(System.IntPtr)" attrib="8342" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="increment" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="seekdir(System.IntPtr, System.Int64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dir" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="send(System.Int32, System.Byte[], System.UInt64, Mono.Unix.Native.MessageFlags)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="message" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="length" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                </parameters>
              </method>
              <method name="send(System.Int32, System.IntPtr, System.UInt64, Mono.Unix.Native.MessageFlags)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="message" position="1" attrib="0" type="System.IntPtr" />
                  <parameter name="length" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                </parameters>
              </method>
              <method name="send(System.Int32, System.Void*, System.UInt64, Mono.Unix.Native.MessageFlags)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="message" position="1" attrib="0" type="System.Void*" />
                  <parameter name="length" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                </parameters>
              </method>
              <method name="sendfile(System.Int32, System.Int32, System.Int64&amp;, System.UInt64)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="out_fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="in_fd" position="1" attrib="0" type="System.Int32" />
                  <parameter name="offset" position="2" attrib="0" type="System.Int64" direction="ref" />
                  <parameter name="count" position="3" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="sendmsg(System.Int32, Mono.Unix.Native.Msghdr, Mono.Unix.Native.MessageFlags)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="message" position="1" attrib="0" type="Mono.Unix.Native.Msghdr" />
                  <parameter name="flags" position="2" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                </parameters>
              </method>
              <method name="sendto(System.Int32, System.Byte[], System.UInt64, Mono.Unix.Native.MessageFlags, Mono.Unix.Native.Sockaddr)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="message" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="length" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                  <parameter name="address" position="4" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                </parameters>
              </method>
              <method name="sendto(System.Int32, System.IntPtr, System.UInt64, Mono.Unix.Native.MessageFlags, Mono.Unix.Native.Sockaddr)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="message" position="1" attrib="0" type="System.IntPtr" />
                  <parameter name="length" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                  <parameter name="address" position="4" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                </parameters>
              </method>
              <method name="sendto(System.Int32, System.Void*, System.UInt64, Mono.Unix.Native.MessageFlags, Mono.Unix.Native.Sockaddr)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="message" position="1" attrib="0" type="System.Void*" />
                  <parameter name="length" position="2" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.MessageFlags" />
                  <parameter name="address" position="4" attrib="0" type="Mono.Unix.Native.Sockaddr" />
                </parameters>
              </method>
              <method name="setdomainname(System.String)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="setdomainname(System.String, System.UInt64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="len" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="setegid(System.UInt32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="uid" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="seteuid(System.UInt32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="euid" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="setfsent()" attrib="150" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="setgid(System.UInt32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="gid" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="setgrent()" attrib="150" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="setgroups(System.UInt32[])" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="list" position="0" attrib="0" type="System.UInt32[]" />
                </parameters>
              </method>
              <method name="setgroups(System.UInt64, System.UInt32[])" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.UInt64" />
                  <parameter name="list" position="1" attrib="0" type="System.UInt32[]" />
                </parameters>
              </method>
              <method name="sethostid(System.Int64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="hostid" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="sethostname(System.String)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="sethostname(System.String, System.UInt64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="len" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="setkey(System.String)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="This is insecure and should not be used" />
                      <property name="IsError" value="True" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="setlogin(System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="setlogmask(Mono.Unix.Native.SyslogLevel)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="mask" position="0" attrib="0" type="Mono.Unix.Native.SyslogLevel" />
                </parameters>
              </method>
              <method name="setpgid(System.Int32, System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="pid" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pgid" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="setpgrp()" attrib="8342" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="setpwent()" attrib="150" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="setregid(System.UInt32, System.UInt32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="rgid" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="egid" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="setresgid(System.UInt32, System.UInt32, System.UInt32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="rgid" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="egid" position="1" attrib="0" type="System.UInt32" />
                  <parameter name="sgid" position="2" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="setresuid(System.UInt32, System.UInt32, System.UInt32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="ruid" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="euid" position="1" attrib="0" type="System.UInt32" />
                  <parameter name="suid" position="2" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="setreuid(System.UInt32, System.UInt32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="ruid" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="euid" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="setsid()" attrib="8342" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="setsockopt(System.Int32, Mono.Unix.Native.UnixSocketProtocol, Mono.Unix.Native.UnixSocketOptionName, Mono.Unix.Native.Linger)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="level" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                  <parameter name="option_name" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketOptionName" />
                  <parameter name="option_value" position="3" attrib="0" type="Mono.Unix.Native.Linger" />
                </parameters>
              </method>
              <method name="setsockopt(System.Int32, Mono.Unix.Native.UnixSocketProtocol, Mono.Unix.Native.UnixSocketOptionName, Mono.Unix.Native.Timeval)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="level" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                  <parameter name="option_name" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketOptionName" />
                  <parameter name="option_value" position="3" attrib="0" type="Mono.Unix.Native.Timeval" />
                </parameters>
              </method>
              <method name="setsockopt(System.Int32, Mono.Unix.Native.UnixSocketProtocol, Mono.Unix.Native.UnixSocketOptionName, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="level" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                  <parameter name="option_name" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketOptionName" />
                  <parameter name="option_value" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="setsockopt(System.Int32, Mono.Unix.Native.UnixSocketProtocol, Mono.Unix.Native.UnixSocketOptionName, System.Byte[], System.Int64)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="level" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                  <parameter name="option_name" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketOptionName" />
                  <parameter name="option_value" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="option_len" position="4" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="setsockopt(System.Int32, Mono.Unix.Native.UnixSocketProtocol, Mono.Unix.Native.UnixSocketOptionName, System.IntPtr, System.Int64)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="level" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                  <parameter name="option_name" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketOptionName" />
                  <parameter name="option_value" position="3" attrib="0" type="System.IntPtr" />
                  <parameter name="option_len" position="4" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="setsockopt(System.Int32, Mono.Unix.Native.UnixSocketProtocol, Mono.Unix.Native.UnixSocketOptionName, System.Void*, System.Int64)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="level" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                  <parameter name="option_name" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketOptionName" />
                  <parameter name="option_value" position="3" attrib="0" type="System.Void*" />
                  <parameter name="option_len" position="4" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="settimeofday(Mono.Unix.Native.Timeval&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="tv" position="0" attrib="0" type="Mono.Unix.Native.Timeval" direction="ref" />
                </parameters>
              </method>
              <method name="settimeofday(Mono.Unix.Native.Timeval&amp;, Mono.Unix.Native.Timezone&amp;)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="tv" position="0" attrib="0" type="Mono.Unix.Native.Timeval" direction="ref" />
                  <parameter name="tz" position="1" attrib="0" type="Mono.Unix.Native.Timezone" direction="ref" />
                </parameters>
              </method>
              <method name="setuid(System.UInt32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="uid" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="setusershell()" attrib="150" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="setxattr(System.String, System.String, System.Byte[])" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="setxattr(System.String, System.String, System.Byte[], Mono.Unix.Native.XattrFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.XattrFlags" />
                </parameters>
              </method>
              <method name="setxattr(System.String, System.String, System.Byte[], System.UInt64)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="3" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="setxattr(System.String, System.String, System.Byte[], System.UInt64, Mono.Unix.Native.XattrFlags)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="name" position="1" attrib="8192" type="System.String" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="3" attrib="0" type="System.UInt64" />
                  <parameter name="flags" position="4" attrib="0" type="Mono.Unix.Native.XattrFlags" />
                </parameters>
              </method>
              <method name="shutdown(System.Int32, Mono.Unix.Native.ShutdownOption)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                  <parameter name="how" position="1" attrib="0" type="Mono.Unix.Native.ShutdownOption" />
                </parameters>
              </method>
              <method name="sleep(System.UInt32)" attrib="8342" static="true" returntype="System.UInt32">
                <parameters>
                  <parameter name="seconds" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="sockatmark(System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="socket" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="socket(Mono.Unix.Native.UnixAddressFamily, Mono.Unix.Native.UnixSocketType, Mono.Unix.Native.UnixSocketProtocol)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="domain" position="0" attrib="0" type="Mono.Unix.Native.UnixAddressFamily" />
                  <parameter name="type" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketType" />
                  <parameter name="protocol" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                </parameters>
              </method>
              <method name="socket(Mono.Unix.Native.UnixAddressFamily, Mono.Unix.Native.UnixSocketType, Mono.Unix.Native.UnixSocketFlags, Mono.Unix.Native.UnixSocketProtocol)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="domain" position="0" attrib="0" type="Mono.Unix.Native.UnixAddressFamily" />
                  <parameter name="type" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketType" />
                  <parameter name="flags" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketFlags" />
                  <parameter name="protocol" position="3" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                </parameters>
              </method>
              <method name="socketpair(Mono.Unix.Native.UnixAddressFamily, Mono.Unix.Native.UnixSocketType, Mono.Unix.Native.UnixSocketProtocol, out System.Int32&amp;, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="domain" position="0" attrib="0" type="Mono.Unix.Native.UnixAddressFamily" />
                  <parameter name="type" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketType" />
                  <parameter name="protocol" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                  <parameter name="socket1" position="3" attrib="2" type="System.Int32" direction="out" />
                  <parameter name="socket2" position="4" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="socketpair(Mono.Unix.Native.UnixAddressFamily, Mono.Unix.Native.UnixSocketType, Mono.Unix.Native.UnixSocketFlags, Mono.Unix.Native.UnixSocketProtocol, out System.Int32&amp;, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="domain" position="0" attrib="0" type="Mono.Unix.Native.UnixAddressFamily" />
                  <parameter name="type" position="1" attrib="0" type="Mono.Unix.Native.UnixSocketType" />
                  <parameter name="flags" position="2" attrib="0" type="Mono.Unix.Native.UnixSocketFlags" />
                  <parameter name="protocol" position="3" attrib="0" type="Mono.Unix.Native.UnixSocketProtocol" />
                  <parameter name="socket1" position="4" attrib="2" type="System.Int32" direction="out" />
                  <parameter name="socket2" position="5" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="stat(System.String, out Mono.Unix.Native.Stat&amp;)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="file_name" position="0" attrib="8192" type="System.String" />
                  <parameter name="buf" position="1" attrib="2" type="Mono.Unix.Native.Stat" direction="out" />
                </parameters>
              </method>
              <method name="statvfs(System.String, out Mono.Unix.Native.Statvfs&amp;)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="buf" position="1" attrib="2" type="Mono.Unix.Native.Statvfs" direction="out" />
                </parameters>
              </method>
              <method name="stime(System.Int64&amp;)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="t" position="0" attrib="0" type="System.Int64" direction="ref" />
                </parameters>
              </method>
              <method name="strerror_r(Mono.Unix.Native.Errno, System.Text.StringBuilder)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="errnum" position="0" attrib="0" type="Mono.Unix.Native.Errno" />
                  <parameter name="buf" position="1" attrib="0" type="System.Text.StringBuilder" />
                </parameters>
              </method>
              <method name="strerror_r(Mono.Unix.Native.Errno, System.Text.StringBuilder, System.UInt64)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="errnum" position="0" attrib="0" type="Mono.Unix.Native.Errno" />
                  <parameter name="buf" position="1" attrib="0" type="System.Text.StringBuilder" />
                  <parameter name="n" position="2" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="strsignal(Mono.Unix.Native.Signum)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="sig" position="0" attrib="0" type="Mono.Unix.Native.Signum" />
                </parameters>
              </method>
              <method name="swab(System.IntPtr, System.IntPtr, System.Int64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="from" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="to" position="1" attrib="0" type="System.IntPtr" />
                  <parameter name="n" position="2" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="swab(System.Void*, System.Void*, System.Int64)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="from" position="0" attrib="0" type="System.Void*" />
                  <parameter name="to" position="1" attrib="0" type="System.Void*" />
                  <parameter name="n" position="2" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="symlink(System.String, System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="oldpath" position="0" attrib="8192" type="System.String" />
                  <parameter name="newpath" position="1" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="symlinkat(System.String, System.Int32, System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="oldpath" position="0" attrib="8192" type="System.String" />
                  <parameter name="dirfd" position="1" attrib="0" type="System.Int32" />
                  <parameter name="newpath" position="2" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="sync()" attrib="8342" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="sysconf(Mono.Unix.Native.SysconfName)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="Mono.Unix.Native.SysconfName" />
                </parameters>
              </method>
              <method name="sysconf(Mono.Unix.Native.SysconfName, Mono.Unix.Native.Errno)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="Mono.Unix.Native.SysconfName" />
                  <parameter name="defaultError" position="1" attrib="0" type="Mono.Unix.Native.Errno" />
                </parameters>
              </method>
              <method name="syslog(Mono.Unix.Native.SyslogLevel, System.String)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="level" position="0" attrib="0" type="Mono.Unix.Native.SyslogLevel" />
                  <parameter name="message" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="syslog(Mono.Unix.Native.SyslogFacility, Mono.Unix.Native.SyslogLevel, System.String)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="facility" position="0" attrib="0" type="Mono.Unix.Native.SyslogFacility" />
                  <parameter name="level" position="1" attrib="0" type="Mono.Unix.Native.SyslogLevel" />
                  <parameter name="message" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="syslog(Mono.Unix.Native.SyslogLevel, System.String, System.Object[])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Not necessarily portable due to cdecl restrictions.&#xA;Use syslog(SyslogLevel, string) instead." />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="level" position="0" attrib="0" type="Mono.Unix.Native.SyslogLevel" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                  <parameter name="parameters" position="2" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="syslog(Mono.Unix.Native.SyslogFacility, Mono.Unix.Native.SyslogLevel, System.String, System.Object[])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Not necessarily portable due to cdecl restrictions.&#xA;Use syslog(SyslogFacility, SyslogLevel, string) instead." />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="facility" position="0" attrib="0" type="Mono.Unix.Native.SyslogFacility" />
                  <parameter name="level" position="1" attrib="0" type="Mono.Unix.Native.SyslogLevel" />
                  <parameter name="format" position="2" attrib="0" type="System.String" />
                  <parameter name="parameters" position="3" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="tcgetpgrp(System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="tcsetpgrp(System.Int32, System.Int32)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pgrp" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="telldir(System.IntPtr)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="dir" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="time(out System.Int64&amp;)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="t" position="0" attrib="2" type="System.Int64" direction="out" />
                </parameters>
              </method>
              <method name="truncate(System.String, System.Int64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="path" position="0" attrib="8192" type="System.String" />
                  <parameter name="length" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ttyname(System.Int32)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ttyname_r(System.Int32, System.Text.StringBuilder)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buf" position="1" attrib="0" type="System.Text.StringBuilder" />
                </parameters>
              </method>
              <method name="ttyname_r(System.Int32, System.Text.StringBuilder, System.UInt64)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buf" position="1" attrib="2" type="System.Text.StringBuilder" />
                  <parameter name="buflen" position="2" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ttyslot()" attrib="8342" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ualarm(System.UInt32, System.UInt32)" attrib="8342" static="true" returntype="System.UInt32">
                <parameters>
                  <parameter name="usecs" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="interval" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="umask(Mono.Unix.Native.FilePermissions)" attrib="150" static="true" returntype="Mono.Unix.Native.FilePermissions">
                <parameters>
                  <parameter name="mask" position="0" attrib="0" type="Mono.Unix.Native.FilePermissions" />
                </parameters>
              </method>
              <method name="uname(out Mono.Unix.Native.Utsname&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buf" position="0" attrib="2" type="Mono.Unix.Native.Utsname" direction="out" />
                </parameters>
              </method>
              <method name="unlink(System.String)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="pathname" position="0" attrib="8192" type="System.String" />
                </parameters>
              </method>
              <method name="unlinkat(System.Int32, System.String, Mono.Unix.Native.AtFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pathname" position="1" attrib="0" type="System.String" />
                  <parameter name="flags" position="2" attrib="0" type="Mono.Unix.Native.AtFlags" />
                </parameters>
              </method>
              <method name="utime(System.String)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="utime(System.String, Mono.Unix.Native.Utimbuf&amp;)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                  <parameter name="buf" position="1" attrib="0" type="Mono.Unix.Native.Utimbuf" direction="ref" />
                </parameters>
              </method>
              <method name="utimensat(System.Int32, System.String, Mono.Unix.Native.Timespec[], Mono.Unix.Native.AtFlags)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="dirfd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="pathname" position="1" attrib="0" type="System.String" />
                  <parameter name="times" position="2" attrib="0" type="Mono.Unix.Native.Timespec[]" />
                  <parameter name="flags" position="3" attrib="0" type="Mono.Unix.Native.AtFlags" />
                </parameters>
              </method>
              <method name="utimes(System.String, Mono.Unix.Native.Timeval[])" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                  <parameter name="tvp" position="1" attrib="0" type="Mono.Unix.Native.Timeval[]" />
                </parameters>
              </method>
              <method name="vhangup()" attrib="8342" static="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="wait(out System.Int32&amp;)" attrib="8342" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="status" position="0" attrib="2" type="System.Int32" direction="out" />
                </parameters>
              </method>
              <method name="waitpid(System.Int32, out System.Int32&amp;, Mono.Unix.Native.WaitOptions)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="pid" position="0" attrib="0" type="System.Int32" />
                  <parameter name="status" position="1" attrib="2" type="System.Int32" direction="out" />
                  <parameter name="options" position="2" attrib="0" type="Mono.Unix.Native.WaitOptions" />
                </parameters>
              </method>
              <method name="write(System.Int32, System.IntPtr, System.UInt64)" attrib="8342" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buf" position="1" attrib="0" type="System.IntPtr" />
                  <parameter name="count" position="2" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="write(System.Int32, System.Void*, System.UInt64)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="buf" position="1" attrib="0" type="System.Void*" />
                  <parameter name="count" position="2" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="writev(System.Int32, Mono.Unix.Native.Iovec[])" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="fd" position="0" attrib="0" type="System.Int32" />
                  <parameter name="iov" position="1" attrib="0" type="Mono.Unix.Native.Iovec[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SysconfName" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="_SC_2_CHAR_TERM" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="95" />
              <field name="_SC_2_C_BIND" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="47" />
              <field name="_SC_2_C_DEV" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="48" />
              <field name="_SC_2_C_VERSION" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="96" />
              <field name="_SC_2_FORT_DEV" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="49" />
              <field name="_SC_2_FORT_RUN" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="50" />
              <field name="_SC_2_LOCALEDEF" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="52" />
              <field name="_SC_2_PBS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="168" />
              <field name="_SC_2_PBS_ACCOUNTING" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="169" />
              <field name="_SC_2_PBS_CHECKPOINT" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="175" />
              <field name="_SC_2_PBS_LOCATE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="170" />
              <field name="_SC_2_PBS_MESSAGE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="171" />
              <field name="_SC_2_PBS_TRACK" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="172" />
              <field name="_SC_2_SW_DEV" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="51" />
              <field name="_SC_2_UPE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="97" />
              <field name="_SC_2_VERSION" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="46" />
              <field name="_SC_ADVISORY_INFO" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="132" />
              <field name="_SC_AIO_LISTIO_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="23" />
              <field name="_SC_AIO_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="24" />
              <field name="_SC_AIO_PRIO_DELTA_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="25" />
              <field name="_SC_ARG_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="0" />
              <field name="_SC_ASYNCHRONOUS_IO" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="12" />
              <field name="_SC_ATEXIT_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="87" />
              <field name="_SC_AVPHYS_PAGES" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="86" />
              <field name="_SC_BARRIERS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="133" />
              <field name="_SC_BASE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="134" />
              <field name="_SC_BC_BASE_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="36" />
              <field name="_SC_BC_DIM_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="37" />
              <field name="_SC_BC_SCALE_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="38" />
              <field name="_SC_BC_STRING_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="39" />
              <field name="_SC_CHARCLASS_NAME_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="45" />
              <field name="_SC_CHAR_BIT" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="101" />
              <field name="_SC_CHAR_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="102" />
              <field name="_SC_CHAR_MIN" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="103" />
              <field name="_SC_CHILD_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="1" />
              <field name="_SC_CLK_TCK" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="2" />
              <field name="_SC_CLOCK_SELECTION" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="137" />
              <field name="_SC_COLL_WEIGHTS_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="40" />
              <field name="_SC_CPUTIME" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="138" />
              <field name="_SC_C_LANG_SUPPORT" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="135" />
              <field name="_SC_C_LANG_SUPPORT_R" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="136" />
              <field name="_SC_DELAYTIMER_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="26" />
              <field name="_SC_DEVICE_IO" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="140" />
              <field name="_SC_DEVICE_SPECIFIC" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="141" />
              <field name="_SC_DEVICE_SPECIFIC_R" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="142" />
              <field name="_SC_EQUIV_CLASS_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="41" />
              <field name="_SC_EXPR_NEST_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="42" />
              <field name="_SC_FD_MGMT" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="143" />
              <field name="_SC_FIFO" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="144" />
              <field name="_SC_FILE_ATTRIBUTES" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="146" />
              <field name="_SC_FILE_LOCKING" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="147" />
              <field name="_SC_FILE_SYSTEM" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="148" />
              <field name="_SC_FSYNC" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="15" />
              <field name="_SC_GETGR_R_SIZE_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="69" />
              <field name="_SC_GETPW_R_SIZE_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="70" />
              <field name="_SC_HOST_NAME_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="180" />
              <field name="_SC_INT_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="104" />
              <field name="_SC_INT_MIN" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="105" />
              <field name="_SC_IOV_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="60" />
              <field name="_SC_JOB_CONTROL" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="7" />
              <field name="_SC_LEVEL1_DCACHE_ASSOC" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="189" />
              <field name="_SC_LEVEL1_DCACHE_LINESIZE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="190" />
              <field name="_SC_LEVEL1_DCACHE_SIZE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="188" />
              <field name="_SC_LEVEL1_ICACHE_ASSOC" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="186" />
              <field name="_SC_LEVEL1_ICACHE_LINESIZE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="187" />
              <field name="_SC_LEVEL1_ICACHE_SIZE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="185" />
              <field name="_SC_LEVEL2_CACHE_ASSOC" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="192" />
              <field name="_SC_LEVEL2_CACHE_LINESIZE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="193" />
              <field name="_SC_LEVEL2_CACHE_SIZE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="191" />
              <field name="_SC_LEVEL3_CACHE_ASSOC" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="195" />
              <field name="_SC_LEVEL3_CACHE_LINESIZE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="196" />
              <field name="_SC_LEVEL3_CACHE_SIZE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="194" />
              <field name="_SC_LEVEL4_CACHE_ASSOC" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="198" />
              <field name="_SC_LEVEL4_CACHE_LINESIZE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="199" />
              <field name="_SC_LEVEL4_CACHE_SIZE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="197" />
              <field name="_SC_LINE_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="43" />
              <field name="_SC_LOGIN_NAME_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="71" />
              <field name="_SC_LONG_BIT" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="106" />
              <field name="_SC_MAPPED_FILES" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="16" />
              <field name="_SC_MB_LEN_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="108" />
              <field name="_SC_MEMLOCK" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="17" />
              <field name="_SC_MEMLOCK_RANGE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="18" />
              <field name="_SC_MEMORY_PROTECTION" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="19" />
              <field name="_SC_MESSAGE_PASSING" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="20" />
              <field name="_SC_MONOTONIC_CLOCK" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="149" />
              <field name="_SC_MQ_OPEN_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="27" />
              <field name="_SC_MQ_PRIO_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="28" />
              <field name="_SC_MULTI_PROCESS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="150" />
              <field name="_SC_NETWORKING" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="152" />
              <field name="_SC_NGROUPS_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="3" />
              <field name="_SC_NL_ARGMAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="119" />
              <field name="_SC_NL_LANGMAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="120" />
              <field name="_SC_NL_MSGMAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="121" />
              <field name="_SC_NL_NMAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="122" />
              <field name="_SC_NL_SETMAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="123" />
              <field name="_SC_NL_TEXTMAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="124" />
              <field name="_SC_NPROCESSORS_CONF" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="83" />
              <field name="_SC_NPROCESSORS_ONLN" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="84" />
              <field name="_SC_NZERO" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="109" />
              <field name="_SC_OPEN_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="4" />
              <field name="_SC_PAGESIZE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="30" />
              <field name="_SC_PASS_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="88" />
              <field name="_SC_PHYS_PAGES" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="85" />
              <field name="_SC_PII" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="53" />
              <field name="_SC_PII_INTERNET" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="56" />
              <field name="_SC_PII_INTERNET_DGRAM" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="62" />
              <field name="_SC_PII_INTERNET_STREAM" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="61" />
              <field name="_SC_PII_OSI" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="57" />
              <field name="_SC_PII_OSI_CLTS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="64" />
              <field name="_SC_PII_OSI_COTS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="63" />
              <field name="_SC_PII_OSI_M" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="65" />
              <field name="_SC_PII_SOCKET" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="55" />
              <field name="_SC_PII_XTI" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="54" />
              <field name="_SC_PIPE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="145" />
              <field name="_SC_POLL" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="58" />
              <field name="_SC_PRIORITIZED_IO" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="13" />
              <field name="_SC_PRIORITY_SCHEDULING" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="10" />
              <field name="_SC_READER_WRITER_LOCKS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="153" />
              <field name="_SC_REALTIME_SIGNALS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="9" />
              <field name="_SC_REGEXP" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="155" />
              <field name="_SC_REGEX_VERSION" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="156" />
              <field name="_SC_RE_DUP_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="44" />
              <field name="_SC_RTSIG_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="31" />
              <field name="_SC_SAVED_IDS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="8" />
              <field name="_SC_SCHAR_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="111" />
              <field name="_SC_SCHAR_MIN" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="112" />
              <field name="_SC_SELECT" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="59" />
              <field name="_SC_SEMAPHORES" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="21" />
              <field name="_SC_SEM_NSEMS_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="32" />
              <field name="_SC_SEM_VALUE_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="33" />
              <field name="_SC_SHARED_MEMORY_OBJECTS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="22" />
              <field name="_SC_SHELL" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="157" />
              <field name="_SC_SHRT_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="113" />
              <field name="_SC_SHRT_MIN" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="114" />
              <field name="_SC_SIGNALS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="158" />
              <field name="_SC_SIGQUEUE_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="34" />
              <field name="_SC_SINGLE_PROCESS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="151" />
              <field name="_SC_SPAWN" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="159" />
              <field name="_SC_SPIN_LOCKS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="154" />
              <field name="_SC_SPORADIC_SERVER" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="160" />
              <field name="_SC_SSIZE_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="110" />
              <field name="_SC_STREAMS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="174" />
              <field name="_SC_STREAM_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="5" />
              <field name="_SC_SYMLOOP_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="173" />
              <field name="_SC_SYNCHRONIZED_IO" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="14" />
              <field name="_SC_SYSTEM_DATABASE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="162" />
              <field name="_SC_SYSTEM_DATABASE_R" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="163" />
              <field name="_SC_THREADS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="67" />
              <field name="_SC_THREAD_ATTR_STACKADDR" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="77" />
              <field name="_SC_THREAD_ATTR_STACKSIZE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="78" />
              <field name="_SC_THREAD_CPUTIME" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="139" />
              <field name="_SC_THREAD_DESTRUCTOR_ITERATIONS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="73" />
              <field name="_SC_THREAD_KEYS_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="74" />
              <field name="_SC_THREAD_PRIORITY_SCHEDULING" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="79" />
              <field name="_SC_THREAD_PRIO_INHERIT" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="80" />
              <field name="_SC_THREAD_PRIO_PROTECT" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="81" />
              <field name="_SC_THREAD_PROCESS_SHARED" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="82" />
              <field name="_SC_THREAD_SAFE_FUNCTIONS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="68" />
              <field name="_SC_THREAD_SPORADIC_SERVER" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="161" />
              <field name="_SC_THREAD_STACK_MIN" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="75" />
              <field name="_SC_THREAD_THREADS_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="76" />
              <field name="_SC_TIMEOUTS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="164" />
              <field name="_SC_TIMERS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="11" />
              <field name="_SC_TIMER_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="35" />
              <field name="_SC_TRACE" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="181" />
              <field name="_SC_TRACE_EVENT_FILTER" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="182" />
              <field name="_SC_TRACE_INHERIT" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="183" />
              <field name="_SC_TRACE_LOG" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="184" />
              <field name="_SC_TTY_NAME_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="72" />
              <field name="_SC_TYPED_MEMORY_OBJECTS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="165" />
              <field name="_SC_TZNAME_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="6" />
              <field name="_SC_T_IOV_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="66" />
              <field name="_SC_UCHAR_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="115" />
              <field name="_SC_UINT_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="116" />
              <field name="_SC_UIO_MAXIOV" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="60" />
              <field name="_SC_ULONG_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="117" />
              <field name="_SC_USER_GROUPS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="166" />
              <field name="_SC_USER_GROUPS_R" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="167" />
              <field name="_SC_USHRT_MAX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="118" />
              <field name="_SC_V6_ILP32_OFF32" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="176" />
              <field name="_SC_V6_ILP32_OFFBIG" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="177" />
              <field name="_SC_V6_LP64_OFF64" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="178" />
              <field name="_SC_V6_LPBIG_OFFBIG" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="179" />
              <field name="_SC_VERSION" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="29" />
              <field name="_SC_WORD_BIT" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="107" />
              <field name="_SC_XBS5_ILP32_OFF32" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="125" />
              <field name="_SC_XBS5_ILP32_OFFBIG" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="126" />
              <field name="_SC_XBS5_LP64_OFF64" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="127" />
              <field name="_SC_XBS5_LPBIG_OFFBIG" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="128" />
              <field name="_SC_XOPEN_CRYPT" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="92" />
              <field name="_SC_XOPEN_ENH_I18N" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="93" />
              <field name="_SC_XOPEN_LEGACY" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="129" />
              <field name="_SC_XOPEN_REALTIME" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="130" />
              <field name="_SC_XOPEN_REALTIME_THREADS" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="131" />
              <field name="_SC_XOPEN_SHM" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="94" />
              <field name="_SC_XOPEN_UNIX" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="91" />
              <field name="_SC_XOPEN_VERSION" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="89" />
              <field name="_SC_XOPEN_XCU_VERSION" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="90" />
              <field name="_SC_XOPEN_XPG2" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="98" />
              <field name="_SC_XOPEN_XPG3" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="99" />
              <field name="_SC_XOPEN_XPG4" attrib="32854" fieldtype="Mono.Unix.Native.SysconfName" value="100" />
            </fields>
          </class>
          <class name="SyslogFacility" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="LOG_AUTH" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="32" />
              <field name="LOG_AUTHPRIV" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="80" />
              <field name="LOG_CRON" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="72" />
              <field name="LOG_DAEMON" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="24" />
              <field name="LOG_FTP" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="88" />
              <field name="LOG_KERN" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="0" />
              <field name="LOG_LOCAL0" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="128" />
              <field name="LOG_LOCAL1" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="136" />
              <field name="LOG_LOCAL2" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="144" />
              <field name="LOG_LOCAL3" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="152" />
              <field name="LOG_LOCAL4" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="160" />
              <field name="LOG_LOCAL5" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="168" />
              <field name="LOG_LOCAL6" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="176" />
              <field name="LOG_LOCAL7" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="184" />
              <field name="LOG_LPR" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="48" />
              <field name="LOG_MAIL" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="16" />
              <field name="LOG_NEWS" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="56" />
              <field name="LOG_SYSLOG" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="40" />
              <field name="LOG_USER" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="8" />
              <field name="LOG_UUCP" attrib="32854" fieldtype="Mono.Unix.Native.SyslogFacility" value="64" />
            </fields>
          </class>
          <class name="SyslogLevel" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="LOG_ALERT" attrib="32854" fieldtype="Mono.Unix.Native.SyslogLevel" value="1" />
              <field name="LOG_CRIT" attrib="32854" fieldtype="Mono.Unix.Native.SyslogLevel" value="2" />
              <field name="LOG_DEBUG" attrib="32854" fieldtype="Mono.Unix.Native.SyslogLevel" value="7" />
              <field name="LOG_EMERG" attrib="32854" fieldtype="Mono.Unix.Native.SyslogLevel" value="0" />
              <field name="LOG_ERR" attrib="32854" fieldtype="Mono.Unix.Native.SyslogLevel" value="3" />
              <field name="LOG_INFO" attrib="32854" fieldtype="Mono.Unix.Native.SyslogLevel" value="6" />
              <field name="LOG_NOTICE" attrib="32854" fieldtype="Mono.Unix.Native.SyslogLevel" value="5" />
              <field name="LOG_WARNING" attrib="32854" fieldtype="Mono.Unix.Native.SyslogLevel" value="4" />
            </fields>
          </class>
          <class name="SyslogOptions" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="LOG_CONS" attrib="32854" fieldtype="Mono.Unix.Native.SyslogOptions" value="2" />
              <field name="LOG_NDELAY" attrib="32854" fieldtype="Mono.Unix.Native.SyslogOptions" value="8" />
              <field name="LOG_NOWAIT" attrib="32854" fieldtype="Mono.Unix.Native.SyslogOptions" value="16" />
              <field name="LOG_ODELAY" attrib="32854" fieldtype="Mono.Unix.Native.SyslogOptions" value="4" />
              <field name="LOG_PERROR" attrib="32854" fieldtype="Mono.Unix.Native.SyslogOptions" value="32" />
              <field name="LOG_PID" attrib="32854" fieldtype="Mono.Unix.Native.SyslogOptions" value="1" />
            </fields>
          </class>
          <class name="Timespec" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes />
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.Timespec]" />
            </interfaces>
            <fields>
              <field name="tv_nsec" attrib="6" fieldtype="System.Int64" />
              <field name="tv_sec" attrib="6" fieldtype="System.Int64">
                <attributes />
              </field>
            </fields>
            <methods>
              <method name="Equals(Mono.Unix.Native.Timespec)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Timespec" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.Native.Timespec, Mono.Unix.Native.Timespec)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Timespec" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Timespec" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.Native.Timespec, Mono.Unix.Native.Timespec)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Timespec" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Timespec" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Timeval" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes />
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.Timeval]" />
            </interfaces>
            <fields>
              <field name="tv_sec" attrib="6" fieldtype="System.Int64">
                <attributes />
              </field>
              <field name="tv_usec" attrib="6" fieldtype="System.Int64">
                <attributes />
              </field>
            </fields>
            <methods>
              <method name="Equals(Mono.Unix.Native.Timeval)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Timeval" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.Native.Timeval, Mono.Unix.Native.Timeval)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Timeval" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Timeval" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.Native.Timeval, Mono.Unix.Native.Timeval)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Timeval" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Timeval" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Timezone" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes />
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.Timezone]" />
            </interfaces>
            <fields>
              <field name="tz_minuteswest" attrib="6" fieldtype="System.Int32" />
            </fields>
            <methods>
              <method name="Equals(Mono.Unix.Native.Timezone)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Timezone" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.Native.Timezone, Mono.Unix.Native.Timezone)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Timezone" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Timezone" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.Native.Timezone, Mono.Unix.Native.Timezone)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Timezone" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Timezone" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UnixAddressFamily" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="AF_ALG" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="38" />
              <field name="AF_APPLETALK" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="5" />
              <field name="AF_ASH" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="18" />
              <field name="AF_ATMPVC" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="8" />
              <field name="AF_ATMSVC" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="20" />
              <field name="AF_AX25" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="3" />
              <field name="AF_BLUETOOTH" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="31" />
              <field name="AF_BRIDGE" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="7" />
              <field name="AF_CAIF" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="37" />
              <field name="AF_CAN" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="29" />
              <field name="AF_DECnet" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="12" />
              <field name="AF_ECONET" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="19" />
              <field name="AF_IEEE802154" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="36" />
              <field name="AF_INET" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="2" />
              <field name="AF_INET6" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="10" />
              <field name="AF_IPX" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="4" />
              <field name="AF_IRDA" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="23" />
              <field name="AF_ISDN" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="34" />
              <field name="AF_IUCV" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="32" />
              <field name="AF_KEY" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="15" />
              <field name="AF_LLC" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="26" />
              <field name="AF_NETBEUI" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="13" />
              <field name="AF_NETLINK" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="16" />
              <field name="AF_NETROM" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="6" />
              <field name="AF_NFC" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="39" />
              <field name="AF_PACKET" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="17" />
              <field name="AF_PHONET" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="35" />
              <field name="AF_PPPOX" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="24" />
              <field name="AF_RDS" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="21" />
              <field name="AF_ROSE" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="11" />
              <field name="AF_RXRPC" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="33" />
              <field name="AF_SECURITY" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="14" />
              <field name="AF_SNA" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="22" />
              <field name="AF_TIPC" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="30" />
              <field name="AF_UNIX" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="1" />
              <field name="AF_UNSPEC" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="0" />
              <field name="AF_VSOCK" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="40" />
              <field name="AF_WANPIPE" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="25" />
              <field name="AF_X25" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="9" />
              <field name="Unknown" attrib="32854" fieldtype="Mono.Unix.Native.UnixAddressFamily" value="65536" />
            </fields>
          </class>
          <class name="UnixSocketControlMessage" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="SCM_CREDENTIALS" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketControlMessage" value="2" />
              <field name="SCM_RIGHTS" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketControlMessage" value="1" />
            </fields>
          </class>
          <class name="UnixSocketFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="SOCK_CLOEXEC" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketFlags" value="524288" />
              <field name="SOCK_NONBLOCK" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketFlags" value="2048" />
            </fields>
          </class>
          <class name="UnixSocketOptionName" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="SO_ACCEPTCONN" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="30" />
              <field name="SO_ATTACH_FILTER" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="26" />
              <field name="SO_BINDTODEVICE" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="25" />
              <field name="SO_BROADCAST" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="6" />
              <field name="SO_BSDCOMPAT" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="14" />
              <field name="SO_BUSY_POLL" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="46" />
              <field name="SO_DEBUG" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="1" />
              <field name="SO_DETACH_FILTER" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="27" />
              <field name="SO_DOMAIN" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="39" />
              <field name="SO_DONTROUTE" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="5" />
              <field name="SO_ERROR" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="4" />
              <field name="SO_KEEPALIVE" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="9" />
              <field name="SO_LINGER" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="13" />
              <field name="SO_LOCK_FILTER" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="44" />
              <field name="SO_MARK" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="36" />
              <field name="SO_MAX_PACING_RATE" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="47" />
              <field name="SO_NOFCS" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="43" />
              <field name="SO_NO_CHECK" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="11" />
              <field name="SO_OOBINLINE" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="10" />
              <field name="SO_PASSCRED" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="16" />
              <field name="SO_PASSSEC" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="34" />
              <field name="SO_PEEK_OFF" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="42" />
              <field name="SO_PEERCRED" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="17" />
              <field name="SO_PEERNAME" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="28" />
              <field name="SO_PEERSEC" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="31" />
              <field name="SO_PRIORITY" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="12" />
              <field name="SO_PROTOCOL" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="38" />
              <field name="SO_RCVBUF" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="8" />
              <field name="SO_RCVBUFFORCE" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="33" />
              <field name="SO_RCVLOWAT" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="18" />
              <field name="SO_RCVTIMEO" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="20" />
              <field name="SO_REUSEADDR" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="2" />
              <field name="SO_REUSEPORT" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="15" />
              <field name="SO_RXQ_OVFL" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="40" />
              <field name="SO_SECURITY_AUTHENTICATION" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="22" />
              <field name="SO_SECURITY_ENCRYPTION_NETWORK" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="24" />
              <field name="SO_SECURITY_ENCRYPTION_TRANSPORT" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="23" />
              <field name="SO_SELECT_ERR_QUEUE" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="45" />
              <field name="SO_SNDBUF" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="7" />
              <field name="SO_SNDBUFFORCE" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="32" />
              <field name="SO_SNDLOWAT" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="19" />
              <field name="SO_SNDTIMEO" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="21" />
              <field name="SO_TIMESTAMP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="29" />
              <field name="SO_TIMESTAMPING" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="37" />
              <field name="SO_TIMESTAMPNS" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="35" />
              <field name="SO_TYPE" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="3" />
              <field name="SO_WIFI_STATUS" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketOptionName" value="41" />
            </fields>
          </class>
          <class name="UnixSocketProtocol" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="IPPROTO_AH" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="51" />
              <field name="IPPROTO_BEETPH" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="94" />
              <field name="IPPROTO_COMP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="108" />
              <field name="IPPROTO_DCCP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="33" />
              <field name="IPPROTO_EGP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="8" />
              <field name="IPPROTO_ENCAP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="98" />
              <field name="IPPROTO_ESP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="50" />
              <field name="IPPROTO_GRE" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="47" />
              <field name="IPPROTO_ICMP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="1" />
              <field name="IPPROTO_IDP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="22" />
              <field name="IPPROTO_IGMP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="2" />
              <field name="IPPROTO_IP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="1024" />
              <field name="IPPROTO_IPIP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="4" />
              <field name="IPPROTO_IPV6" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="41" />
              <field name="IPPROTO_MTP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="92" />
              <field name="IPPROTO_PIM" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="103" />
              <field name="IPPROTO_PUP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="12" />
              <field name="IPPROTO_RAW" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="255" />
              <field name="IPPROTO_RSVP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="46" />
              <field name="IPPROTO_SCTP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="132" />
              <field name="IPPROTO_TCP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="6" />
              <field name="IPPROTO_TP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="29" />
              <field name="IPPROTO_UDP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="17" />
              <field name="IPPROTO_UDPLITE" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="136" />
              <field name="SOL_SOCKET" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketProtocol" value="2048" />
            </fields>
          </class>
          <class name="UnixSocketType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="SOCK_DCCP" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketType" value="6" />
              <field name="SOCK_DGRAM" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketType" value="2" />
              <field name="SOCK_PACKET" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketType" value="10" />
              <field name="SOCK_RAW" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketType" value="3" />
              <field name="SOCK_RDM" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketType" value="4" />
              <field name="SOCK_SEQPACKET" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketType" value="5" />
              <field name="SOCK_STREAM" attrib="32854" fieldtype="Mono.Unix.Native.UnixSocketType" value="1" />
            </fields>
          </class>
          <class name="Utimbuf" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes />
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.Utimbuf]" />
            </interfaces>
            <fields>
              <field name="actime" attrib="6" fieldtype="System.Int64">
                <attributes />
              </field>
              <field name="modtime" attrib="6" fieldtype="System.Int64">
                <attributes />
              </field>
            </fields>
            <methods>
              <method name="Equals(Mono.Unix.Native.Utimbuf)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Utimbuf" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.Native.Utimbuf, Mono.Unix.Native.Utimbuf)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Utimbuf" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Utimbuf" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.Native.Utimbuf, Mono.Unix.Native.Utimbuf)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Utimbuf" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Utimbuf" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Utsname" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IEquatable`1[Mono.Unix.Native.Utsname]" />
            </interfaces>
            <fields>
              <field name="domainname" attrib="6" fieldtype="System.String" />
              <field name="machine" attrib="6" fieldtype="System.String" />
              <field name="nodename" attrib="6" fieldtype="System.String" />
              <field name="release" attrib="6" fieldtype="System.String" />
              <field name="sysname" attrib="6" fieldtype="System.String" />
              <field name="version" attrib="6" fieldtype="System.String" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Equals(Mono.Unix.Native.Utsname)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Unix.Native.Utsname" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="op_Equality(Mono.Unix.Native.Utsname, Mono.Unix.Native.Utsname)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Utsname" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Utsname" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Unix.Native.Utsname, Mono.Unix.Native.Utsname)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="lhs" position="0" attrib="0" type="Mono.Unix.Native.Utsname" />
                  <parameter name="rhs" position="1" attrib="0" type="Mono.Unix.Native.Utsname" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="WaitOptions" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="WNOHANG" attrib="32854" fieldtype="Mono.Unix.Native.WaitOptions" value="1" />
              <field name="WUNTRACED" attrib="32854" fieldtype="Mono.Unix.Native.WaitOptions" value="2" />
            </fields>
          </class>
          <class name="XattrFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="XATTR_AUTO" attrib="32854" fieldtype="Mono.Unix.Native.XattrFlags" value="0" />
              <field name="XATTR_CREATE" attrib="32854" fieldtype="Mono.Unix.Native.XattrFlags" value="1" />
              <field name="XATTR_REPLACE" attrib="32854" fieldtype="Mono.Unix.Native.XattrFlags" value="2" />
            </fields>
          </class>
        </classes>
      </namespace>
    </namespaces>
  </assembly>
</assemblies>